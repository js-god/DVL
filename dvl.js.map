{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///dvl.js","webpack:///webpack/bootstrap 5f34be534c16efafd50a","webpack:///./src/core.coffee","webpack:///./src/bind.coffee","webpack:///./src/util.coffee","webpack:///./~/d3/d3.js","webpack:///./src/async.coffee","webpack:///./src/html.coffee","webpack:///./src/misc.coffee","webpack:///./src/snap.coffee","webpack:///./src/svg.coffee","webpack:///./lib/lift.js","webpack:///./src/dataStructure/priorityQueue.coffee","webpack:///./src/dataStructure/set.coffee","webpack:///./src/index.coffee"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","DVLBlock","DVLConst","DVLVar","DVLWorker","PriorityQueue","Set","collect_notify","curBlock","curCollectListener","curNotifyListener","default_compare","dvl","end_notify_collect","fn","getBase","init_notify","k","levelPriorityQueue","lift","nextObjId","nsId","op_to_lift","sortGraph","start_notify_collect","toNotify","uniqById","utilModule","variables","workers","__slice","slice","__indexOf","indexOf","item","length","version","_variables","_workers","a","b","val","v","changed","toString","tag","arguments","set","lazyValue","update","getPrev","hasChanged","resetChanged","notify","discard","_ref","compare","verify","apply","applyValid","applyAlways","pluck","prop","pluckEx","project","fns","down","id","prev","vlen","lazy","listeners","changers","compareFn","push","addMemeber","resolveLazy","proj","parent","fnDown","pv","verifyFn","fnUp","isEqual","splice","me","wrap","register","listen","change","_fns","up","def","knows","ctx","lvl","min","nextWorker","nwid","prevWorker","_i","_j","_k","_l","_len","_len1","_len2","_len3","_ref1","_ref2","_ref3","_ref4","updates","level","add","Infinity","valueOf","addChange","updatesChanged","uv","addListen","changedSave","remove","_arg","listenConst","noRun","worker","_len4","_m","Error","TypeError","typeOf","map","owns","thing","removeMemeber","blockFn","args","block","ret","group","captured_notifies","fnArgs","Array","wrapConstIfNeeded","wrapVarIfNeeded","wrapVar","namespace","str","vs","allowConst","res","seen","from","getInboundCount","ic","idPriorityQueue","inboundCount","isSource","j","workerListen","workerListenLength","workersLength","count","shift","clearAll","listener","changedInNotify","lastNotifyRun","notifyChainReset","visitedListener","visited","errorMessage","prevStr","join","zero","ident","x","identity","acc","column","makeAcc","col","String","debug","note","obj","print","console","log","allowNull","invalid","out","isArray","concat","f","nulls","r","send","chain","h","_f","_h","op","liftedFn","or","arg","and","sum","sub","mult","list","iff","cond","truthy","falsy","iffEq","lhs","rhs","iffLt","makeTranslate","y","bind","bindSingle","class_concat","def_data_fn","id_class_spliter","argsOn","attr","attrList","data","html","nodeType","onList","part","parts","propertyList","self","staticClass","style","styleList","text","transition","transitionExit","on","split","substring","add1","add2","addO","e","enter","ex","force","postTrans","preTrans","t","_data","_join","_parent","_transition","a1","a2","selectAll","append","duration","delay","ease","exit","empty","datum","staticId","sel","_datum","type","toLowerCase","strObj","keys","sort","uniq","array","cmp","aKeys","atype","bKeys","btype","getTime","source","global","ignoreCase","multiline","clone","Date","escapeHTML","replace","d3_documentElement","node","ownerDocument","document","documentElement","d3_window","defaultView","d3_ascending","NaN","d3_number","d3_numeric","isNaN","d3_bisector","left","lo","hi","mid","right","d3_zipLength","d3_range_integerScale","d3_class","ctor","properties","key","d3_Map","_","create","d3_map_escape","d3_map_proto","d3_map_zero","d3_map_unescape","d3_map_has","d3_map_remove","d3_map_keys","d3_map_size","size","d3_map_empty","d3_Set","d3_identity","d3_rebind","target","method","d3_vendorSymbol","charAt","toUpperCase","d3_vendorPrefixes","prefixName","d3_noop","d3_dispatch","d3_dispatch_event","dispatch","event","z","listenerByName","d3_eventPreventDefault","d3","preventDefault","d3_eventSource","sourceEvent","d3_eventDispatch","of","thiz","argumentz","e1","e0","d3_selection","groups","d3_subclass","d3_selectionPrototype","d3_selection_selector","selector","d3_select","d3_selection_selectorAll","d3_selectAll","d3_selection_attr","attrNull","removeAttribute","attrNullNS","removeAttributeNS","space","local","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","ns","qualify","d3_collapse","trim","d3_selection_classedRe","RegExp","requote","d3_selection_classes","d3_selection_classed","classedConstant","classedFunction","d3_selection_classedName","re","classList","getAttribute","lastIndex","test","d3_selection_style","priority","styleNull","removeProperty","styleConstant","setProperty","styleFunction","d3_selection_property","propertyNull","propertyConstant","propertyFunction","d3_selection_creator","namespaceURI","createElementNS","createElement","createNS","d3_selectionRemove","parentNode","removeChild","d3_selection_dataNode","__data__","d3_selection_filter","d3_selectMatches","d3_selection_sortComparator","comparator","d3_selection_each","callback","d3_selection_enter","selection","d3_selection_enterPrototype","d3_selection_enterInsertBefore","i0","j0","d3_selection_on","capture","onRemove","removeEventListener","$","onAdd","d3_array","addEventListener","removeAll","match","d3_selection_onListener","filter","d3_selection_onFilters","d3_selection_onFilter","related","relatedTarget","compareDocumentPosition","d3_event_dragSuppress","d3_event_dragId","click","w","select","d3_event_dragSelect","suppressClick","off","setTimeout","d3_mousePoint","container","changedTouches","svg","ownerSVGElement","createSVGPoint","point","d3_mouse_bug44083","window","scrollX","scrollY","position","top","margin","padding","border","ctm","getScreenCTM","pageX","pageY","clientX","clientY","matrixTransform","inverse","rect","getBoundingClientRect","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","d3_sgn","d3_cross2d","d3_acos","π","Math","acos","d3_asin","halfπ","asin","d3_sinh","exp","d3_cosh","d3_tanh","d3_haversin","sin","d3_color","d3_hsl","d3_rgb_parse","d3_rgb_hsl","d3_hsl_rgb","m1","m2","vv","round","d3_rgb","d3_hcl","d3_lab","d3_lab_hcl","d3_rgb_lab","rgb","g","d3_hcl_lab","cos","d3_radians","d3_lab_rgb","d3_lab_xyz","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_xyz_rgb","atan2","d3_degrees","sqrt","d3_xyz_lab","pow","d3_rgbNumber","d3_rgbString","d3_rgb_hex","max","format","hsl","color","exec","parseFloat","d3_rgb_parseNumber","d3_rgb_names","parseInt","d3_rgb_xyz","d3_functor","d3_xhrType","response","url","mimeType","d3_xhr","respond","result","status","request","d3_xhrHasResponse","xhr","error","load","headers","XMLHttpRequest","responseType","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","progress","header","forEach","open","setRequestHeader","overrideMimeType","beforesend","abort","rebind","d3_xhr_fixCallback","responseText","d3_timer","then","now","time","timer","d3_timer_queueTail","d3_timer_queueHead","d3_timer_interval","d3_timer_timeout","clearTimeout","d3_timer_frame","d3_timer_step","d3_timer_mark","d3_timer_sweep","isFinite","t0","t1","d3_format_precision","ceil","LN10","d3_formatPrefix","abs","scale","symbol","d3_locale_numberFormat","locale","locale_decimal","decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","width","reverse","specifier","d3_format_re","fill","align","sign","zfill","comma","precision","prefix","suffix","integer","exponent","d3_format_types","d3_format_typeDefault","zcomma","fullSuffix","negative","unit","formatPrefix","before","after","lastIndexOf","d3_date_utc","UTC","d3_time_interval","step","number","date","d0","d1","offset","d3_date","range","dt","times","range_utc","utc","floor","d3_time_interval_utc","d3_locale_timeFormat","d3_time_format","template","string","charCodeAt","d3_time_formatPads","d3_time_formats","parse","H","M","S","L","Z","d3_time_parse","localZ","setFullYear","W","getDay","U","setHours","d3_time_parsers","d3_time_parseWeekdayAbbrev","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_parseWeekday","d3_time_dayRe","d3_time_dayLookup","d3_time_parseMonthAbbrev","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","d3_time_parseMonth","d3_time_monthRe","d3_time_monthLookup","d3_time_parseLocaleFull","d3_time_parseLocaleDate","d3_time_parseLocaleTime","X","d3_time_parseAmPm","d3_time_periodLookup","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","multi","d3_time_formatMulti","d3_time_formatRe","d3_time_formatLookup","A","getMonth","B","d3_time_formatPad","getDate","getHours","I","d3_time","dayOfYear","getMilliseconds","getMinutes","getSeconds","sundayOfYear","mondayOfYear","getFullYear","Y","d3_time_zone","%","d3_time_parseDay","d3_time_parseHour24","d3_time_parseDayOfYear","d3_time_parseMilliseconds","d3_time_parseMonthNumber","d3_time_parseMinutes","d3_time_parseSeconds","d3_time_parseWeekNumberSunday","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberMonday","d3_time_parseYear","d3_time_parseFullYear","d3_time_parseZone","d3_time_parseLiteralPercent","names","d3_time_numberRe","d3_time_expandYear","getTimezoneOffset","zs","zh","zm","d3_time_percentRe","formats","d3_adder","d3_adderSum","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","d3_geo_streamLine","coordinates","closed","coordinate","lineStart","lineEnd","d3_geo_streamPolygon","polygonStart","polygonEnd","d3_geo_areaRingStart","nextPoint","λ","φ","dλ","λ0","sdλ","adλ","cosφ","sinφ","sinφ0","u","cosφ0","d3_geo_areaRingSum","λ00","φ00","d3_geo_area","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","ε","d3_geo_centroidPoint","d3_geo_centroidPointXYZ","d3_geo_centroidW0","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidLineStart","y0","z0","x0","d3_geo_centroidW1","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroid","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","cx","cy","cz","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_compose","compose","invert","d3_true","d3_geo_clipPolygon","segments","clipStartInside","interpolate","subject","clip","segment","p0","p1","d3_geo_clipPolygonIntersection","d3_geo_clipPolygonLinkCircular","entry","points","start","current","isSubject","other","d3_geo_clip","pointVisible","clipLine","clipStart","rotate","pointLine","line","pointRing","ring","ringListener","ringStart","ringEnd","clean","ringSegments","buffer","pop","polygon","polygonStarted","d3_geo_clipSegmentLength1","rotatedClipStart","merge","d3_geo_pointInPolygon","d3_geo_clipSort","sphere","d3_geo_clipBufferListener","lines","rejoin","d3_geo_clipAntimeridianLine","φ0","sλ0","λ1","φ1","sλ1","d3_geo_clipAntimeridianIntersect","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianInterpolate","to","direction","meridian","parallel","meridianNormal","polarAngle","winding","reset","point0","antimeridian","τ","arc","intersection","φarc","d3_geo_clipCircle","radius","visible","cr","c0","v0","v00","point2","point1","smallRadius","code","intersect","notHemisphere","two","pa","pb","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","uu","t2","q","δλ","polar","q1","d3_geo_circleInterpolate","d3_geom_clipLine","x1","y1","ax","ay","bx","by","dx","dy","d3_geo_clipExtent","corner","comparePoints","ca","cb","insidePolygon","wn","linePoint","first","v_","x_","y_","x__","y__","v__","bufferListener","d3_geo_clipExtentMAX","listener_","inside","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","forward","ρ","C","ρ0","ρ0_y","d3_geo_pathAreaRingStart","d3_geo_pathAreaPolygon","x00","y00","d3_geo_pathArea","d3_geo_pathBoundsPoint","d3_geo_pathBoundsX0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY0","d3_geo_pathBoundsY1","d3_geo_pathBuffer","pointCircle","pointLineStart","stream","lineEndPolygon","d3_geo_pathBufferCircle","pointRadius","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroid","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_pathContext","context","moveTo","lineTo","closePath","d3_geo_resample","resample","maxDepth","resampleRecursive","resampleNone","d3_geo_transformPoint","resampleLineTo","a0","b0","ringPoint","a00","b00","c00","b1","depth","d2","δ2","φ2","λ2","x2","y2","dx2","dy2","dz","cosMinDistance","d3_geo_pathProjectStream","d3_geo_projectionRadians","d3_geo_transform","d3_geo_projection","projection","projectRotate","δx","δy","d3_geo_rotation","δφ","δγ","center","invalidate","valid","projectResample","preclip","d3_geo_clipAntimeridian","postclip","clipAngle","clipExtent","output","translate","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","angle","PI","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","d3_geo_interpolate","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","distance","d3_geo_lengthLineStart","cosΔλ","d3_geo_lengthSum","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_conicConformal","F","tan","d3_geo_mercator","d3_geo_conicEquidistant","G","d3_geo_mercatorProjection","clipAuto","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","ua","d3_geom_polygonClosed","d3_geom_voronoiBeach","d3_geom_voronoiRedBlackNode","edge","site","circle","d3_geom_voronoiCreateBeach","beach","d3_geom_voronoiBeachPool","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiBeaches","d3_geom_voronoiRemoveBeach","vertex","previous","P","next","N","disappearing","lArc","unshift","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","R","newArc","insert","lSite","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiCloseCells","extent","cell","iHalfEdge","halfEdges","nHalfEdges","end","cells","d3_geom_voronoiCells","iCell","prepare","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiHalfEdgeOrder","d3_geom_voronoiCircle","cSite","ε2","ha","d3_geom_voronoiCirclePool","d3_geom_voronoiCircles","d3_geom_voronoiFirstCircle","d3_geom_voronoiClipEdges","d3_geom_voronoiEdges","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","rx","ry","fx","fy","d3_geom_voronoiEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","tree","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","diagram","d3_geom_voronoiTriangleArea","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_geom_quadtreeNode","leaf","nodes","d3_geom_quadtreeVisit","sx","sy","children","d3_geom_quadtreeFind","closestPoint","minDistance2","find","distance2","xm","ym","below","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","index","interpolators","d3_interpolateArray","na","nb","n0","d3_ease_clamp","d3_ease_reverse","d3_ease_reflect","d3_ease_quad","d3_ease_cubic","d3_ease_cubicInOut","t3","d3_ease_poly","d3_ease_sin","d3_ease_exp","d3_ease_circle","d3_ease_elastic","d3_ease_back","d3_ease_bounce","d3_interpolateHcl","hcl","ah","ac","al","bh","bc","bl","d3_interpolateHsl","as","d3_interpolateLab","lab","aa","ba","d3_interpolateRound","d3_transform","r0","r1","kx","d3_transformNormalize","kz","d3_transformDot","ky","d3_transformCombine","skew","d3_interpolateTransformPop","d3_interpolateTranslate","ta","tb","d3_interpolateRotate","ra","rb","d3_interpolateSkew","wa","wb","d3_interpolateScale","ka","kb","d3_interpolateTransform","transform","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","link","lca","d3_layout_bundleLeastCommonAncestor","d3_layout_bundleAncestors","ancestors","aNodes","bNodes","aNode","bNode","sharedNode","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","d3_layout_forceAccumulate","quad","alpha","charges","charge","random","pointCharge","d3_layout_hierarchyRebind","hierarchy","links","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","child","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","d3_layout_stackMaxIndex","d3_layout_stackReduceSum","reduce","d3_layout_stackSum","d3_layout_histogramBinSturges","values","d3_layout_histogramBinFixed","LN2","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","bound","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","s1","s2","d3_layout_packUnlink","d3_layout_packTransform","db","da","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","d3_layout_treeShift","d3_layout_treeAncestor","vim","ancestor","d3_layout_clusterY","d3_layout_clusterX","d3_layout_clusterLeft","d3_layout_clusterRight","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","domain","stop","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","i1","d3_scale_niceStep","d3_scale_niceIdentity","d3_scale_polylinear","bisect","d3_scale_linear","clamp","rescale","linear","input","Number","rangeRound","ticks","d3_scale_linearTicks","tickFormat","d3_scale_linearTickFormat","d3_scale_linearNice","copy","d3_scale_linearRebind","d3_scale_linearTickRange","span","err","d3_scale_linearPrecision","d3_scale_linearFormatPrecision","d3_scale_linearFormatSignificant","d3_scale_log","base","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_pow","powp","d3_scale_powPow","powb","d3_scale_ordinal","ranger","steps","rangeBand","xi","has","rangePoints","rangeRoundPoints","rangeBands","outerPadding","rangeRoundBands","d3_scale_quantile","thresholds","quantile","quantiles","invertExtent","d3_scale_quantize","d3_scale_threshold","d3_scale_identity","d3_zero","d3_svg_arcInnerRadius","innerRadius","d3_svg_arcOuterRadius","outerRadius","d3_svg_arcStartAngle","startAngle","d3_svg_arcEndAngle","endAngle","d3_svg_arcPadAngle","padAngle","d3_svg_arcSweep","d3_svg_arcCornerTangents","rc","cw","x01","y01","ox","oy","D","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","tension","defined","d3_svg_lineLinear","interpolateKey","d3_svg_lineInterpolators","d3_svg_lineLinearClosed","d3_svg_lineStep","path","d3_svg_lineStepBefore","d3_svg_lineStepAfter","d3_svg_lineCardinalOpen","d3_svg_lineHermite","d3_svg_lineCardinalTangents","d3_svg_lineCardinalClosed","d3_svg_lineCardinal","tangents","pi","lp","p2","d3_svg_lineBasis","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","d3_svg_lineBasisOpen","d3_svg_lineBasisClosed","d3_svg_lineBundle","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","d3_svg_lineMonotone","d3_svg_lineRadial","d3_svg_area","area","points1","interpolateReverse","points0","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_diagonalRadialProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","d3_selection_interruptNS","lock","activeId","active","interrupt","d3_transition","d3_transitionPrototype","d3_transition_tween","tween","d3_transition_text","textContent","d3_transitionNamespace","d3_transitionNode","inherit","schedule","elapsed","cancelId","cancel","tweens","tick","d3_svg_axisX","d3_svg_axisY","d3_time_formatIsoNative","toISOString","d3_time_scale","methods","tickMethod","d3_time_scaleSteps","year","d3_time_scaleMilliseconds","d3_time_scaleDate","interval","skip","skipped","d3_json","JSON","d3_html","d3_document","createRange","selectNode","body","createContextualFragment","d3_arraySlice","childNodes","d3_element_prototype","Element","d3_element_setAttribute","d3_element_setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","ascending","descending","mean","median","numbers","variance","deviation","d3_bisect","bisectLeft","bisectRight","bisector","shuffle","permute","indexes","permutes","pairs","zip","zips","transpose","matrix","entries","arrays","merged","nest","mapType","rollup","sortValues","keyValue","setter","valuesByKey","sortKey","sortKeys","keyMap","order","behavior","d3_requote_re","__proto__","querySelector","querySelectorAll","d3_selectMatcher","matches","Sizzle","matchesSelector","subgroup","subnode","subgroups","d3_nsPrefix","xhtml","xlink","xml","xmlns","getAttributeNS","each","classed","contains","getComputedStyle","getPropertyValue","innerHTML","appendChild","insertBefore","groupData","nodeData","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","nextSibling","upgroup","mouseenter","mouseleave","mouse","navigator","userAgent","touch","touches","drag","mousedown","touchstart","dragstart","move","moved","position1","dragId","position0","dragged","dragOffset","ended","dragSubject","dragName","dragRestore","that","origin","τε","SQRT2","ρ2","ρ4","interpolateZoom","ux0","uy0","w0","ux1","uy1","w1","coshr0","zoom","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","location","view","scaleTo","scaleExtent","translateTo","zoomTo","__chart__","center0","zoomstarted","zooming","zoomed","zoomended","location0","mousemove","mouseup","d3_selection_interrupt","relocate","scale0","locations0","started","touchmove","touchend","targets","touchtime","distance0","l0","l1","distance1","scale1","zoomName","mousewheelTimer","translate0","d3_behavior_zoomDelta","shiftKey","d3_behavior_zoomInfinity","deltaY","deltaMode","wheelDelta","detail","view1","d3_transitionInheritId","d3_hslPrototype","brighter","darker","d3_hclPrototype","d3_lab_K","d3_labPrototype","d3_rgbPrototype","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","functor","dsv","delimiter","row","typedResponse","formatRow","formatValue","reFormat","delimiterCode","parseRows","Function","stringify","token","EOF","eol","EOL","rows","formatRows","fieldSet","fields","field","csv","tsv","flush","d3_formatPrefixes","fromCharCode","toPrecision","toExponential","toFixed","getUTCDate","getUTCDay","getUTCFullYear","getUTCHours","getUTCMilliseconds","getUTCMinutes","getUTCMonth","getUTCSeconds","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setUTCFullYear","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","day","years","week","sunday","weeks","weekOfYear","-","0","numberFormat","timeFormat","d3_locale_enUS","geo","d3_adderTemp","d3_geo_streamObjectType","Feature","feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","d3_geo_areaSum","bounds","ranges","normal","equatorial","inflection","λ_","λi","φi","dλSum","λ__","φ__","compareRanges","withinRange","best","centroid","conicEqualArea","raw","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathBounds","contextStream","cacheStream","projectStream","projectionMutator","equirectangular","Δλ","sinΔλ","sinφ1","graticule","X0","DX","X1","Y0","DY","Y1","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","stereographic","transverseMercator","geom","vertices","flippedPoints","upper","lower","skipLeft","skipRight","d3_geom_polygonPrototype","grandpa","uncle","sibling","voronoi","polygons","d3_geom_voronoiClipExtent","triangles","s0","delaunay","quadtree","nx","ny","insertChild","nPoint","xs","ys","x1_","y1_","x2_","y2_","compat","visit","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolateArray","d3_ease_default","d3_ease","poly","cubic","elastic","back","bounce","d3_ease_mode","in","in-out","out-in","interpolateHcl","interpolateHsl","interpolateLab","interpolateRound","baseVal","consolidate","d3_transformIdentity","interpolateTransform","layout","bundle","paths","chord","relayout","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","resort","repulse","dw","dn","theta2","chargeDistance2","dragmove","resume","distances","strengths","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","d3_layout_forceChargeDistance2","gravity","weight","chargeDistance","theta","dimension","neighbors","candidates","stack","childs","revalue","partition","pie","arcs","d3_layout_pieSortByValue","series","orders","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","sums","bottom","tops","bottoms","default","silhouette","wiggle","s3","o0","expand","histogram","bin","bins","valuer","binner","frequency","pack","root0","root1","wrapTree","firstWalk","secondWalk","nodeSize","sizeNode","tx","separation","node1","queue","siblings","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","cluster","previousNode","treemap","squarify","score","pad","remaining","mode","worst","stickify","rmax","rmin","ratio","stickies","sticky","padFunction","padConstant","µ","σ","logNormal","bates","irwinHall","ordinal","category10","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","quantize","threshold","circleSegment","rp","ap","padRadius","d3_svg_arcAuto","h1","h0","cornerRadius","rc1","rc0","oc","kc","lc","t30","t12","t03","t21","linear-closed","step-before","step-after","basis","basis-open","basis-closed","cardinal","cardinal-open","cardinal-closed","monotone","radial","equals","curve","diagonal","p3","projection_","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionInherit","subnodes","nameNS","attrTween","attrTweenNS","styleString","styleTween","inheritId","id0","id1","axis","tickTransform","tickValues","tickArguments_","tickFormat_","tickEnter","tickExit","tickUpdate","tickSpacing","innerTickSize","tickPadding","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","orient","outerTickSize","d3_svg_axisDefaultOrient","d3_svg_axisOrients","tickSize","tickSubdivide","brush","brushstart","background","resize","resizes","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","redraw","xExtent","yExtent","keydown","keyCode","dragging","keyup","brushmove","altKey","resizingX","move1","resizingY","event_","yClamp","xClamp","yExtentDomain","xExtentDomain","brushend","eventTarget","resizing","ey","d3_svg_brushResizes","extent1","extent0","yi","clear","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","iso","second","seconds","minute","minutes","hour","timezone","hours","month","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","json","responseXML","ajaxManagers","async","blockDummy","makeManager","nextGroupId","outstanding","addHoock","getData","initRequestBundle","inputChange","makeRequest","maybeDone","nextQueryId","queries","requestBundle","resVal","query","onError","curAjax","processResponce","oldAjax","oldProcessResponce","requestCount","responceProcessed","_query","invalidOnLoad","requester","makeRequestLater","newRequestBundle","groupId","getGroupId","ajax","complete","dataFn","jQuery","dataType","contentType","processData","success","textStatus","cacheWrap","cache","keyFn","timeout","_arg1","cutoff","newCache","oldestQuery","oldestTime","tout","_results","added","waiting","htmlModule","resizer","onResize","_dimension","hideInvalid","updateHtml","what","inv","classStr","highlight","icons","label","listClass","myOnEnter","myOnLeave","onClick","onEnter","onLeave","onSelect","selections","ul","extras","_selection","_selections","_highlight","classParts","linkVal","_base","href","addIcons","cont","_class","_label","_link","el","icon","title","stopPropagation","combobox","disabled","divCont","filterCharacters","filteredData","focus","keepOnClick","menuAnchor","menuCont","menuOpen","myOnSelect","selectionLabel","updateScroll","valueOut","_filterCharacters","_filterPhrase","_filteredData","class","_classStr","_menuOpen","_disabled","tabIndex","blur","element","pos","selectionIndex","_menuCont","scrollHeight","scrollTop","which","_focus","_valueOut","activeElement","icon_onSelect","_menuAnchor","selLabel","titleText","dropdown","userChar","onChange","selChange","selectEl","_selectEl","display","idx","addPxIfNeeded","defaultCompareModes","numberRegEx","table","bodyCol","columns","comp","compareList","compareMap","headParent","headTable","headerCol","onRow","rowClass","rowLimit","sortDir","sortOn","dir","onIndicator","sortable","compareModes","tooltip","headerTooltip","hover","render","indicator","_sortOn","_sortDir","oldCmp","enterLiner","enterTh","headerRow","nc","newColumns","thead","ind","visibleChanged","_indicator","onRowNew","tbody","colSel","dataSorted","rowSel","_compare","_rowClass","_rowLimit","_value","aLink","img","src","imgDiv","button","onObj","sparkline","height","lineFn","dp","miscModule","recorder","_element","timeoutFn","updateSnap","dist","ds","minDatum","minDist","minIdx","clipId","svgModule","clipPath","cp","myId","args2","reduced","nodes_","moveUp_","rootNode","moveDown_","leftChildIndex","rightChildIndex","smallerChildIndex","parentIndex","len","snap","misc","util"],"mappings":"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","file":"dvl.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"dvl\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"dvl\"] = factory();\n\telse\n\t\troot[\"dvl\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"dvl\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"dvl\"] = factory();\n\telse\n\t\troot[\"dvl\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 12);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar DVLBlock, DVLConst, DVLVar, DVLWorker, PriorityQueue, Set, collect_notify, curBlock, curCollectListener, curNotifyListener, default_compare, dvl, end_notify_collect, fn, getBase, init_notify, k, levelPriorityQueue, lift, nextObjId, nsId, op_to_lift, sortGraph, start_notify_collect, toNotify, uniqById, utilModule, variables, workers,\n  __slice = [].slice,\n  __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\n\nlift = __webpack_require__(9);\n\nPriorityQueue = __webpack_require__(10);\n\nSet = __webpack_require__(11);\n\nutilModule = __webpack_require__(2);\n\nnextObjId = 1;\n\ndvl = function(value) {\n  return new DVLVar(value);\n};\n\ndvl.version = '1.5.0';\n\ndvl._variables = variables = [];\n\ndvl._workers = workers = [];\n\ncurBlock = null;\n\ndefault_compare = function(a, b) {\n  return a === b;\n};\n\nDVLConst = (function() {\n  function DVLConst(val) {\n    this.v = val != null ? val : null;\n    this.changed = false;\n    return this;\n  }\n\n  DVLConst.prototype.toString = function() {\n    var tag;\n    tag = this.n ? this.n + ':' : '';\n    return \"[\" + this.tag + this.v + \"]\";\n  };\n\n  DVLConst.prototype.value = function(val) {\n    if (arguments.length) {\n      return this;\n    } else {\n      return this.v;\n    }\n  };\n\n  DVLConst.prototype.set = function() {\n    return this;\n  };\n\n  DVLConst.prototype.lazyValue = function() {\n    return this;\n  };\n\n  DVLConst.prototype.update = function() {\n    return this;\n  };\n\n  DVLConst.prototype.get = function() {\n    return this.v;\n  };\n\n  DVLConst.prototype.getPrev = function() {\n    return this.v;\n  };\n\n  DVLConst.prototype.hasChanged = function() {\n    return this.changed;\n  };\n\n  DVLConst.prototype.resetChanged = function() {\n    return null;\n  };\n\n  DVLConst.prototype.notify = function() {\n    return null;\n  };\n\n  DVLConst.prototype.discard = function() {\n    return null;\n  };\n\n  DVLConst.prototype.name = function() {\n    var _ref;\n    if (arguments.length === 0) {\n      return (_ref = this.n) != null ? _ref : '<anon_const>';\n    } else {\n      this.n = arguments[0];\n      return this;\n    }\n  };\n\n  DVLConst.prototype.compare = function() {\n    if (arguments.length) {\n      return this;\n    } else {\n      return default_compare;\n    }\n  };\n\n  DVLConst.prototype.verify = function() {\n    if (arguments.length) {\n      return this;\n    } else {\n      return null;\n    }\n  };\n\n  DVLConst.prototype.apply = function(fn) {\n    return dvl.apply(this, fn);\n  };\n\n  DVLConst.prototype.applyValid = function(fn) {\n    return dvl.applyValid(this, fn);\n  };\n\n  DVLConst.prototype.applyAlways = function(fn) {\n    return dvl.applyAlways(this, fn);\n  };\n\n  DVLConst.prototype.pluck = function(prop) {\n    return dvl.apply(this, function(d) {\n      return d[prop];\n    });\n  };\n\n  DVLConst.prototype.pluckEx = function(prop) {\n    return dvl.apply(this, function(d) {\n      return d[prop]();\n    });\n  };\n\n  DVLConst.prototype.project = function(fns) {\n    return dvl[\"const\"]((this.v != null) && (fns != null ? fns.down : void 0) ? fns.down.call(null, this.v) : null);\n  };\n\n  return DVLConst;\n\n})();\n\nDVLVar = (function() {\n  function DVLVar(val) {\n    this.v = val != null ? val : null;\n    this.id = nextObjId++;\n    this.prev = null;\n    this.changed = false;\n    this.vlen = -1;\n    this.lazy = null;\n    this.listeners = [];\n    this.changers = [];\n    this.compareFn = default_compare;\n    variables.push(this);\n    if (curBlock) {\n      curBlock.addMemeber(this);\n    }\n    return this;\n  }\n\n  DVLVar.prototype.resolveLazy = function() {\n    if (this.lazy) {\n      this.prev = this.v;\n      this.v = this.lazy();\n      this.lazy = null;\n    }\n  };\n\n  DVLVar.prototype.toString = function() {\n    var tag;\n    tag = this.n ? this.n + ':' : '';\n    return \"[\" + this.tag + this.val + \"]\";\n  };\n\n  DVLVar.prototype.hasChanged = function() {\n    if (this.proj) {\n      return this.proj.parent.hasChanged();\n    } else {\n      return this.changed;\n    }\n  };\n\n  DVLVar.prototype.resetChanged = function() {\n    this.changed = false;\n    return this;\n  };\n\n  DVLVar.prototype.value = function(val) {\n    var fnDown, parent, pv, _ref;\n    if (arguments.length) {\n      val = val != null ? val : null;\n      if (val !== null && this.verifyFn && !this.verifyFn.call(this, val)) {\n        return this;\n      }\n      if (this.compareFn && this.compareFn.call(this, val, this.value())) {\n        return this;\n      }\n      this.set(val);\n      dvl.notify(this);\n      return this;\n    } else {\n      if (this.proj) {\n        _ref = this.proj, parent = _ref.parent, fnDown = _ref.fnDown;\n        pv = parent.value();\n        this.v = pv != null ? fnDown.call(this.v, pv) : null;\n      } else {\n        this.resolveLazy();\n      }\n      return this.v;\n    }\n  };\n\n  DVLVar.prototype.set = function(val) {\n    var fnUp, parent, _ref;\n    val = val != null ? val : null;\n    if (this.proj) {\n      _ref = this.proj, parent = _ref.parent, fnUp = _ref.fnUp;\n      parent.value(fnUp.call(parent.value(), val));\n      return this;\n    }\n    if (!this.changed) {\n      this.prev = this.v;\n    }\n    this.v = val;\n    this.changed = true;\n    this.lazy = null;\n    return this;\n  };\n\n  DVLVar.prototype.lazyValue = function(fn) {\n    this.lazy = fn;\n    this.changed = true;\n    dvl.notify(this);\n    return this;\n  };\n\n  DVLVar.prototype.update = function(val) {\n    if (!utilModule.isEqual(val, this.v)) {\n      this.set(val);\n      dvl.notify(this);\n    }\n    return this;\n  };\n\n  DVLVar.prototype.get = function() {\n    return this.value();\n  };\n\n  DVLVar.prototype.getPrev = function() {\n    this.resolveLazy();\n    if (this.prev && this.changed) {\n      return this.prev;\n    } else {\n      return this.v;\n    }\n  };\n\n  DVLVar.prototype.notify = function() {\n    return dvl.notify(this);\n  };\n\n  DVLVar.prototype.discard = function() {\n    if (this.listeners.length > 0) {\n      throw \"Cannot remove variable \" + this.id + \" because it has listeners.\";\n    }\n    if (this.changers.length > 0) {\n      throw \"Cannot remove variable \" + this.id + \" because it has changers.\";\n    }\n    variables.splice(variables.indexOf(this), 1);\n    return null;\n  };\n\n  DVLVar.prototype.name = function() {\n    var _ref;\n    if (arguments.length === 0) {\n      return (_ref = this.n) != null ? _ref : '<anon>';\n    } else {\n      this.n = arguments[0];\n      return this;\n    }\n  };\n\n  DVLVar.prototype.compare = function() {\n    if (arguments.length) {\n      this.compareFn = arguments[0];\n      return this;\n    } else {\n      return this.compareFn;\n    }\n  };\n\n  DVLVar.prototype.verify = function() {\n    if (arguments.length) {\n      this.verifyFn = arguments[0];\n      return this;\n    } else {\n      return this.verifyFn;\n    }\n  };\n\n  DVLVar.prototype.apply = function(fn) {\n    return dvl.apply(this, fn);\n  };\n\n  DVLVar.prototype.applyValid = function(fn) {\n    return dvl.applyValid(this, fn);\n  };\n\n  DVLVar.prototype.applyAlways = function(fn) {\n    return dvl.applyAlways(this, fn);\n  };\n\n  DVLVar.prototype.pluck = function(prop) {\n    return dvl.apply(this, function(d) {\n      return d[prop];\n    });\n  };\n\n  DVLVar.prototype.pluckEx = function(prop) {\n    return dvl.apply(this, function(d) {\n      return d[prop]();\n    });\n  };\n\n  DVLVar.prototype.project = function(fns) {\n    var me, v;\n    fns = dvl.wrap(fns);\n    v = dvl();\n    me = this;\n    dvl.register({\n      listen: fns,\n      change: me,\n      fn: function() {\n        var _fns;\n        _fns = fns.value();\n        if (!_fns) {\n          _fns = {\n            down: function() {\n              return null;\n            },\n            up: function() {}\n          };\n        }\n        v.proj = {\n          parent: me,\n          fnDown: _fns.down,\n          fnUp: _fns.up\n        };\n        me.notify();\n      }\n    });\n    return v;\n  };\n\n  return DVLVar;\n\n})();\n\ngetBase = function(v) {\n  while (v.proj) {\n    v = v.proj.parent;\n  }\n  return v;\n};\n\ndvl.def = function(value) {\n  return new DVLVar(value);\n};\n\ndvl[\"const\"] = function(value) {\n  return new DVLConst(value);\n};\n\ndvl.knows = function(v) {\n  return v instanceof DVLVar || v instanceof DVLConst;\n};\n\nDVLWorker = (function() {\n  function DVLWorker(name, ctx, fn, listen, change) {\n    var hasPrev, lvl, min, nextWorker, nwid, prevWorker, v, _i, _j, _k, _l, _len, _len1, _len2, _len3, _ref, _ref1, _ref2, _ref3, _ref4;\n    this.name = name;\n    this.ctx = ctx;\n    this.fn = fn;\n    this.listen = listen;\n    this.change = change;\n    this.id = nextObjId++;\n    this.updates = new Set();\n    this.level = workers.length;\n    workers.push(this);\n    hasPrev = false;\n    _ref = this.listen;\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      v = _ref[_i];\n      v.listeners.push(this);\n      _ref1 = v.changers;\n      for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {\n        prevWorker = _ref1[_j];\n        prevWorker.updates.add(this);\n        hasPrev = true;\n      }\n    }\n    _ref2 = this.change;\n    for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {\n      v = _ref2[_k];\n      v.changers.push(this);\n      _ref3 = v.listeners;\n      for (_l = 0, _len3 = _ref3.length; _l < _len3; _l++) {\n        nextWorker = _ref3[_l];\n        this.updates.add(nextWorker);\n      }\n    }\n    if (this.updates.length()) {\n      min = Infinity;\n      _ref4 = this.updates.valueOf();\n      for (nwid in _ref4) {\n        nextWorker = _ref4[nwid];\n        lvl = nextWorker.level;\n        if (lvl < min) {\n          min = lvl;\n        }\n      }\n      sortGraph(min);\n    }\n    if (curBlock) {\n      curBlock.addMemeber(this);\n    }\n  }\n\n  DVLWorker.prototype.addChange = function() {\n    var nextWorker, updatesChanged, uv, v, _i, _j, _len, _len1, _ref;\n    uv = uniqById(arguments);\n    if (uv.length) {\n      updatesChanged = false;\n      for (_i = 0, _len = uv.length; _i < _len; _i++) {\n        v = uv[_i];\n        this.change.push(v);\n        v.changers.push(this);\n        _ref = v.listeners;\n        for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {\n          nextWorker = _ref[_j];\n          this.updates.add(nextWorker);\n          updatesChanged = true;\n        }\n      }\n      if (updatesChanged) {\n        sortGraph();\n      }\n    }\n    return this;\n  };\n\n  DVLWorker.prototype.addListen = function() {\n    var changedSave, hasPrev, i, prevWorker, updatesChanged, uv, v, _i, _j, _k, _l, _len, _len1, _len2, _len3, _ref;\n    uv = uniqById(arguments);\n    if (uv.length) {\n      updatesChanged = false;\n      for (_i = 0, _len = uv.length; _i < _len; _i++) {\n        v = uv[_i];\n        this.listen.push(v);\n        v.listeners.push(this);\n        _ref = v.changers;\n        for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {\n          prevWorker = _ref[_j];\n          prevWorker.updates.add(this);\n          updatesChanged = true;\n          hasPrev = false;\n        }\n      }\n      if (updatesChanged) {\n        sortGraph();\n      }\n    }\n    uv = uniqById(arguments, true);\n    start_notify_collect(this);\n    changedSave = [];\n    for (_k = 0, _len2 = uv.length; _k < _len2; _k++) {\n      v = uv[_k];\n      changedSave.push(v.changed);\n      v.changed = true;\n    }\n    this.fn.apply(this.ctx);\n    for (i = _l = 0, _len3 = uv.length; _l < _len3; i = ++_l) {\n      v = uv[i];\n      v.changed = changedSave[i];\n    }\n    end_notify_collect();\n    return this;\n  };\n\n  DVLWorker.prototype.discard = function() {\n    var prevWorker, v, _i, _j, _k, _l, _len, _len1, _len2, _len3, _ref, _ref1, _ref2, _ref3;\n    workers.splice(workers.indexOf(this), 1);\n    _ref = this.listen;\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      v = _ref[_i];\n      _ref1 = v.changers;\n      for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {\n        prevWorker = _ref1[_j];\n        prevWorker.updates.remove(this);\n      }\n    }\n    _ref2 = this.change;\n    for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {\n      v = _ref2[_k];\n      v.changers.splice(v.changers.indexOf(this), 1);\n    }\n    _ref3 = this.listen;\n    for (_l = 0, _len3 = _ref3.length; _l < _len3; _l++) {\n      v = _ref3[_l];\n      v.listeners.splice(v.listeners.indexOf(this), 1);\n    }\n    sortGraph();\n    this.change = this.listen = this.updates = null;\n  };\n\n  return DVLWorker;\n\n})();\n\ndvl.register = function(_arg) {\n  var c, change, changedSave, ctx, fn, i, l, listen, listenConst, name, noRun, v, worker, _i, _j, _k, _l, _len, _len1, _len2, _len3, _len4, _m;\n  ctx = _arg.ctx, fn = _arg.fn, listen = _arg.listen, change = _arg.change, name = _arg.name, noRun = _arg.noRun;\n  if (curNotifyListener) {\n    throw new Error('cannot call register from within a notify');\n  }\n  if (typeof fn !== 'function') {\n    throw new TypeError('fn must be a function');\n  }\n  if (utilModule.typeOf(listen) !== 'array') {\n    listen = [listen];\n  }\n  if (utilModule.typeOf(change) !== 'array') {\n    change = [change];\n  }\n  listenConst = [];\n  if (listen) {\n    for (_i = 0, _len = listen.length; _i < _len; _i++) {\n      v = listen[_i];\n      if (v instanceof DVLConst) {\n        listenConst.push(v);\n      }\n    }\n  }\n  listen = uniqById(listen).map(getBase);\n  change = uniqById(change).map(getBase);\n  worker = new DVLWorker(name || 'fn', ctx, fn, listen, change);\n  if (!noRun) {\n    changedSave = [];\n    for (i = _j = 0, _len1 = listen.length; _j < _len1; i = ++_j) {\n      l = listen[i];\n      changedSave[i] = l.changed;\n      l.changed = true;\n    }\n    for (_k = 0, _len2 = listenConst.length; _k < _len2; _k++) {\n      l = listenConst[_k];\n      l.changed = true;\n    }\n    start_notify_collect(worker);\n    fn.call(ctx);\n    end_notify_collect();\n    for (i = _l = 0, _len3 = changedSave.length; _l < _len3; i = ++_l) {\n      c = changedSave[i];\n      listen[i].changed = c;\n    }\n    for (_m = 0, _len4 = listenConst.length; _m < _len4; _m++) {\n      l = listenConst[_m];\n      l.changed = false;\n    }\n  }\n  return worker;\n};\n\nDVLBlock = (function() {\n  function DVLBlock(name, parent) {\n    var _ref;\n    this.name = name;\n    this.parent = parent;\n    this.owns = {};\n    if ((_ref = this.parent) != null) {\n      _ref.add(this);\n    }\n    return;\n  }\n\n  DVLBlock.prototype.addMemeber = function(thing) {\n    this.owns[thing.id] = thing;\n    return this;\n  };\n\n  DVLBlock.prototype.removeMemeber = function(thing) {\n    delete this.owns[thing.id];\n    return this;\n  };\n\n  DVLBlock.prototype.discard = function() {\n    var d, _i, _len, _ref, _ref1;\n    if ((_ref = this.parent) != null) {\n      _ref.removeMemeber(this);\n    }\n    _ref1 = this.owns;\n    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n      d = _ref1[_i];\n      d.discard();\n    }\n  };\n\n  return DVLBlock;\n\n})();\n\ndvl.blockFn = function() {\n  var fn, name;\n  switch (arguments.length) {\n    case 1:\n      fn = arguments[0];\n      break;\n    case 2:\n      name = arguments[0], fn = arguments[1];\n      break;\n    default:\n      throw \"bad number of arguments\";\n  }\n  return function() {\n    var args, block, ret;\n    args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n    block = new DVLBlock(name, curBlock);\n    ret = fn.apply(this, args);\n    curBlock = block.parent;\n    return ret;\n  };\n};\n\ndvl.block = function() {\n  var block, fn, name;\n  switch (arguments.length) {\n    case 1:\n      fn = arguments[0];\n      break;\n    case 2:\n      name = arguments[0], fn = arguments[1];\n      break;\n    default:\n      throw \"bad number of arguments\";\n  }\n  block = new DVLBlock(name, curBlock);\n  fn.call(this);\n  curBlock = block.parent;\n  return block;\n};\n\ndvl.group = function(fn) {\n  return function() {\n    var captured_notifies, fnArgs, ret;\n    fnArgs = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n    if (dvl.notify === init_notify) {\n      captured_notifies = [];\n      dvl.notify = function() {\n        var args;\n        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n        Array.prototype.push.apply(captured_notifies, args);\n      };\n      ret = fn.apply(this, fnArgs);\n      dvl.notify = init_notify;\n      init_notify.apply(dvl, captured_notifies);\n    } else {\n      ret = fn.apply(this, fnArgs);\n    }\n    return ret;\n  };\n};\n\ndvl.wrapConstIfNeeded = dvl.wrap = function(v, name) {\n  if (v === void 0) {\n    v = null;\n  }\n  if (dvl.knows(v)) {\n    return v;\n  } else {\n    return dvl[\"const\"](v).name(name);\n  }\n};\n\ndvl.wrapVarIfNeeded = dvl.wrapVar = function(v, name) {\n  if (v === void 0) {\n    v = null;\n  }\n  if (dvl.knows(v)) {\n    return v;\n  } else {\n    return dvl(v).name(name);\n  }\n};\n\ndvl.valueOf = function(v) {\n  if (dvl.knows(v)) {\n    return v.value();\n  } else {\n    return v != null ? v : null;\n  }\n};\n\nnsId = 0;\n\ndvl.namespace = function(str) {\n  if (str == null) {\n    str = 'ns';\n  }\n  nsId++;\n  return str + nsId;\n};\n\nuniqById = function(vs, allowConst) {\n  var res, seen, v, _i, _len;\n  res = [];\n  if (vs) {\n    seen = {};\n    for (_i = 0, _len = vs.length; _i < _len; _i++) {\n      v = vs[_i];\n      if ((v != null) && (allowConst || (v.listeners && v.changers)) && !seen[v.id]) {\n        seen[v.id] = true;\n        res.push(v);\n      }\n    }\n  }\n  return res;\n};\n\ndvl.sortGraph = sortGraph = function(from) {\n  var getInboundCount, i, ic, idPriorityQueue, inboundCount, isSource, j, level, nextWorker, nwid, prevWorker, v, worker, workerListen, workerListenLength, workersLength, _i, _len, _ref, _ref1, _sources;\n  if (from == null) {\n    from = 0;\n  }\n  idPriorityQueue = new PriorityQueue('id');\n  getInboundCount = function(worker, from) {\n    var count, prevWorker, seen, v, _i, _j, _len, _len1, _ref, _ref1;\n    seen = {};\n    count = 0;\n    _ref = worker.listen;\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      v = _ref[_i];\n      _ref1 = v.changers;\n      for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {\n        prevWorker = _ref1[_j];\n        if (from <= prevWorker.level && !seen[prevWorker.id]) {\n          seen[prevWorker.id] = true;\n          ++count;\n        }\n      }\n    }\n    return count;\n  };\n  inboundCount = {};\n  _sources = [];\n  i = from;\n  workersLength = workers.length;\n  while (i < workersLength) {\n    worker = workers[i++];\n    isSource = true;\n    j = 0;\n    workerListen = worker.listen;\n    workerListenLength = workerListen.length;\n    while (j < workerListenLength && isSource) {\n      v = workerListen[j++];\n      _ref = v.changers;\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        prevWorker = _ref[_i];\n        if (from <= prevWorker.level) {\n          isSource = false;\n          break;\n        }\n      }\n    }\n    if (isSource) {\n      idPriorityQueue.push(worker);\n    }\n  }\n  level = from;\n  while (idPriorityQueue.length()) {\n    worker = idPriorityQueue.shift();\n    workers[worker.level = level++] = worker;\n    _ref1 = worker.updates.valueOf();\n    for (nwid in _ref1) {\n      nextWorker = _ref1[nwid];\n      ic = inboundCount[nwid] || getInboundCount(nextWorker, from);\n      ic--;\n      if (ic === 0) {\n        idPriorityQueue.push(nextWorker);\n      } else {\n        inboundCount[nwid] = ic;\n      }\n    }\n  }\n  if (level !== workers.length) {\n    throw new Error('there is a cycle');\n  }\n};\n\ndvl.clearAll = function() {\n  var v, worker, _i, _j, _len, _len1;\n  for (_i = 0, _len = workers.length; _i < _len; _i++) {\n    worker = workers[_i];\n    worker.listen = worker.change = worker.updates = null;\n  }\n  for (_j = 0, _len1 = variables.length; _j < _len1; _j++) {\n    v = variables[_j];\n    v.listeners = v.changers = null;\n  }\n  nextObjId = 1;\n  variables = [];\n  workers = [];\n};\n\nlevelPriorityQueue = new PriorityQueue('level');\n\ncurNotifyListener = null;\n\ncurCollectListener = null;\n\ntoNotify = null;\n\nstart_notify_collect = function(listener) {\n  toNotify = [];\n  curCollectListener = listener;\n  dvl.notify = collect_notify;\n};\n\nend_notify_collect = function() {\n  curCollectListener = null;\n  dvl.notify = init_notify;\n  dvl.notify.apply(null, toNotify);\n  toNotify = null;\n};\n\ncollect_notify = function() {\n  var v, _i, _len;\n  if (!curCollectListener) {\n    throw new Error('bad stuff happened during a collect block');\n  }\n  for (_i = 0, _len = arguments.length; _i < _len; _i++) {\n    v = arguments[_i];\n    if (!(v instanceof DVLVar)) {\n      continue;\n    }\n    v = getBase(v);\n    if (__indexOf.call(curCollectListener.change, v) < 0) {\n      throw new Error(\"changed unregistered object \" + v.id + \" (collect)\");\n    }\n    toNotify.push(v);\n  }\n};\n\ndvl.notify = init_notify = function() {\n  var changedInNotify, l, lastNotifyRun, notifyChainReset, v, visitedListener, _i, _j, _len, _len1, _ref;\n  lastNotifyRun = [];\n  visitedListener = [];\n  changedInNotify = [];\n  curNotifyListener = null;\n  notifyChainReset = function() {\n    var l, v, _i, _j, _len, _len1;\n    curNotifyListener = null;\n    dvl.notify = init_notify;\n    for (_i = 0, _len = changedInNotify.length; _i < _len; _i++) {\n      v = changedInNotify[_i];\n      v.resetChanged();\n    }\n    for (_j = 0, _len1 = visitedListener.length; _j < _len1; _j++) {\n      l = visitedListener[_j];\n      l.visited = false;\n    }\n  };\n  for (_i = 0, _len = arguments.length; _i < _len; _i++) {\n    v = arguments[_i];\n    if (!(v instanceof DVLVar)) {\n      continue;\n    }\n    v = getBase(v);\n    changedInNotify.push(v);\n    lastNotifyRun.push(v.id);\n    _ref = v.listeners;\n    for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {\n      l = _ref[_j];\n      levelPriorityQueue.push(l);\n    }\n  }\n  dvl.notify = function() {\n    var errorMessage, prevStr, _k, _l, _len2, _len3, _ref1;\n    if (!curNotifyListener) {\n      throw new Error('bad stuff happened within a notify block');\n    }\n    for (_k = 0, _len2 = arguments.length; _k < _len2; _k++) {\n      v = arguments[_k];\n      if (!(v instanceof DVLVar)) {\n        continue;\n      }\n      v = getBase(v);\n      if (__indexOf.call(curNotifyListener.change, v) < 0) {\n        prevStr = changedInNotify.map(function(v) {\n          return v.id;\n        }).join(';');\n        errorMessage = \"changed unregistered object \" + v.id + \" within worker \" + curNotifyListener.id + \" [prev:\" + prevStr + \"]\";\n        notifyChainReset();\n        throw new Error(errorMessage);\n      }\n      changedInNotify.push(v);\n      lastNotifyRun.push(v.id);\n      _ref1 = v.listeners;\n      for (_l = 0, _len3 = _ref1.length; _l < _len3; _l++) {\n        l = _ref1[_l];\n        if (!l.visited) {\n          levelPriorityQueue.push(l);\n        }\n      }\n    }\n  };\n  while (levelPriorityQueue.length() > 0) {\n    curNotifyListener = levelPriorityQueue.shift();\n    if (curNotifyListener.visited) {\n      continue;\n    }\n    curNotifyListener.visited = true;\n    visitedListener.push(curNotifyListener);\n    lastNotifyRun.push(curNotifyListener.id);\n    curNotifyListener.fn.apply(curNotifyListener.ctx);\n  }\n  notifyChainReset();\n};\n\ndvl.zero = dvl[\"const\"](0).name('zero');\n\ndvl[\"null\"] = dvl[\"const\"](null).name('null');\n\ndvl.ident = function(x) {\n  return x;\n};\n\ndvl.identity = dvl[\"const\"](dvl.ident).name('identity');\n\ndvl.acc = function(column) {\n  var acc, makeAcc;\n  column = dvl.wrap(column);\n  acc = dvl().name(\"acc\");\n  makeAcc = function() {\n    var col;\n    col = column.value();\n    if (col != null) {\n      col = String(col.valueOf());\n      return acc.value(function(d) {\n        return d[col];\n      });\n    } else {\n      return acc.value(null);\n    }\n  };\n  dvl.register({\n    fn: makeAcc,\n    listen: [column],\n    change: [acc],\n    name: 'make_acc'\n  });\n  return acc;\n};\n\ndvl.debug = function() {\n  var note, obj, print;\n  print = function() {\n    if (!(typeof console !== \"undefined\" && console !== null ? console.log : void 0)) {\n      return;\n    }\n    console.log.apply(console, arguments);\n    return arguments[0];\n  };\n  if (arguments.length === 1) {\n    obj = dvl.wrap(arguments[0]);\n    note = obj.name() + ':';\n  } else {\n    obj = dvl.wrap(arguments[1]);\n    note = arguments[0];\n  }\n  dvl.register({\n    listen: [obj],\n    fn: function() {\n      return print(note, obj.value());\n    }\n  });\n  return obj;\n};\n\ndvl.apply = dvl.applyValid = function() {\n  var allowNull, args, fn, invalid, out, update, _ref, _ref1;\n  switch (arguments.length) {\n    case 1:\n      _ref = arguments[0], args = _ref.args, fn = _ref.fn, invalid = _ref.invalid, allowNull = _ref.allowNull, update = _ref.update;\n      if (args === void 0 && !arguments[0].hasOwnProperty('args')) {\n        args = [];\n      }\n      break;\n    case 2:\n      args = arguments[0], fn = arguments[1];\n      break;\n    case 3:\n      args = arguments[0], (_ref1 = arguments[1], invalid = _ref1.invalid, allowNull = _ref1.allowNull, update = _ref1.update), fn = arguments[2];\n      break;\n    default:\n      throw \"incorect number of arguments\";\n  }\n  fn = dvl.wrap(fn || dvl.identity);\n  if (!Array.isArray(args)) {\n    args = [args];\n  }\n  args = args.map(dvl.wrap);\n  invalid = dvl.wrap(invalid != null ? invalid : null);\n  out = dvl(invalid.value()).name('apply_valid_out');\n  dvl.register({\n    name: 'apply_fn',\n    listen: args.concat([fn, invalid]),\n    change: out,\n    fn: function() {\n      var a, f, nulls, r, send, v, _i, _len;\n      f = fn.value();\n      if (f == null) {\n        return;\n      }\n      send = [];\n      nulls = false;\n      for (_i = 0, _len = args.length; _i < _len; _i++) {\n        a = args[_i];\n        v = a.value();\n        if (v == null) {\n          nulls = true;\n        }\n        send.push(v);\n      }\n      if (!nulls || allowNull) {\n        r = f.apply(null, send);\n        if (r === void 0) {\n          return;\n        }\n      } else {\n        r = invalid.value();\n      }\n      if (update) {\n        out.update(r);\n      } else {\n        out.set(r).notify();\n      }\n    }\n  });\n  return out;\n};\n\ndvl.applyAlways = function() {\n  var args, fn, out, update, _ref, _ref1;\n  switch (arguments.length) {\n    case 1:\n      _ref = arguments[0], args = _ref.args, fn = _ref.fn, update = _ref.update;\n      if (args === void 0 && !arguments[0].hasOwnProperty('args')) {\n        args = [];\n      }\n      break;\n    case 2:\n      args = arguments[0], fn = arguments[1];\n      break;\n    case 3:\n      args = arguments[0], (_ref1 = arguments[1], update = _ref1.update), fn = arguments[2];\n      break;\n    default:\n      throw \"incorect number of arguments\";\n  }\n  fn = dvl.wrap(fn || dvl.identity);\n  if (!Array.isArray(args)) {\n    args = [args];\n  }\n  args = args.map(dvl.wrap);\n  out = dvl().name('apply_valid_out');\n  dvl.register({\n    name: 'apply_fn',\n    listen: args.concat([fn]),\n    change: out,\n    fn: function() {\n      var a, f, r, send, _i, _len;\n      f = fn.value();\n      if (f == null) {\n        return;\n      }\n      send = [];\n      for (_i = 0, _len = args.length; _i < _len; _i++) {\n        a = args[_i];\n        send.push(a.value());\n      }\n      r = f.apply(null, send);\n      if (r === void 0) {\n        return;\n      }\n      if (update) {\n        out.update(r);\n      } else {\n        out.set(r).notify();\n      }\n    }\n  });\n  return out;\n};\n\ndvl.chain = function(f, h) {\n  var out;\n  f = dvl.wrap(f);\n  h = dvl.wrap(h);\n  out = dvl().name('chain');\n  dvl.register({\n    listen: [f, h],\n    change: [out],\n    fn: function() {\n      var _f, _h;\n      _f = f.value();\n      _h = h.value();\n      if (_f && _h) {\n        out.value(function(x) {\n          return _h(_f(x));\n        });\n      } else {\n        out.value(null);\n      }\n    }\n  });\n  return out;\n};\n\ndvl.op = function(fn) {\n  var liftedFn;\n  liftedFn = lift(fn);\n  return function() {\n    var args, out;\n    args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n    args = args.map(dvl.wrap);\n    out = dvl();\n    dvl.register({\n      listen: args,\n      change: [out],\n      fn: function() {\n        out.set(liftedFn.apply(null, args.map(function(v) {\n          return v.value();\n        })));\n        dvl.notify(out);\n      }\n    });\n    return out;\n  };\n};\n\nop_to_lift = {\n  'or': function() {\n    var arg, ret, _i, _len;\n    ret = false;\n    for (_i = 0, _len = arguments.length; _i < _len; _i++) {\n      arg = arguments[_i];\n      ret || (ret = arg);\n    }\n    return ret;\n  },\n  'and': function() {\n    var arg, ret, _i, _len;\n    ret = true;\n    for (_i = 0, _len = arguments.length; _i < _len; _i++) {\n      arg = arguments[_i];\n      ret && (ret = arg);\n    }\n    return ret;\n  },\n  'add': function() {\n    var arg, sum, _i, _len;\n    sum = 0;\n    for (_i = 0, _len = arguments.length; _i < _len; _i++) {\n      arg = arguments[_i];\n      if (arg != null) {\n        sum += arg;\n      } else {\n        return null;\n      }\n    }\n    return sum;\n  },\n  'sub': function() {\n    var arg, mult, sum, _i, _len;\n    sum = 0;\n    mult = 1;\n    for (_i = 0, _len = arguments.length; _i < _len; _i++) {\n      arg = arguments[_i];\n      if (arg != null) {\n        sum += arg * mult;\n        mult = -1;\n      } else {\n        return null;\n      }\n    }\n    return sum;\n  },\n  'list': function() {\n    var arg, args, _i, _len;\n    args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n    for (_i = 0, _len = args.length; _i < _len; _i++) {\n      arg = args[_i];\n      if (arg == null) {\n        return null;\n      }\n    }\n    return args;\n  },\n  'concat': function() {\n    var arg, args, _i, _len;\n    args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n    for (_i = 0, _len = args.length; _i < _len; _i++) {\n      arg = args[_i];\n      if (arg == null) {\n        return null;\n      }\n    }\n    return args.join('');\n  },\n  'iff': function(cond, truthy, falsy) {\n    if (cond) {\n      return truthy;\n    } else {\n      return falsy;\n    }\n  },\n  'iffEq': function(lhs, rhs, truthy, falsy) {\n    if (lhs === rhs) {\n      return truthy;\n    } else {\n      return falsy;\n    }\n  },\n  'iffLt': function(lhs, rhs, truthy, falsy) {\n    if (lhs < rhs) {\n      return truthy;\n    } else {\n      return falsy;\n    }\n  },\n  'makeTranslate': function(x, y) {\n    if ((x != null) && (y != null)) {\n      return \"translate(\" + x + \",\" + y + \")\";\n    } else {\n      return null;\n    }\n  }\n};\n\nfor (k in op_to_lift) {\n  fn = op_to_lift[k];\n  dvl.op[k] = dvl.op(fn);\n}\n\nmodule.exports = dvl;\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar bind, bindSingle, class_concat, def_data_fn, dvl, id_class_spliter;\n\ndvl = __webpack_require__(0);\n\nid_class_spliter = /(?=[#.:])/;\n\ndef_data_fn = dvl[\"const\"](function(d) {\n  return [d];\n});\n\nclass_concat = dvl.op(function(s, d) {\n  return s + ' ' + (d || '');\n});\n\nbind = function(_arg) {\n  var argsOn, attr, attrList, data, html, join, k, listen, nodeType, onList, out, parent, part, parts, property, propertyList, self, staticClass, staticId, style, styleList, text, transition, transitionExit, v, _i, _len;\n  parent = _arg.parent, self = _arg.self, data = _arg.data, join = _arg.join, attr = _arg.attr, style = _arg.style, property = _arg.property, text = _arg.text, html = _arg.html, argsOn = _arg.on, transition = _arg.transition, transitionExit = _arg.transitionExit;\n  if (!parent) {\n    throw \"'parent' not defined\";\n  }\n  if (typeof self !== 'string') {\n    throw \"'self' not defined\";\n  }\n  parts = self.split(id_class_spliter);\n  nodeType = parts.shift();\n  staticId = null;\n  staticClass = [];\n  for (_i = 0, _len = parts.length; _i < _len; _i++) {\n    part = parts[_i];\n    switch (part[0]) {\n      case '#':\n        staticId = part.substring(1);\n        break;\n      case '.':\n        staticClass.push(part.substring(1));\n        break;\n      default:\n        throw \"not currently supported in 'self' (\" + part + \")\";\n    }\n  }\n  staticClass = staticClass.join(' ');\n  parent = dvl.wrap(parent);\n  data = dvl.wrap(data || def_data_fn);\n  join = dvl.wrap(join);\n  text = text ? dvl.wrap(text) : null;\n  html = html ? dvl.wrap(html) : null;\n  transition = dvl.wrap(transition);\n  transitionExit = dvl.wrap(transitionExit);\n  listen = [parent, data, join, text, html, transition, transitionExit];\n  attrList = {};\n  for (k in attr) {\n    v = attr[k];\n    v = dvl.wrap(v);\n    if (k === 'class' && staticClass) {\n      v = class_concat(staticClass, v);\n    }\n    listen.push(v);\n    attrList[k] = v;\n  }\n  if (staticClass && !attrList['class']) {\n    attrList['class'] = dvl[\"const\"](staticClass);\n  }\n  styleList = {};\n  for (k in style) {\n    v = style[k];\n    v = dvl.wrap(v);\n    listen.push(v);\n    styleList[k] = v;\n  }\n  propertyList = {};\n  for (k in property) {\n    v = property[k];\n    v = dvl.wrap(v);\n    listen.push(v);\n    propertyList[k] = v;\n  }\n  onList = {};\n  for (k in argsOn) {\n    v = argsOn[k];\n    v = dvl.wrap(v);\n    listen.push(v);\n    onList[k] = v;\n  }\n  out = dvl().name('selection');\n  dvl.register({\n    listen: listen,\n    change: [out],\n    fn: function() {\n      var a, add1, add2, addO, e, enter, ex, force, postTrans, preTrans, s, t, _data, _j, _join, _k, _l, _len1, _len2, _len3, _parent, _transition, _transitionExit;\n      _parent = parent.value();\n      if (!_parent) {\n        return;\n      }\n      force = parent.hasChanged() || data.hasChanged() || join.hasChanged();\n      _data = data.value();\n      _join = join.value();\n      if (_data) {\n        _data = _data.valueOf();\n        _transition = transition.value();\n        _transitionExit = transitionExit.value();\n        enter = [];\n        preTrans = [];\n        postTrans = [];\n        add1 = function(fn, v) {\n          if (v.hasChanged() || force) {\n            preTrans.push({\n              fn: fn,\n              a1: v.getPrev()\n            });\n            postTrans.push({\n              fn: fn,\n              a1: v.value()\n            });\n          } else {\n            enter.push({\n              fn: fn,\n              a1: v.value()\n            });\n          }\n        };\n        add2 = function(fn, k, v) {\n          if (v.hasChanged() || force) {\n            enter.push({\n              fn: fn,\n              a1: k,\n              a2: v.getPrev()\n            });\n            preTrans.push({\n              fn: fn,\n              a1: k,\n              a2: v.getPrev()\n            });\n            postTrans.push({\n              fn: fn,\n              a1: k,\n              a2: v.value()\n            });\n          } else {\n            enter.push({\n              fn: fn,\n              a1: k,\n              a2: v.value()\n            });\n          }\n        };\n        addO = function(fn, k, v) {\n          if (v.hasChanged() || force) {\n            preTrans.push({\n              fn: fn,\n              a1: k,\n              a2: v.value()\n            });\n          } else {\n            enter.push({\n              fn: fn,\n              a1: k,\n              a2: v.value()\n            });\n          }\n        };\n        if (text) {\n          add1('text', text);\n        }\n        if (html) {\n          add1('html', html);\n        }\n        for (k in attrList) {\n          v = attrList[k];\n          add2('attr', k, v);\n        }\n        for (k in styleList) {\n          v = styleList[k];\n          add2('style', k, v);\n        }\n        for (k in propertyList) {\n          v = propertyList[k];\n          add2('property', k, v);\n        }\n        for (k in onList) {\n          v = onList[k];\n          addO('on', k, v);\n        }\n        s = _parent.selectAll(self).data(_data, _join);\n        e = s.enter().append(nodeType);\n        for (_j = 0, _len1 = enter.length; _j < _len1; _j++) {\n          a = enter[_j];\n          e[a.fn](a.a1, a.a2);\n        }\n        for (_k = 0, _len2 = preTrans.length; _k < _len2; _k++) {\n          a = preTrans[_k];\n          s[a.fn](a.a1, a.a2);\n        }\n        if (_transition && (_transition.duration != null)) {\n          t = s.transition();\n          t.duration(_transition.duration || 1000);\n          if (_transition.delay) {\n            t.delay(_transition.delay);\n          }\n          if (_transition.ease) {\n            t.ease(_transition.ease);\n          }\n        } else {\n          t = s;\n        }\n        for (_l = 0, _len3 = postTrans.length; _l < _len3; _l++) {\n          a = postTrans[_l];\n          t[a.fn](a.a1, a.a2);\n        }\n        ex = s.exit().remove();\n        if (!e.empty() || !ex.empty() || force) {\n          out.value(s);\n        }\n      } else {\n        s = _parent.selectAll(self).remove();\n        out.value(s);\n      }\n    }\n  });\n  return out;\n};\n\nbindSingle = function(_arg) {\n  var argsOn, attr, attrList, data, datum, html, k, listen, nodeType, onList, parent, part, parts, property, propertyList, self, staticClass, staticId, style, styleList, text, transition, v, _i, _len;\n  parent = _arg.parent, self = _arg.self, data = _arg.data, datum = _arg.datum, attr = _arg.attr, style = _arg.style, property = _arg.property, text = _arg.text, html = _arg.html, argsOn = _arg.on, transition = _arg.transition;\n  if (data) {\n    throw new Error(\"bindSingle does not accept a parameter 'data'. Did you mean 'datum'?\");\n  }\n  if (typeof self === 'string') {\n    if (!parent) {\n      throw \"'parent' not defined for string self\";\n    }\n    parts = self.split(id_class_spliter);\n    nodeType = parts.shift();\n    staticId = null;\n    staticClass = [];\n    for (_i = 0, _len = parts.length; _i < _len; _i++) {\n      part = parts[_i];\n      switch (part[0]) {\n        case '#':\n          staticId = part.substring(1);\n          break;\n        case '.':\n          staticClass.push(part.substring(1));\n          break;\n        default:\n          throw \"not currently supported in 'self' (\" + part + \")\";\n      }\n    }\n    staticClass = staticClass.join(' ');\n    self = dvl.valueOf(parent).append(nodeType);\n    self.attr('id', staticId) === staticId;\n    self.attr('class', staticClass) === staticClass;\n  } else {\n    staticClass = self.attr('class');\n  }\n  self = dvl.wrapVar(self);\n  datum = dvl.wrap(datum);\n  text = text ? dvl.wrap(text) : null;\n  html = html ? dvl.wrap(html) : null;\n  transition = dvl.wrap(transition);\n  listen = [datum, text, html, transition];\n  attrList = {};\n  for (k in attr) {\n    v = attr[k];\n    v = dvl.wrap(v);\n    if (k === 'class' && staticClass) {\n      v = class_concat(staticClass, v);\n    }\n    listen.push(v);\n    attrList[k] = v;\n  }\n  styleList = {};\n  for (k in style) {\n    v = style[k];\n    v = dvl.wrap(v);\n    listen.push(v);\n    styleList[k] = v;\n  }\n  propertyList = {};\n  for (k in property) {\n    v = property[k];\n    v = dvl.wrap(v);\n    listen.push(v);\n    propertyList[k] = v;\n  }\n  onList = {};\n  for (k in argsOn) {\n    v = argsOn[k];\n    v = dvl.wrap(v);\n    listen.push(v);\n    onList[k] = v;\n  }\n  dvl.register({\n    listen: listen,\n    change: [self],\n    fn: function() {\n      var force, sel, _datum;\n      sel = self.value();\n      _datum = datum.value();\n      force = datum.hasChanged();\n      if (force) {\n        sel.datum(_datum);\n      }\n      for (k in attrList) {\n        v = attrList[k];\n        if (v.hasChanged() || force) {\n          sel.attr(k, v.value());\n        }\n      }\n      for (k in styleList) {\n        v = styleList[k];\n        if (v.hasChanged() || force) {\n          sel.style(k, v.value());\n        }\n      }\n      for (k in propertyList) {\n        v = propertyList[k];\n        if (v.hasChanged() || force) {\n          sel.property(k, v.value());\n        }\n      }\n      for (k in onList) {\n        v = onList[k];\n        if (v.hasChanged() || force) {\n          sel.on(k, v.value());\n        }\n      }\n      if (text && (text.hasChanged() || force)) {\n        sel.text(text.value());\n      }\n      if (html && (html.hasChanged() || force)) {\n        sel.html(html.value());\n      }\n      if (force) {\n        self.notify();\n      }\n    }\n  });\n  return self;\n};\n\nmodule.exports = {\n  bind: bind,\n  bindSingle: bindSingle\n};\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\nvar utilModule;\n\nutilModule = {\n  typeOf: (function() {\n    var toString;\n    toString = Object.prototype.toString;\n    return function(v) {\n      var type;\n      type = toString.call(v);\n      return type.substring(8, type.length - 1).toLowerCase();\n    };\n  })(),\n  strObj: function(obj) {\n    var k, keys, str, type, _i, _len;\n    type = utilModule.typeOf(obj);\n    if (type === 'object' || type === 'array') {\n      str = [];\n      keys = [];\n      for (k in obj) {\n        if (!obj.hasOwnProperty(k)) {\n          continue;\n        }\n        keys.push(k);\n      }\n      keys.sort();\n      for (_i = 0, _len = keys.length; _i < _len; _i++) {\n        k = keys[_i];\n        str.push(k, utilModule.strObj(obj[k]));\n      }\n      return str.join('|');\n    }\n    if (type === 'function') {\n      return '&';\n    }\n    return String(obj);\n  },\n  uniq: function(array) {\n    var a, seen, uniq, _i, _len;\n    seen = {};\n    uniq = [];\n    for (_i = 0, _len = array.length; _i < _len; _i++) {\n      a = array[_i];\n      if (!seen[a]) {\n        uniq.push(a);\n      }\n      seen[a] = 1;\n    }\n    return uniq;\n  },\n  isEqual: function(a, b, cmp) {\n    var aKeys, atype, bKeys, btype, c, k, _i, _len;\n    if (a === b) {\n      return true;\n    }\n    atype = utilModule.typeOf(a);\n    btype = utilModule.typeOf(b);\n    if (atype !== btype) {\n      return false;\n    }\n    if ((!a && b) || (a && !b)) {\n      return false;\n    }\n    if (atype === 'date') {\n      return a.getTime() === b.getTime();\n    }\n    if (a !== a && b !== b) {\n      return false;\n    }\n    if (atype === 'regexp') {\n      return a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline;\n    }\n    if (!(atype === 'object' || atype === 'array')) {\n      return false;\n    }\n    if (cmp) {\n      for (_i = 0, _len = cmp.length; _i < _len; _i++) {\n        c = cmp[_i];\n        if ((c.a === a && c.b === b) || (c.a === b && c.b === a)) {\n          return true;\n        }\n      }\n    }\n    if ((a.length != null) && a.length !== b.length) {\n      return false;\n    }\n    aKeys = [];\n    for (k in a) {\n      aKeys.push(k);\n    }\n    bKeys = [];\n    for (k in b) {\n      bKeys.push(k);\n    }\n    if (aKeys.length !== bKeys.length) {\n      return false;\n    }\n    cmp = cmp ? cmp.slice() : [];\n    cmp.push({\n      a: a,\n      b: b\n    });\n    for (k in a) {\n      if (!((b[k] != null) && utilModule.isEqual(a[k], b[k], cmp))) {\n        return false;\n      }\n    }\n    return true;\n  },\n  clone: function(obj) {\n    var k, ret, t, v;\n    t = utilModule.typeOf(obj);\n    switch (t) {\n      case 'array':\n        return obj.slice();\n      case 'object':\n        ret = {};\n        for (k in obj) {\n          v = obj[k];\n          ret[k] = v;\n        }\n        return ret;\n      case 'date':\n        return new Date(obj.getTime());\n      default:\n        return obj;\n    }\n  },\n  escapeHTML: function(str) {\n    return String(str).replace(/&/g, '&amp;').replace(/>/g, '&gt;').replace(/</g, '&lt;').replace(/\"/g, '&quot;');\n  }\n};\n\nmodule.exports = utilModule;\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n!function() {\n  var d3 = {\n    version: \"3.5.8\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.zip = function() {\n    if (!(n = arguments.length)) return [];\n    for (var i = -1, m = d3.min(arguments, d3_zipLength), zips = new Array(m); ++i < m; ) {\n      for (var j = -1, n, zip = zips[i] = new Array(n); ++j < n; ) {\n        zip[j] = arguments[j][i];\n      }\n    }\n    return zips;\n  };\n  function d3_zipLength(d) {\n    return d.length;\n  }\n  d3.transpose = function(matrix) {\n    return d3.zip.apply(d3, matrix);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: \"http://www.w3.org/1999/xhtml\",\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace ? document.createElementNS(namespace, name) : document.createElement(name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n            keyValues[i] = keyValue;\n          }\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged && d3.event.target === target);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n      i = function(t) {\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n      };\n    } else {\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n      i = function(t) {\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      };\n    }\n    i.duration = S * 1e3;\n    return i;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, target = d3.event.target, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged && d3.event.target === target);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function() {\n    d3_timer.apply(this, arguments);\n  };\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n    return timer;\n  }\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now(), timer = d3_timer_queueHead;\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: (x - x0) / k\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.start({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    return d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(.1, n / scale.ticks().length), f = positive ? (e = 1e-12, Math.ceil) : (e = -1e-12, \n      Math.floor), e;\n      return function(d) {\n        return d / pow(f(log(d) + e)) <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc, rc0 = rc;\n        if (da < π) {\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, activeId, active;\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id], time, timer, duration, ease, tweens;\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n    function start(elapsed) {\n      var activeId = lock.active, active = lock[activeId];\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function(key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n      timer.c = tick;\n      d3_timer(function() {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n        return 1;\n      }, 0, time);\n    }\n    function tick(elapsed) {\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id]; else delete node[ns];\n        return 1;\n      }\n    }\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) define(this.d3 = d3); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n}();\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar ajaxManagers, async, blockDummy, dvl, makeManager, nextGroupId, outstanding, utilModule,\n  __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\n\ndvl = __webpack_require__(0);\n\nutilModule = __webpack_require__(2);\n\noutstanding = dvl(0).name('outstanding');\n\najaxManagers = [];\n\nblockDummy = {};\n\nmakeManager = function() {\n  var addHoock, getData, initRequestBundle, inputChange, makeRequest, maybeDone, nextQueryId, queries, worker;\n  nextQueryId = 0;\n  initRequestBundle = [];\n  queries = [];\n  maybeDone = dvl.group(function(requestBundle) {\n    var request, _i, _j, _len, _len1, _ref;\n    for (_i = 0, _len = requestBundle.length; _i < _len; _i++) {\n      request = requestBundle[_i];\n      if (request.status !== 'ready') {\n        return;\n      }\n    }\n    for (_j = 0, _len1 = requestBundle.length; _j < _len1; _j++) {\n      request = requestBundle[_j];\n      request.res.value((_ref = request.resVal) != null ? _ref : null);\n      request.status = '';\n      request.requestBundle = null;\n      delete request.resVal;\n    }\n  });\n  getData = function(request, query, err, resVal) {\n    if (!request.requestBundle) {\n      throw new Error(\"getData called outside of a request\");\n    }\n    if (err) {\n      request.resVal = null;\n      if (request.onError) {\n        request.onError(err);\n      }\n    } else {\n      request.resVal = query ? resVal : null;\n    }\n    request.status = 'ready';\n    delete request.curAjax;\n    delete request.processResponce;\n    maybeDone(request.requestBundle);\n  };\n  makeRequest = function(request) {\n    var oldAjax, oldProcessResponce, processResponce, requestCount, responceProcessed, _query;\n    if (__indexOf.call(request.requestBundle, request) < 0) {\n      throw new Error(\"invalid request\");\n    }\n    requestCount = request.requestCount;\n    _query = request.query.value();\n    oldAjax = request.curAjax;\n    oldProcessResponce = request.processResponce;\n    if (_query != null) {\n      if (request.invalidOnLoad.value()) {\n        request.res.value(null);\n      }\n      responceProcessed = false;\n      processResponce = function(err, data) {\n        if (this === blockDummy) {\n          responceProcessed = true;\n        }\n        if (responceProcessed) {\n          return;\n        }\n        responceProcessed = true;\n        requestCount.value(requestCount.value() - 1);\n        getData(request, _query, err, data);\n      };\n      requestCount.value(requestCount.value() + 1);\n      request.processResponce = processResponce;\n      request.curAjax = request.requester(_query, processResponce);\n    } else {\n      getData(request, _query, null, null);\n    }\n    if (oldProcessResponce) {\n      requestCount.value(requestCount.value() - 1);\n      oldProcessResponce.call(blockDummy);\n      if (oldAjax != null) {\n        if (typeof oldAjax.abort === \"function\") {\n          oldAjax.abort();\n        }\n      }\n    }\n  };\n  inputChange = function() {\n    var makeRequestLater, newRequestBundle, q, _i, _j, _len, _len1;\n    makeRequestLater = [];\n    newRequestBundle = [];\n    for (_i = 0, _len = queries.length; _i < _len; _i++) {\n      q = queries[_i];\n      if (!q.query.hasChanged()) {\n        continue;\n      }\n      if (q.status === 'virgin') {\n        if (q.query.value()) {\n          initRequestBundle.push(q);\n          q.status = 'requesting';\n          q.requestBundle = initRequestBundle;\n          makeRequestLater.push(q);\n        } else {\n          q.status = '';\n        }\n      } else {\n        q.status = 'requesting';\n        if (q.requestBundle) {\n          delete q.resVal;\n          makeRequestLater.push(q);\n        } else {\n          newRequestBundle.push(q);\n          q.requestBundle = newRequestBundle;\n          makeRequestLater.push(q);\n        }\n      }\n    }\n    for (_j = 0, _len1 = makeRequestLater.length; _j < _len1; _j++) {\n      q = makeRequestLater[_j];\n      makeRequest(q);\n    }\n  };\n  worker = null;\n  addHoock = function(query, ret, requestCount) {\n    if (worker) {\n      worker.addChange(ret, requestCount);\n      worker.addListen(query);\n    } else {\n      worker = dvl.register({\n        listen: [query],\n        change: [ret, requestCount],\n        fn: inputChange\n      });\n    }\n  };\n  return function(query, invalidOnLoad, onError, requester, requestCount) {\n    var q, res;\n    nextQueryId++;\n    res = dvl();\n    q = {\n      id: nextQueryId,\n      query: query,\n      res: res,\n      status: 'virgin',\n      requester: requester,\n      onError: onError,\n      invalidOnLoad: invalidOnLoad,\n      requestBundle: null,\n      curAjax: null,\n      requestCount: requestCount\n    };\n    queries.push(q);\n    addHoock(query, res, requestCount);\n    return res;\n  };\n};\n\nasync = function(_arg) {\n  var groupId, invalidOnLoad, onError, query, requestCount, requester;\n  query = _arg.query, invalidOnLoad = _arg.invalidOnLoad, onError = _arg.onError, groupId = _arg.groupId, requester = _arg.requester, requestCount = _arg.requestCount;\n  if (!query) {\n    throw new Error('it does not make sense to not have a query');\n  }\n  if (!requester) {\n    throw new Error('it does not make sense to not have a requester');\n  }\n  if (typeof requester !== 'function') {\n    throw new Error('requester must be a function');\n  }\n  query = dvl.wrap(query);\n  invalidOnLoad = dvl.wrap(invalidOnLoad || false);\n  requestCount || (requestCount = outstanding);\n  requestCount = dvl.wrapVar(requestCount);\n  if (groupId == null) {\n    groupId = async.getGroupId();\n  }\n  ajaxManagers[groupId] || (ajaxManagers[groupId] = makeManager());\n  return ajaxManagers[groupId](query, invalidOnLoad, onError, requester, requestCount);\n};\n\nasync.outstanding = outstanding;\n\nnextGroupId = 0;\n\nasync.getGroupId = function() {\n  var id;\n  id = nextGroupId;\n  nextGroupId++;\n  return id;\n};\n\nasync.requester = {\n  ajax: function(query, complete) {\n    var abort, ajax, data;\n    data = query.dataFn ? query.dataFn(query.data) : query.data;\n    ajax = jQuery.ajax({\n      url: query.url,\n      data: data,\n      type: query.method || 'GET',\n      dataType: query.dataType || 'json',\n      contentType: data != null ? query.contentType || 'application/json' : void 0,\n      processData: query.processData || false,\n      success: function(resVal) {\n        if (query.fn) {\n          resVal = query.fn(resVal, query);\n        }\n        ajax = null;\n        complete(null, resVal);\n      },\n      error: function(xhr, textStatus) {\n        ajax = null;\n        complete(xhr.responseText || textStatus, null);\n      }\n    });\n    abort = function() {\n      if (ajax) {\n        ajax.abort();\n        ajax = null;\n      }\n    };\n    return {\n      abort: abort\n    };\n  },\n  cacheWrap: function(_arg) {\n    var cache, count, keyFn, max, requester, timeout, trim, _ref;\n    _ref = _arg != null ? _arg : {}, requester = _ref.requester, max = _ref.max, timeout = _ref.timeout, keyFn = _ref.keyFn;\n    if (!requester) {\n      throw new Error('it does not make sense to not have a requester');\n    }\n    if (typeof requester !== 'function') {\n      throw new Error('requester must be a function');\n    }\n    max = dvl.wrap(max || 100);\n    timeout = dvl.wrap(timeout || 30 * 60 * 1000);\n    cache = {};\n    count = 0;\n    keyFn || (keyFn = function(_arg1) {\n      var contentType, data, dataType, method, processData, url;\n      url = _arg1.url, data = _arg1.data, method = _arg1.method, dataType = _arg1.dataType, contentType = _arg1.contentType, processData = _arg1.processData;\n      return [url, utilModule.strObj(data), method, dataType, contentType, processData].join('@@');\n    });\n    trim = function() {\n      var cutoff, d, m, newCache, oldestQuery, oldestTime, q, tout, _results;\n      tout = timeout.value();\n      if (tout > 0) {\n        cutoff = Date.now() - tout;\n        newCache = {};\n        for (q in cache) {\n          d = cache[q];\n          if (cutoff < d.time) {\n            newCache[q] = d;\n          }\n        }\n        cache = newCache;\n      }\n      m = max.value();\n      _results = [];\n      while (m < count) {\n        oldestQuery = null;\n        oldestTime = Infinity;\n        for (q in cache) {\n          d = cache[q];\n          if (d.time < oldestTime) {\n            oldestTime = d.time;\n            oldestQuery = q;\n          }\n        }\n        delete cache[oldestQuery];\n        _results.push(count--);\n      }\n      return _results;\n    };\n    dvl.register({\n      listen: [max, timeout],\n      fn: trim\n    });\n    return {\n      clear: function() {\n        cache = {};\n        count = 0;\n      },\n      requester: function(query, complete) {\n        var abort, added, c, key;\n        key = keyFn(query);\n        c = cache[key];\n        added = false;\n        if (!c) {\n          cache[key] = c = {\n            time: Date.now(),\n            waiting: [complete]\n          };\n          added = true;\n          count++;\n          trim();\n          c.ajax = requester(query, function(err, resVal) {\n            var cb, _i, _j, _len, _len1, _ref1, _ref2;\n            if (err) {\n              if (err === \"abort\") {\n                return;\n              }\n              c.ajax = null;\n              delete cache[key];\n              count--;\n              _ref1 = c.waiting;\n              for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n                cb = _ref1[_i];\n                cb(err, null);\n              }\n              delete c.waiting;\n              return;\n            }\n            c.ajax = null;\n            c.resVal = resVal;\n            _ref2 = c.waiting;\n            for (_j = 0, _len1 = _ref2.length; _j < _len1; _j++) {\n              cb = _ref2[_j];\n              cb(null, resVal);\n            }\n            delete c.waiting;\n          });\n        }\n        if (c.resVal) {\n          complete(null, c.resVal);\n          abort = function() {};\n        } else {\n          if (!added) {\n            c.waiting.push(complete);\n          }\n          abort = function() {\n            if (!c.waiting) {\n              return;\n            }\n            c.waiting = c.waiting.filter(function(l) {\n              return l !== complete;\n            });\n            complete('abort', null);\n            if (c.waiting.length === 0 && c.ajax) {\n              c.ajax.abort();\n              c.ajax = null;\n              delete cache[key];\n              count--;\n            }\n          };\n        }\n        return {\n          abort: abort\n        };\n      }\n    };\n  }\n};\n\nmodule.exports = async;\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar bind, bindSingle, d3, dvl, htmlModule, _ref,\n  __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\n\nd3 = __webpack_require__(3);\n\ndvl = __webpack_require__(0);\n\n_ref = __webpack_require__(1), bind = _ref.bind, bindSingle = _ref.bindSingle;\n\nhtmlModule = {};\n\nhtmlModule.resizer = function(_arg) {\n  var dimension, onResize, out, selector;\n  selector = _arg.selector, out = _arg.out, dimension = _arg.dimension;\n  out = dvl.wrapVar(out);\n  dimension = dvl.wrap(dimension || 'width');\n  onResize = function() {\n    var e, val, _dimension;\n    _dimension = dimension.value();\n    if (_dimension === 'width' || _dimension === 'height') {\n      if (selector) {\n        e = jQuery(selector);\n        val = e[_dimension]();\n      } else {\n        val = document.body[_dimension === 'width' ? 'clientWidth' : 'clientHeight'];\n      }\n      return out.value(val);\n    } else {\n      return out.value(null);\n    }\n  };\n  $(window).resize(onResize);\n  dvl.register({\n    listen: dimension,\n    change: out,\n    fn: onResize\n  });\n  return out;\n};\n\nhtmlModule.out = function(_arg) {\n  var attr, data, fn, format, hideInvalid, invalid, out, selector, style, text, updateHtml, what;\n  selector = _arg.selector, data = _arg.data, fn = _arg.fn, format = _arg.format, invalid = _arg.invalid, hideInvalid = _arg.hideInvalid, attr = _arg.attr, style = _arg.style, text = _arg.text;\n  if (!data) {\n    throw new Error('must have data');\n  }\n  data = dvl.wrap(data);\n  format = format != null ? format : fn;\n  if (!selector) {\n    throw new Error('must have selector');\n  }\n  selector = dvl.wrap(selector);\n  format = dvl.wrap(format || dvl.identity);\n  invalid = dvl.wrap(invalid || null);\n  hideInvalid = dvl.wrap(hideInvalid || false);\n  if (attr) {\n    what = dvl.wrap(attr);\n    out = function(selector, string) {\n      return d3.select(selector).attr(what.value(), string);\n    };\n  } else if (style) {\n    what = dvl.wrap(style);\n    out = function(selector, string) {\n      return d3.select(selector).style(what.value(), string);\n    };\n  } else if (text) {\n    out = function(selector, string) {\n      return d3.select(selector).text(string);\n    };\n  } else {\n    out = function(selector, string) {\n      return d3.select(selector).html(string);\n    };\n  }\n  updateHtml = function() {\n    var a, d, inv, s, sel;\n    s = selector.value();\n    a = format.value();\n    d = data.value();\n    if (s != null) {\n      if ((a != null) && (d != null)) {\n        sel = out(s, a(d));\n        if (hideInvalid.value()) {\n          sel.style('display', null);\n        }\n      } else {\n        inv = invalid.value();\n        out(s, inv);\n        if (hideInvalid.value()) {\n          d3.select(s).style('display', 'none');\n        }\n      }\n    }\n  };\n  dvl.register({\n    listen: [data, selector, format],\n    fn: updateHtml\n  });\n};\n\nhtmlModule.list = function(_arg) {\n  var classStr, data, extras, highlight, i, icons, label, link, listClass, myOnEnter, myOnLeave, onClick, onEnter, onLeave, onSelect, parent, selection, selections, ul, _i, _len;\n  parent = _arg.parent, data = _arg.data, label = _arg.label, link = _arg.link, listClass = _arg[\"class\"], selection = _arg.selection, selections = _arg.selections, onSelect = _arg.onSelect, onEnter = _arg.onEnter, onLeave = _arg.onLeave, icons = _arg.icons, extras = _arg.extras, classStr = _arg.classStr, highlight = _arg.highlight;\n  if (!parent) {\n    throw new Error('must have parent');\n  }\n  if (!data) {\n    throw new Error('must have data');\n  }\n  selection = dvl.wrapVar(selection, 'selection');\n  selections = dvl.wrapVar(selections || [], 'selections');\n  highlight = dvl.wrapVar(highlight, 'highlight');\n  data = dvl.wrap(data);\n  label = dvl.wrap(label || dvl.identity);\n  link = dvl.wrap(link);\n  icons || (icons = []);\n  for (_i = 0, _len = icons.length; _i < _len; _i++) {\n    i = icons[_i];\n    i.position || (i.position = 'right');\n  }\n  if (listClass != null) {\n    listClass = dvl.wrap(listClass);\n  } else {\n    listClass = dvl.applyAlways([selection, selections, highlight], function(_selection, _selections, _highlight) {\n      return function(d) {\n        var classParts;\n        classParts = [];\n        if (_selection) {\n          classParts.push(d === _selection ? 'is_selection' : 'isnt_selection');\n        }\n        if (_selections) {\n          classParts.push(__indexOf.call(_selections, d) >= 0 ? 'is_selections' : 'isnt_selections');\n        }\n        if (_highlight) {\n          classParts.push(d === _highlight ? 'is_highlight' : 'isnt_highlight');\n        }\n        if (classParts.length) {\n          return classParts.join(' ');\n        } else {\n          return null;\n        }\n      };\n    });\n  }\n  ul = dvl.valueOf(parent).append('ul').attr('class', classStr);\n  onClick = dvl.group(function(val, i) {\n    var linkVal, _base, _selections;\n    if ((typeof onSelect === \"function\" ? onSelect(val, i) : void 0) === false) {\n      return;\n    }\n    linkVal = typeof (_base = link.value()) === \"function\" ? _base(val) : void 0;\n    selection.value(val);\n    _selections = (selections.value() || []).slice();\n    i = _selections.indexOf(val);\n    if (i === -1) {\n      _selections.push(val);\n    } else {\n      _selections.splice(i, 1);\n    }\n    selections.value(_selections);\n    if (linkVal) {\n      window.location.href = linkVal;\n    }\n  });\n  myOnEnter = function(val) {\n    if ((typeof onEnter === \"function\" ? onEnter(val) : void 0) === false) {\n      return;\n    }\n    highlight.value(val);\n  };\n  myOnLeave = function(val) {\n    if ((typeof onLeave === \"function\" ? onLeave(val) : void 0) === false) {\n      return;\n    }\n    if (highlight.value() === val) {\n      highlight.value(\"\");\n    }\n  };\n  dvl.register({\n    name: 'update_html_list',\n    listen: [data, label, link],\n    fn: function() {\n      var a, addIcons, cont, sel, _class, _data, _label, _link;\n      _data = data.value();\n      _label = label.value();\n      _link = link.value();\n      _class = listClass.value();\n      if (!_data) {\n        return;\n      }\n      _data = _data.valueOf();\n      addIcons = function(el, position) {\n        icons.forEach(function(icon) {\n          if (icon.position !== position) {\n            return;\n          }\n          classStr = 'icon_cont ' + position;\n          if (icon.classStr) {\n            classStr += ' ' + icon.classStr;\n          }\n          el.append('div').attr('class', classStr).attr('title', icon.title).on('click', function(val, i) {\n            if ((typeof icon.onSelect === \"function\" ? icon.onSelect(val, i) : void 0) === false) {\n              d3.event.stopPropagation();\n            }\n          }).on('mouseover', function(val, i) {\n            if ((typeof icon.onEnter === \"function\" ? icon.onEnter(val, i) : void 0) === false) {\n              d3.event.stopPropagation();\n            }\n          }).on('mouseout', function(val, i) {\n            if ((typeof icon.onLeave === \"function\" ? icon.onLeave(val, i) : void 0) === false) {\n              d3.event.stopPropagation();\n            }\n          }).append('div').attr('class', 'icon');\n        });\n      };\n      sel = ul.selectAll('li').data(_data);\n      a = sel.enter().append('li').append('a');\n      addIcons(a, 'left');\n      a.append('span');\n      addIcons(a, 'right');\n      cont = sel.attr('class', _class).on('click', onClick).on('mouseover', myOnEnter).on('mouseout', myOnLeave).select('a').attr('href', _link);\n      cont.select('span').text(_label);\n      sel.exit().remove();\n    }\n  });\n  dvl.register({\n    name: 'update_class_list',\n    listen: [listClass],\n    fn: function() {\n      var _class;\n      _class = listClass.value();\n      ul.selectAll('li').attr('class', _class);\n    }\n  });\n  return {\n    selection: selection,\n    selections: selections,\n    node: ul.node()\n  };\n};\n\nhtmlModule.combobox = function(_arg) {\n  var classStr, data, disabled, divCont, filterCharacters, filteredData, focus, highlight, icons, id, keepOnClick, label, link, listClass, menuAnchor, menuCont, menuOpen, myOnSelect, namespace, onEnter, onLeave, onSelect, parent, selection, selectionLabel, selections, title, updateScroll, valueOut;\n  parent = _arg.parent, classStr = _arg.classStr, data = _arg.data, label = _arg.label, selectionLabel = _arg.selectionLabel, link = _arg.link, listClass = _arg[\"class\"], id = _arg.id, selection = _arg.selection, selections = _arg.selections, onSelect = _arg.onSelect, onEnter = _arg.onEnter, onLeave = _arg.onLeave, menuAnchor = _arg.menuAnchor, title = _arg.title, icons = _arg.icons, keepOnClick = _arg.keepOnClick, disabled = _arg.disabled, highlight = _arg.highlight, focus = _arg.focus;\n  if (!parent) {\n    throw new Error('must have parent');\n  }\n  if (!data) {\n    throw new Error('must have data');\n  }\n  selection = dvl.wrapVar(selection, 'selection');\n  selections = dvl.wrapVar(selections, 'selections');\n  menuAnchor = dvl.wrap(menuAnchor || 'left');\n  data = dvl.wrap(data);\n  label = dvl.wrap(label || dvl.identity);\n  selectionLabel = dvl.wrap(selectionLabel || label);\n  link = dvl.wrap(link);\n  disabled = dvl.wrap(disabled != null ? disabled : false);\n  focus = dvl.wrapVar(focus);\n  filterCharacters = dvl.wrapVar([]).compare(false);\n  filteredData = dvl.def();\n  dvl.register({\n    listen: data,\n    fn: function() {\n      var _data, _selection;\n      _data = data.value();\n      _selection = selection.value();\n      if (!_data || __indexOf.call(_data, _selection) < 0) {\n        setTimeout((function() {\n          return selection.value(null);\n        }), 0);\n      }\n    }\n  });\n  dvl.register({\n    listen: filterCharacters,\n    label: label,\n    data: data,\n    change: filteredData,\n    fn: function() {\n      var _data, _filterCharacters, _filterPhrase, _filteredData, _label;\n      _data = data.value();\n      _filterCharacters = filterCharacters.value();\n      _label = label.value();\n      if (!(_data && _filterCharacters)) {\n        return;\n      }\n      _filterPhrase = _filterCharacters.join('');\n      _filteredData = _data.filter(function(datum) {\n        var _ref1;\n        return ((_ref1 = String(_label(datum))) != null ? _ref1.toLowerCase().indexOf(_filterPhrase) : void 0) > -1;\n      });\n      return filteredData.value(_filteredData);\n    }\n  });\n  if (title) {\n    title = dvl.wrap(title);\n  }\n  icons || (icons = []);\n  menuOpen = dvl(false);\n  dvl.register({\n    listen: menuOpen,\n    change: filterCharacters,\n    fn: function() {\n      return filterCharacters.value([]);\n    }\n  });\n  divCont = bindSingle({\n    parent: parent,\n    self: 'div',\n    attr: {\n      \"class\": dvl.applyAlways({\n        args: [classStr, menuOpen, disabled],\n        fn: function(_classStr, _menuOpen, _disabled) {\n          return [_classStr || '', _menuOpen ? 'open' : 'closed', _disabled ? 'disabled' : ''].join(' ');\n        }\n      })\n    },\n    style: {\n      position: 'relative'\n    }\n  }).value();\n  valueOut = bindSingle({\n    parent: divCont,\n    self: 'input.title-cont',\n    attr: {\n      disabled: dvl.op.iff(disabled, '', null),\n      tabIndex: 0,\n      id: id\n    },\n    on: {\n      blur: function() {\n        focus.value(false);\n      }\n    }\n  }).value();\n  updateScroll = function() {\n    var element, pos, selectionIndex, _data, _menuCont, _selection;\n    _data = data.value();\n    _selection = selection.value();\n    if (!_data) {\n      return;\n    }\n    selectionIndex = _data.indexOf(_selection);\n    if (selectionIndex === -1) {\n      return;\n    }\n    _menuCont = menuCont.node();\n    if (_menuCont.scrollHeight === 0) {\n      return;\n    }\n    element = menuCont.selectAll('li')[0][selectionIndex];\n    pos = $(element).position();\n    if (!pos) {\n      return;\n    }\n    _menuCont.scrollTop = 0;\n    _menuCont.scrollTop = pos.top;\n  };\n  valueOut.on('keydown', (function() {\n    var keyCode, selectionIndex, _data, _filterCharacters, _label, _selection;\n    _data = data.value();\n    if (!_data) {\n      return;\n    }\n    _label = label.value();\n    if (!_label) {\n      return;\n    }\n    keyCode = d3.event.which || d3.event.keyCode;\n    if (keyCode === 9) {\n      menuOpen.value(false);\n      return;\n    }\n    if (keyCode === 38 || keyCode === 40) {\n      d3.event.stopPropagation();\n      d3.event.preventDefault();\n      if (!menuOpen.value()) {\n        menuOpen.value(true);\n      }\n      _selection = selection.value();\n      selectionIndex = _data.indexOf(_selection);\n      if (selectionIndex === -1) {\n        if (_selection === null) {\n          if (_data.length) {\n            selection.value(_data[0]);\n          }\n        } else {\n          throw \"selection was not found in data\";\n        }\n      } else {\n        if (keyCode === 38) {\n          selectionIndex--;\n        } else {\n          selectionIndex++;\n        }\n        selectionIndex += _data.length;\n        selectionIndex %= _data.length;\n        selection.value(_data[selectionIndex]);\n        updateScroll();\n      }\n    }\n    if (keyCode === 13 || keyCode === 27) {\n      d3.event.stopPropagation();\n      d3.event.preventDefault();\n      menuOpen.value(false);\n    }\n    if (keyCode === 8) {\n      _filterCharacters = filterCharacters.value();\n      _filterCharacters.pop();\n      filterCharacters.value(_filterCharacters);\n    }\n  }), true).on('keypress', (function() {\n    var keyCode, _data, _filterCharacters, _label;\n    _data = data.value();\n    if (!_data) {\n      return;\n    }\n    _label = label.value();\n    if (!_label) {\n      return;\n    }\n    keyCode = d3.event.which || d3.event.keyCode;\n    if (!(keyCode === 9 || keyCode === 38 || keyCode === 40 || keyCode === 13 || keyCode === 27)) {\n      _filterCharacters = filterCharacters.value();\n      _filterCharacters.push(String.fromCharCode(keyCode).toLowerCase());\n      filterCharacters.value(_filterCharacters);\n    }\n  }), true);\n  dvl.register({\n    listen: [focus],\n    fn: function() {\n      var _focus, _valueOut;\n      _focus = focus.value();\n      if (_focus == null) {\n        return;\n      }\n      _valueOut = valueOut.node();\n      if (_focus === (_valueOut === document.activeElement)) {\n        return;\n      }\n      setTimeout((function() {\n        if (_focus) {\n          _valueOut.focus();\n        } else {\n          _valueOut.blur();\n        }\n      }), 0);\n    }\n  });\n  myOnSelect = function(text, i) {\n    if (!keepOnClick) {\n      menuOpen.value(false);\n    }\n    return typeof onSelect === \"function\" ? onSelect(text, i) : void 0;\n  };\n  icons.forEach(function(icon) {\n    var icon_onSelect;\n    icon_onSelect = icon.onSelect;\n    icon.onSelect = function(val, i) {\n      if (!keepOnClick) {\n        menuOpen.value(false);\n      }\n      return typeof icon_onSelect === \"function\" ? icon_onSelect(val, i) : void 0;\n    };\n  });\n  menuCont = divCont.append('div').attr('class', 'menu-cont').style('position', 'absolute').style('z-index', 1000);\n  dvl.register({\n    listen: [menuOpen, menuAnchor],\n    fn: function() {\n      var _menuAnchor, _menuOpen;\n      _menuOpen = menuOpen.value();\n      if (_menuOpen) {\n        menuCont.style('display', null).style('top', '100%');\n        _menuAnchor = menuAnchor.value();\n        if (_menuAnchor === 'left') {\n          menuCont.style('left', 0).style('right', null);\n        } else {\n          menuCont.style('left', null).style('right', 0);\n        }\n      } else {\n        menuCont.style('display', 'none');\n      }\n    }\n  });\n  htmlModule.list({\n    parent: menuCont,\n    classStr: 'list',\n    data: filteredData,\n    label: label,\n    link: link,\n    \"class\": listClass,\n    selection: selection,\n    selections: selections,\n    onSelect: myOnSelect,\n    onEnter: onEnter,\n    onLeave: onLeave,\n    icons: icons\n  });\n  namespace = dvl.namespace('dropdown');\n  d3.select(window).on(\"click.\" + namespace, (function() {\n    var target, togMenuOpen, _ref1;\n    target = d3.event.target;\n    if (disabled.value()) {\n      return;\n    }\n    if ($(menuCont.node()).find(target).length) {\n      return;\n    }\n    if (divCont.node() === target || $(divCont.node()).find(target).length) {\n      togMenuOpen = !menuOpen.value();\n      if (togMenuOpen || valueOut.node().id !== ((_ref1 = document.activeElement) != null ? _ref1.id : void 0)) {\n        menuOpen.value(!menuOpen.value());\n      }\n    } else {\n      menuOpen.value(false);\n    }\n  }), true).on(\"blur.\" + namespace, function() {\n    menuOpen.value(false);\n  });\n  dvl.register({\n    name: 'selection_updater',\n    listen: [menuOpen, selection, selectionLabel, title],\n    fn: function() {\n      var sel, selLabel, titleText;\n      if (menuOpen.value()) {\n        valueOut.property('value', '');\n        return;\n      }\n      if (title) {\n        titleText = title.value();\n      } else {\n        sel = selection.value();\n        selLabel = selectionLabel.value();\n        titleText = selLabel ? selLabel(sel) : '';\n      }\n      valueOut.property('value', titleText != null ? titleText : '');\n    }\n  });\n  return {\n    node: divCont.node(),\n    menuCont: menuCont.node(),\n    open: menuOpen,\n    focus: focus,\n    selection: selection,\n    selections: selections\n  };\n};\n\nhtmlModule.dropdown = function(_arg) {\n  var classStr, data, disabled, divCont, focus, highlight, icons, id, keepOnClick, label, link, listClass, menuAnchor, menuCont, menuOpen, myOnSelect, namespace, onEnter, onLeave, onSelect, parent, selection, selectionLabel, selections, title, updateScroll, valueOut;\n  parent = _arg.parent, classStr = _arg.classStr, data = _arg.data, label = _arg.label, selectionLabel = _arg.selectionLabel, link = _arg.link, listClass = _arg[\"class\"], id = _arg.id, selection = _arg.selection, selections = _arg.selections, onSelect = _arg.onSelect, onEnter = _arg.onEnter, onLeave = _arg.onLeave, menuAnchor = _arg.menuAnchor, title = _arg.title, icons = _arg.icons, keepOnClick = _arg.keepOnClick, disabled = _arg.disabled, highlight = _arg.highlight, focus = _arg.focus;\n  if (!parent) {\n    throw new Error('must have parent');\n  }\n  if (!data) {\n    throw new Error('must have data');\n  }\n  selection = dvl.wrapVar(selection, 'selection');\n  selections = dvl.wrapVar(selections, 'selections');\n  menuAnchor = dvl.wrap(menuAnchor || 'left');\n  data = dvl.wrap(data);\n  label = dvl.wrap(label || dvl.identity);\n  selectionLabel = dvl.wrap(selectionLabel || label);\n  link = dvl.wrap(link);\n  disabled = dvl.wrap(disabled != null ? disabled : false);\n  focus = dvl.wrapVar(focus);\n  dvl.register({\n    listen: data,\n    fn: function() {\n      var _data, _selection;\n      _data = data.value();\n      _selection = selection.value();\n      if (!_data || __indexOf.call(_data, _selection) < 0) {\n        setTimeout((function() {\n          return selection.value(null);\n        }), 0);\n      }\n    }\n  });\n  if (title) {\n    title = dvl.wrap(title);\n  }\n  icons || (icons = []);\n  menuOpen = dvl(false);\n  divCont = bindSingle({\n    parent: parent,\n    self: 'div',\n    attr: {\n      \"class\": dvl.applyAlways({\n        args: [classStr, menuOpen, disabled],\n        fn: function(_classStr, _menuOpen, _disabled) {\n          return [_classStr || '', _menuOpen ? 'open' : 'closed', _disabled ? 'disabled' : ''].join(' ');\n        }\n      })\n    },\n    style: {\n      position: 'relative'\n    }\n  }).value();\n  valueOut = bindSingle({\n    parent: divCont,\n    self: 'div.title-cont',\n    attr: {\n      disabled: dvl.op.iff(disabled, '', null),\n      tabIndex: 0,\n      id: id\n    },\n    on: {\n      blur: function() {\n        focus.value(false);\n      }\n    },\n    text: title || dvl.applyAlways(selection, label)\n  }).value();\n  updateScroll = function() {\n    var element, selectionIndex, _data, _menuCont, _selection;\n    _data = data.value();\n    _selection = selection.value();\n    if (!_data) {\n      return;\n    }\n    selectionIndex = _data.indexOf(_selection);\n    if (selectionIndex === -1) {\n      return;\n    }\n    _menuCont = menuCont.node();\n    if (_menuCont.scrollHeight === 0) {\n      return;\n    }\n    element = menuCont.selectAll('li')[0][selectionIndex];\n    _menuCont.scrollTop = 0;\n    _menuCont.scrollTop = $(element).position().top;\n  };\n  valueOut.on('keydown', (function() {\n    var keyCode, selectionIndex, _data, _label, _selection;\n    _data = data.value();\n    if (!_data) {\n      return;\n    }\n    _label = label.value();\n    if (!_label) {\n      return;\n    }\n    keyCode = d3.event.which || d3.event.keyCode;\n    if (keyCode === 9) {\n      menuOpen.value(false);\n      return;\n    }\n    if (keyCode === 38 || keyCode === 40) {\n      d3.event.stopPropagation();\n      d3.event.preventDefault();\n      if (!menuOpen.value()) {\n        menuOpen.value(true);\n      }\n      _selection = selection.value();\n      selectionIndex = _data.indexOf(_selection);\n      if (selectionIndex === -1) {\n        if (_selection === null) {\n          if (_data.length) {\n            selection.value(_data[0]);\n          }\n        } else {\n          throw \"selection was not found in data\";\n        }\n      } else {\n        if (keyCode === 38) {\n          selectionIndex--;\n        } else {\n          selectionIndex++;\n        }\n        selectionIndex += _data.length;\n        selectionIndex %= _data.length;\n        selection.value(_data[selectionIndex]);\n        updateScroll();\n      }\n    }\n    if (keyCode === 13 || keyCode === 27) {\n      d3.event.stopPropagation();\n      d3.event.preventDefault();\n      menuOpen.value(false);\n    }\n  }), true).on('keypress', (function() {\n    var datum, keyCode, userChar, _data, _i, _label, _len;\n    _data = data.value();\n    if (!_data) {\n      return;\n    }\n    _label = label.value();\n    if (!_label) {\n      return;\n    }\n    keyCode = d3.event.which || d3.event.keyCode;\n    userChar = String.fromCharCode(keyCode).toLowerCase();\n    if (userChar && !(keyCode === 9 || keyCode === 38 || keyCode === 40 || keyCode === 13 || keyCode === 27)) {\n      for (_i = 0, _len = _data.length; _i < _len; _i++) {\n        datum = _data[_i];\n        if (datum && _label(datum).charAt(0).toLowerCase() === userChar) {\n          selection.value(datum);\n          updateScroll();\n          break;\n        }\n      }\n    }\n  }), true);\n  dvl.register({\n    listen: [focus],\n    fn: function() {\n      var _focus, _valueOut;\n      _focus = focus.value();\n      if (_focus == null) {\n        return;\n      }\n      _valueOut = valueOut.node();\n      if (_focus === (_valueOut === document.activeElement)) {\n        return;\n      }\n      setTimeout((function() {\n        if (_focus) {\n          _valueOut.focus();\n        } else {\n          _valueOut.blur();\n        }\n      }), 0);\n    }\n  });\n  myOnSelect = function(text, i) {\n    if (!keepOnClick) {\n      menuOpen.value(false);\n    }\n    return typeof onSelect === \"function\" ? onSelect(text, i) : void 0;\n  };\n  icons.forEach(function(icon) {\n    var icon_onSelect;\n    icon_onSelect = icon.onSelect;\n    icon.onSelect = function(val, i) {\n      if (!keepOnClick) {\n        menuOpen.value(false);\n      }\n      return typeof icon_onSelect === \"function\" ? icon_onSelect(val, i) : void 0;\n    };\n  });\n  menuCont = divCont.append('div').attr('class', 'menu-cont').style('position', 'absolute').style('z-index', 1000);\n  dvl.register({\n    listen: [menuOpen, menuAnchor],\n    fn: function() {\n      var _menuAnchor, _menuOpen;\n      _menuOpen = menuOpen.value();\n      if (_menuOpen) {\n        menuCont.style('display', null).style('top', '100%');\n        _menuAnchor = menuAnchor.value();\n        if (_menuAnchor === 'left') {\n          menuCont.style('left', 0).style('right', null);\n        } else {\n          menuCont.style('left', null).style('right', 0);\n        }\n      } else {\n        menuCont.style('display', 'none');\n      }\n    }\n  });\n  htmlModule.list({\n    parent: menuCont,\n    classStr: 'list',\n    data: data,\n    label: label,\n    link: link,\n    \"class\": listClass,\n    selection: selection,\n    selections: selections,\n    onSelect: myOnSelect,\n    onEnter: onEnter,\n    onLeave: onLeave,\n    icons: icons\n  });\n  namespace = dvl.namespace('dropdown');\n  d3.select(window).on(\"click.\" + namespace, (function() {\n    var target;\n    target = d3.event.target;\n    if (disabled.value()) {\n      return;\n    }\n    if ($(menuCont.node()).find(target).length) {\n      return;\n    }\n    if (divCont.node() === target || $(divCont.node()).find(target).length) {\n      menuOpen.value(!menuOpen.value());\n    } else {\n      menuOpen.value(false);\n    }\n  }), true).on(\"blur.\" + namespace, function() {\n    menuOpen.value(false);\n  });\n  dvl.register({\n    name: 'selection_updater',\n    listen: [selection, selectionLabel, title],\n    fn: function() {\n      var sel, selLabel, titleText;\n      if (title) {\n        titleText = title.value();\n      } else {\n        sel = selection.value();\n        selLabel = selectionLabel.value();\n        titleText = selLabel ? selLabel(sel) : '';\n      }\n      valueOut.property('value', titleText != null ? titleText : '');\n    }\n  });\n  return {\n    node: divCont.node(),\n    menuCont: menuCont.node(),\n    open: menuOpen,\n    focus: focus,\n    selection: selection,\n    selections: selections\n  };\n};\n\nhtmlModule.select = function(_arg) {\n  var classStr, data, focus, id, label, onChange, parent, selChange, selectEl, selection, value, visible;\n  parent = _arg.parent, data = _arg.data, classStr = _arg.classStr, value = _arg.value, label = _arg.label, selection = _arg.selection, id = _arg.id, onChange = _arg.onChange, focus = _arg.focus, visible = _arg.visible;\n  if (!parent) {\n    throw new Error('must have parent');\n  }\n  if (!data) {\n    throw new Error('must have data');\n  }\n  selection = dvl.wrapVar(selection, 'selection');\n  focus = dvl.wrapVar(focus != null ? focus : false);\n  visible = dvl.wrap(visible != null ? visible : true);\n  data = dvl.wrap(data);\n  value || (value = label);\n  value = dvl.wrap(value || String);\n  selChange = function() {\n    var i, val, _data, _selectEl;\n    _data = data.value();\n    if (_data) {\n      _data = _data.valueOf();\n      _selectEl = selectEl.value();\n      i = _selectEl.property('value');\n      val = _data[i];\n      if ((typeof onChange === \"function\" ? onChange(val) : void 0) === false) {\n        return;\n      }\n      selection.value(val);\n    } else {\n      selection.value(null);\n    }\n  };\n  selectEl = bindSingle({\n    parent: parent,\n    self: 'select',\n    attr: {\n      id: id,\n      \"class\": classStr\n    },\n    style: {\n      display: dvl.op.iff(visible, null, 'none')\n    },\n    on: {\n      change: selChange,\n      focus: function() {\n        focus.value(true);\n      },\n      blur: function() {\n        focus.value(false);\n      }\n    }\n  });\n  bind({\n    parent: selectEl,\n    self: 'option',\n    data: data,\n    attr: {\n      value: function(d, i) {\n        return i;\n      }\n    },\n    text: value\n  });\n  dvl.register({\n    listen: [data, selection],\n    fn: function() {\n      var idx, _data, _selectEl, _selection;\n      _data = data.value();\n      _selection = selection.value();\n      if (!_data) {\n        return;\n      }\n      _data = _data.valueOf();\n      idx = _data.indexOf(_selection);\n      _selectEl = selectEl.value();\n      if (_selectEl.property('value') !== idx) {\n        _selectEl.property('value', idx);\n      }\n    }\n  });\n  dvl.register({\n    listen: [selectEl, focus],\n    fn: function() {\n      var _focus, _selectEl;\n      _selectEl = selectEl.value();\n      _focus = focus.value();\n      if (!(_selectEl && (_focus != null))) {\n        return;\n      }\n      _selectEl = _selectEl.node();\n      return _focus === (_selectEl === document.activeElement);\n      if (_focus) {\n        _selectEl.focus();\n      } else {\n        _selectEl.blur();\n      }\n    }\n  });\n  selChange();\n  return {\n    node: selectEl.value(),\n    selection: selection,\n    focus: focus\n  };\n};\n\ndvl.compare = function(acc, reverse) {\n  acc = dvl.wrap(acc || dvl.identity);\n  reverse = dvl.wrap(reverse || false);\n  return dvl.apply({\n    args: [acc, reverse],\n    fn: function(acc, reverse) {\n      var cmp;\n      cmp = reverse ? d3.descending : d3.ascending;\n      return function(a, b) {\n        return cmp(acc(a), acc(b));\n      };\n    }\n  });\n};\n\n(function() {\n  var addPxIfNeeded, defaultCompareModes, numberRegEx;\n  defaultCompareModes = ['up', 'down'];\n  numberRegEx = /\\d+(?:\\.\\d+)?/;\n  addPxIfNeeded = function(str) {\n    if (str == null) {\n      return null;\n    }\n    if (numberRegEx.test(str)) {\n      return str + 'px';\n    } else {\n      return str;\n    }\n  };\n  htmlModule.table = function(_arg) {\n    var bodyCol, c, classStr, columns, comp, compare, compareList, compareMap, data, headParent, headTable, headerCol, onRow, parent, rowClass, rowLimit, sort, sortDir, sortOn, sortOnIndicator, table, _i, _len, _ref1;\n    parent = _arg.parent, headParent = _arg.headParent, data = _arg.data, sort = _arg.sort, classStr = _arg.classStr, rowClass = _arg.rowClass, rowLimit = _arg.rowLimit, columns = _arg.columns, onRow = _arg.on;\n    table = bindSingle({\n      parent: parent,\n      self: 'table',\n      attr: {\n        \"class\": classStr\n      }\n    });\n    if (headParent) {\n      headTable = bindSingle({\n        parent: headParent,\n        self: 'table',\n        attr: {\n          \"class\": (classStr != null ? classStr : '') + ' head'\n        }\n      });\n    } else {\n      headTable = table;\n    }\n    sort || (sort = {});\n    sortOn = dvl.wrapVar(sort.on);\n    sortDir = dvl.wrapVar(sort.dir);\n    sortOnIndicator = dvl.wrapVar((_ref1 = sort.onIndicator) != null ? _ref1 : sortOn);\n    headerCol = [];\n    bodyCol = [];\n    compareMap = {};\n    compareList = [sortOn, sortDir];\n    for (_i = 0, _len = columns.length; _i < _len; _i++) {\n      c = columns[_i];\n      if (c.sortable) {\n        if (c.compare != null) {\n          comp = dvl.wrap(c.compare);\n        } else {\n          if (c.ignoreCase) {\n            comp = dvl.compare(dvl.chain(c.value, function(d) {\n              if (d) {\n                return d.toLowerCase();\n              } else {\n                return d;\n              }\n            }));\n          } else {\n            comp = dvl.compare(c.value);\n          }\n        }\n        compareMap[c.id] = comp;\n        compareList.push(comp);\n        if (!c.compareModes) {\n          c.compareModes = defaultCompareModes;\n        }\n      }\n      headerCol.push({\n        id: c.id,\n        title: c.title,\n        \"class\": (c[\"class\"] || '') + (c.sortable ? ' sortable' : ''),\n        visible: c.visible,\n        tooltip: c.headerTooltip,\n        width: c.width\n      });\n      bodyCol.push({\n        id: c.id,\n        \"class\": c[\"class\"],\n        visible: c.visible,\n        value: c.value,\n        hover: c.hover,\n        render: c.render,\n        on: c.on,\n        width: c.width\n      });\n    }\n    headerCol.forEach(function(c) {\n      c.indicator = dvl.applyAlways([sortOn, sortDir], function(_sortOn, _sortDir) {\n        if (_sortOn === c.id) {\n          return _sortDir || 'none';\n        } else {\n          return 'none';\n        }\n      });\n    });\n    compare = dvl(null);\n    dvl.register({\n      listen: compareList,\n      change: [compare],\n      fn: function() {\n        var cmp, oldCmp, _ref2, _sortDir, _sortOn;\n        _sortOn = sortOn.value();\n        _sortDir = sortDir.value();\n        if (_sortOn != null) {\n          cmp = (_ref2 = compareMap[_sortOn]) != null ? _ref2.value() : void 0;\n          if (cmp && _sortDir === 'down') {\n            oldCmp = cmp;\n            cmp = function(a, b) {\n              return oldCmp(b, a);\n            };\n          }\n          compare.value(cmp);\n        } else {\n          compare.value(null);\n        }\n      }\n    });\n    htmlModule.table.header({\n      parent: headTable,\n      columns: headerCol,\n      onClick: function(id) {\n        var column, compareModes, _j, _len1;\n        column = null;\n        for (_j = 0, _len1 = columns.length; _j < _len1; _j++) {\n          c = columns[_j];\n          if (c.id === id) {\n            column = c;\n            break;\n          }\n        }\n        if (!(column && column.sortable)) {\n          return;\n        }\n        compareModes = column.compareModes;\n        if (id === sortOn.value()) {\n          sortDir.set(compareModes[(compareModes.indexOf(sortDir.value()) + 1) % compareModes.length]);\n          dvl.notify(sortDir);\n        } else {\n          sortOn.set(id);\n          sortDir.set(compareModes[0]);\n          dvl.notify(sortOn, sortDir);\n        }\n      }\n    });\n    htmlModule.table.body({\n      parent: table,\n      classStr: 'data',\n      data: data,\n      rowClass: rowClass,\n      rowLimit: rowLimit,\n      columns: bodyCol,\n      compare: compare,\n      on: onRow\n    });\n    return {\n      node: table\n    };\n  };\n  htmlModule.table.header = function(_arg) {\n    var c, columns, enterLiner, enterTh, headerRow, listen, nc, newColumns, onClick, parent, sel, thead, _i, _len, _ref1;\n    parent = _arg.parent, columns = _arg.columns, onClick = _arg.onClick;\n    if (!parent) {\n      throw new Error('there needs to be a parent');\n    }\n    onClick = dvl.wrap(onClick);\n    thead = dvl.valueOf(parent).append('thead');\n    headerRow = thead.append('tr');\n    listen = [onClick];\n    newColumns = [];\n    for (_i = 0, _len = columns.length; _i < _len; _i++) {\n      c = columns[_i];\n      newColumns.push(nc = {\n        id: c.id,\n        title: dvl.wrap(c.title),\n        \"class\": dvl.wrap(c[\"class\"]),\n        visible: dvl.wrap((_ref1 = c.visible) != null ? _ref1 : true),\n        tooltip: dvl.wrap(c.tooltip),\n        indicator: c.indicator ? dvl.wrap(c.indicator) : void 0,\n        width: dvl.wrap(c.width)\n      });\n      listen.push(nc.title, nc[\"class\"], nc.visible, nc.tooltip, nc.indicator, nc.width);\n    }\n    columns = newColumns;\n    sel = headerRow.selectAll('th').data(columns);\n    enterTh = sel.enter().append('th');\n    enterLiner = enterTh.append('div').attr('class', 'liner');\n    enterLiner.append('span');\n    enterLiner.append('div').attr('class', 'indicator').style('display', 'none');\n    sel.exit().remove();\n    dvl.register({\n      name: 'header_render',\n      listen: listen,\n      fn: function() {\n        var i, ind, visibleChanged, w, _indicator, _j, _len1;\n        for (i = _j = 0, _len1 = columns.length; _j < _len1; i = ++_j) {\n          c = columns[i];\n          sel = headerRow.select(\"th:nth-child(\" + (i + 1) + \")\");\n          visibleChanged = c.visible.hasChanged();\n          if (c.visible.value()) {\n            sel.datum(c);\n            if (c[\"class\"].hasChanged() || visibleChanged) {\n              sel.attr('class', c[\"class\"].value());\n            }\n            if (c.tooltip.hasChanged() || visibleChanged) {\n              sel.attr('title', c.tooltip.value());\n            }\n            if (c.width.hasChanged() || visibleChanged) {\n              w = addPxIfNeeded(c.width.value());\n              sel.style('min-width', w).style('width', w).style('max-width', w);\n            }\n            if (visibleChanged) {\n              sel.style('display', null);\n            }\n            if (onClick.hasChanged() || visibleChanged) {\n              sel.on('click', function(d) {\n                var _base;\n                return typeof (_base = onClick.value()) === \"function\" ? _base(d.id) : void 0;\n              });\n            }\n            if (c.title.hasChanged() || visibleChanged) {\n              sel.select('span').text(c.title.value());\n            }\n            if (c.indicator && (c.indicator.hasChanged() || visibleChanged)) {\n              _indicator = c.indicator.value();\n              ind = sel.select('div.indicator');\n              if (_indicator) {\n                ind.style('display', null).attr('class', 'indicator ' + _indicator);\n              } else {\n                ind.style('display', 'none');\n              }\n            }\n          } else {\n            if (visibleChanged) {\n              sel.style('display', 'none');\n            }\n          }\n        }\n      }\n    });\n    return {\n      node: thead\n    };\n  };\n  htmlModule.table.body = function(_arg) {\n    var c, change, classStr, columns, compare, data, k, listen, nc, newColumns, onRow, onRowNew, parent, render, rowClass, rowLimit, tbody, v, _i, _j, _len, _len1, _ref1, _ref2;\n    parent = _arg.parent, data = _arg.data, compare = _arg.compare, rowClass = _arg.rowClass, classStr = _arg.classStr, rowLimit = _arg.rowLimit, columns = _arg.columns, onRow = _arg.on;\n    if (!parent) {\n      throw new Error('there needs to be a parent');\n    }\n    if (!data) {\n      throw new Error('there needs to be data');\n    }\n    tbody = dvl.valueOf(parent).append('tbody').attr('class', classStr);\n    compare = dvl.wrap(compare);\n    if (rowClass != null) {\n      rowClass = dvl.wrap(rowClass);\n    }\n    rowLimit = dvl.wrap(rowLimit);\n    listen = [data, compare, rowClass, rowLimit];\n    change = [];\n    onRowNew = {};\n    for (k in onRow) {\n      v = onRow[k];\n      v = dvl.wrap(v);\n      listen.push(v);\n      onRowNew[k] = v;\n    }\n    onRow = onRowNew;\n    newColumns = [];\n    for (_i = 0, _len = columns.length; _i < _len; _i++) {\n      c = columns[_i];\n      newColumns.push(nc = {\n        id: c.id,\n        \"class\": dvl.wrap(c[\"class\"]),\n        visible: dvl.wrap((_ref1 = c.visible) != null ? _ref1 : true),\n        hover: dvl.wrap(c.hover),\n        value: dvl.wrap(c.value),\n        width: dvl.wrap(c.width)\n      });\n      listen.push(nc[\"class\"], nc.visible, nc.hover, nc.width);\n      nc.render = c.render || 'text';\n      nc.on = {};\n      _ref2 = c.on;\n      for (k in _ref2) {\n        v = _ref2[k];\n        v = dvl.wrap(v);\n        listen.push(v);\n        nc.on[k] = v;\n      }\n      change.push(nc.selection = dvl().name(\"\" + c.id + \"_selection\"));\n    }\n    columns = newColumns;\n    dvl.register({\n      name: 'body_render',\n      listen: listen,\n      change: change,\n      fn: function() {\n        var colSel, dataSorted, enterRowSel, i, rowSel, sel, visibleChanged, w, _compare, _j, _len1, _ref3, _rowClass, _rowLimit;\n        dataSorted = (data.value() || []).valueOf();\n        _compare = compare.value();\n        if (_compare) {\n          dataSorted = dataSorted.slice().sort(_compare);\n        }\n        _rowLimit = rowLimit.value();\n        if (_rowLimit != null) {\n          dataSorted = dataSorted.slice(0, _rowLimit);\n        }\n        rowSel = tbody.selectAll('tr').data(dataSorted);\n        enterRowSel = rowSel.enter().append('tr');\n        rowSel.exit().remove();\n        if (rowClass) {\n          _rowClass = rowClass.value();\n          rowSel.attr('class', _rowClass);\n        }\n        for (k in onRow) {\n          v = onRow[k];\n          rowSel.on(k, v.value());\n        }\n        colSel = rowSel.selectAll('td').data(columns);\n        colSel.enter().append('td');\n        colSel.exit().remove();\n        for (i = _j = 0, _len1 = columns.length; _j < _len1; i = ++_j) {\n          c = columns[i];\n          sel = tbody.selectAll(\"td:nth-child(\" + (i + 1) + \")\").data(dataSorted);\n          visibleChanged = c.visible.hasChanged() || data.hasChanged();\n          if (c.visible.value()) {\n            if (c[\"class\"].hasChanged() || visibleChanged) {\n              sel.attr('class', c[\"class\"].value());\n            }\n            if (c.hover.hasChanged() || visibleChanged) {\n              sel.attr('title', c.hover.value());\n            }\n            if (c.width.hasChanged() || visibleChanged) {\n              w = addPxIfNeeded(c.width.value());\n              sel.style('min-width', w).style('width', w).style('max-width', w);\n            }\n            if (visibleChanged) {\n              sel.style('display', null);\n            }\n            _ref3 = c.on;\n            for (k in _ref3) {\n              v = _ref3[k];\n              if (v.hasChanged() || visibleChanged) {\n                sel.on(k, v.value());\n              }\n            }\n            c.selection.set(sel).notify();\n          } else {\n            if (visibleChanged) {\n              sel.style('display', 'none');\n            }\n          }\n        }\n      }\n    });\n    for (_j = 0, _len1 = columns.length; _j < _len1; _j++) {\n      c = columns[_j];\n      render = typeof c.render === 'function' ? c.render : htmlModule.table.render[c.render];\n      render.call(c, c.selection, c.value);\n    }\n    return {\n      node: tbody\n    };\n  };\n  return htmlModule.table.render = {\n    text: function(selection, value) {\n      dvl.register({\n        listen: [selection, value],\n        fn: function() {\n          var _selection, _value;\n          _selection = selection.value();\n          _value = value.value();\n          if ((_selection != null) && _value) {\n            _selection.text(_value);\n          }\n          return selection;\n        }\n      });\n    },\n    html: function(selection, value) {\n      dvl.register({\n        listen: [selection, value],\n        fn: function() {\n          var _selection, _value;\n          _selection = selection.value();\n          _value = value.value();\n          if ((_selection != null) && _value) {\n            _selection.html(_value);\n          }\n          return selection;\n        }\n      });\n    },\n    aLink: function(_arg) {\n      var href;\n      href = _arg.href;\n      return function(selection, value) {\n        return bind({\n          parent: selection,\n          self: 'a.link',\n          attr: {\n            href: href\n          },\n          text: value\n        });\n      };\n    },\n    img: function(selection, value) {\n      return bind({\n        parent: selection,\n        self: 'img',\n        attr: {\n          src: value\n        }\n      });\n    },\n    imgDiv: function(selection, value) {\n      return bind({\n        parent: selection,\n        self: 'div',\n        attr: {\n          \"class\": value\n        }\n      });\n    },\n    button: function(_arg) {\n      var classStr, onObj;\n      classStr = _arg.classStr, onObj = _arg.on;\n      return function(selection, value) {\n        return bind({\n          parent: selection,\n          self: 'button',\n          attr: {\n            \"class\": classStr\n          },\n          on: onObj,\n          text: value\n        });\n      };\n    },\n    sparkline: function(_arg) {\n      var height, padding, width, x, y;\n      width = _arg.width, height = _arg.height, x = _arg.x, y = _arg.y, padding = _arg.padding;\n      if (padding == null) {\n        padding = 0;\n      }\n      return function(selection, value) {\n        var dataFn, lineFn, svg;\n        lineFn = dvl.apply({\n          args: [x, y, padding],\n          fn: function(x, y, padding) {\n            return function(d) {\n              var sx, sy;\n              sx = d3.scale.linear().domain(d3.extent(d, function(d) {\n                return d[x];\n              })).range([padding, width - padding]);\n              sy = d3.scale.linear().domain(d3.extent(d, function(d) {\n                return d[y];\n              })).range([height - padding, padding]);\n              return d3.svg.line().x(function(dp) {\n                return sx(dp[x]);\n              }).y(function(dp) {\n                return sy(dp[y]);\n              })(d);\n            };\n          }\n        });\n        dataFn = dvl.apply({\n          args: value,\n          fn: function(value) {\n            return function(d, i) {\n              return [value(d, i)];\n            };\n          }\n        });\n        svg = bind({\n          parent: selection,\n          self: 'svg.sparkline',\n          data: dataFn,\n          attr: {\n            width: width,\n            height: height\n          }\n        });\n        return bind({\n          parent: svg,\n          self: 'path',\n          data: function(d) {\n            return [d];\n          },\n          attr: {\n            d: lineFn\n          }\n        });\n      };\n    }\n  };\n})();\n\nmodule.exports = htmlModule;\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar d3, dvl, miscModule;\n\nd3 = __webpack_require__(3);\n\ndvl = __webpack_require__(0);\n\nmiscModule = {};\n\nmiscModule.mouse = function(element, out) {\n  var height, recorder, width;\n  element = dvl.wrap(element);\n  width = dvl.wrap(width);\n  height = dvl.wrap(height);\n  out = dvl.wrapVar(out, 'mouse');\n  recorder = function() {\n    var mouse, _element;\n    _element = element.value();\n    mouse = _element && d3.event ? d3.mouse(_element.node()) : null;\n    out.value(mouse);\n  };\n  element.value().on('mousemove', recorder).on('mouseout', recorder);\n  dvl.register({\n    name: 'mouse_recorder',\n    listen: element,\n    change: out,\n    fn: recorder\n  });\n  return out;\n};\n\nmiscModule.delay = function(data, time) {\n  var out, timeoutFn, timer;\n  if (time == null) {\n    time = 1;\n  }\n  data = dvl.wrap(data);\n  time = dvl.wrap(time);\n  timer = null;\n  out = dvl();\n  timeoutFn = function() {\n    out.value(data.value());\n    timer = null;\n  };\n  dvl.register({\n    listen: [data, time],\n    change: [out],\n    name: 'timeout',\n    fn: function() {\n      var t;\n      if (timer) {\n        clearTimeout(timer);\n      }\n      timer = null;\n      if (time.value() != null) {\n        t = Math.max(0, time.value());\n        timer = setTimeout(timeoutFn, t);\n      }\n    }\n  });\n  return out;\n};\n\nmodule.exports = miscModule;\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar dvl;\n\ndvl = __webpack_require__(0);\n\nmodule.exports = function(_arg) {\n  var acc, data, name, out, trim, updateSnap, value;\n  data = _arg.data, acc = _arg.acc, value = _arg.value, trim = _arg.trim, name = _arg.name;\n  if (!data) {\n    throw new Error('No data given');\n  }\n  acc = dvl.wrap(acc || dvl.identity);\n  value = dvl.wrap(value);\n  trim = dvl.wrap(trim || false);\n  name || (name = 'snaped_data');\n  out = dvl(null).name(name);\n  updateSnap = function() {\n    var a, d, dist, ds, i, minDatum, minDist, minIdx, v, _i, _len;\n    ds = data.value();\n    a = acc.value();\n    v = value.value();\n    if (ds && a && v) {\n      ds = ds.valueOf();\n      if (trim.value() && ds.length !== 0 && (v < a(ds[0]) || a(ds[ds.length - 1]) < v)) {\n        minIdx = -1;\n      } else {\n        minIdx = -1;\n        minDist = Infinity;\n        if (ds) {\n          for (i = _i = 0, _len = ds.length; _i < _len; i = ++_i) {\n            d = ds[i];\n            dist = Math.abs(a(d) - v);\n            if (dist < minDist) {\n              minDist = dist;\n              minIdx = i;\n            }\n          }\n        }\n      }\n      minDatum = minIdx < 0 ? null : ds[minIdx];\n      if (out.value() !== minDatum) {\n        out.set(minDatum);\n      }\n    } else {\n      out.set(null);\n    }\n    return dvl.notify(out);\n  };\n  dvl.register({\n    fn: updateSnap,\n    listen: [data, acc, value, trim],\n    change: [out],\n    name: name + '_maker'\n  });\n  return out;\n};\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar bind, bindSingle, clipId, dvl, svgModule, _ref;\n\ndvl = __webpack_require__(0);\n\n_ref = __webpack_require__(1), bind = _ref.bind, bindSingle = _ref.bindSingle;\n\nclipId = 0;\n\nsvgModule = {};\n\nsvgModule.clipPath = function(_arg) {\n  var cp, height, myId, parent, width, x, y;\n  parent = _arg.parent, x = _arg.x, y = _arg.y, width = _arg.width, height = _arg.height;\n  x = dvl.wrap(x || 0);\n  y = dvl.wrap(y || 0);\n  clipId++;\n  myId = \"cp\" + clipId;\n  cp = dvl.valueOf(parent).append('defs').append('clipPath').attr('id', myId);\n  bind({\n    parent: cp,\n    self: 'rect',\n    attr: {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    }\n  });\n  return \"url(#\" + myId + \")\";\n};\n\nmodule.exports = svgModule;\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction lift(fn) {\n  var fn = arguments[0];\n  if ('function' !== typeof fn) throw new TypeError();\n\n  return function () /* args: to fn */{\n    var args = Array.prototype.slice.call(arguments),\n        n = args.length,\n        i;\n\n    for (i = 0; i < n; i++) {\n      if ('function' === typeof args[i]) {\n        return function () /* args2 to function wrapper */{\n          var args2 = Array.prototype.slice.call(arguments),\n              reduced = [],\n              i,\n              v;\n\n          for (i = 0; i < n; i++) {\n            v = args[i];\n            reduced.push('function' === typeof v ? v.apply(this, args2) : v);\n          }\n\n          return fn.apply(null, reduced);\n        };\n      }\n    }\n\n    // Fell through so there are no functions in the arguments to fn -> call it!\n    return fn.apply(null, args);\n  };\n}\n\nif (true) {\n  module.exports = lift;\n}\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports) {\n\nvar PriorityQueue;\n\nPriorityQueue = (function() {\n  function PriorityQueue(key) {\n    this.key = key;\n    this.nodes_ = [];\n  }\n\n  PriorityQueue.prototype.length = function() {\n    return this.nodes_.length;\n  };\n\n  PriorityQueue.prototype.push = function(node) {\n    var nodes;\n    nodes = this.nodes_;\n    nodes.push(node);\n    this.moveUp_(nodes.length - 1);\n    return this;\n  };\n\n  PriorityQueue.prototype.shift = function() {\n    var count, nodes, rootNode;\n    nodes = this.nodes_;\n    count = nodes.length;\n    rootNode = nodes[0];\n    if (count <= 0) {\n      return void 0;\n    } else if (count === 1) {\n      nodes.pop();\n    } else {\n      nodes[0] = nodes.pop();\n      this.moveDown_(0);\n    }\n    return rootNode;\n  };\n\n  PriorityQueue.prototype.moveDown_ = function(index) {\n    var count, key, leftChildIndex, node, nodes, rightChildIndex, smallerChildIndex;\n    nodes = this.nodes_;\n    key = this.key;\n    count = nodes.length;\n    node = nodes[index];\n    while (index < (count >> 1)) {\n      leftChildIndex = index * 2 + 1;\n      rightChildIndex = leftChildIndex + 1;\n      smallerChildIndex = rightChildIndex < count && nodes[rightChildIndex][key] < nodes[leftChildIndex][key] ? rightChildIndex : leftChildIndex;\n      if (nodes[smallerChildIndex][key] > node[key]) {\n        break;\n      }\n      nodes[index] = nodes[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n    nodes[index] = node;\n  };\n\n  PriorityQueue.prototype.moveUp_ = function(index) {\n    var key, node, nodes, parentIndex;\n    nodes = this.nodes_;\n    key = this.key;\n    node = nodes[index];\n    while (index > 0) {\n      parentIndex = (index - 1) >> 1;\n      if (nodes[parentIndex][key] > node[key]) {\n        nodes[index] = nodes[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    nodes[index] = node;\n  };\n\n  return PriorityQueue;\n\n})();\n\nmodule.exports = PriorityQueue;\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports) {\n\nvar Set;\n\nSet = (function() {\n  function Set() {\n    this.map = {};\n    this.len = 0;\n  }\n\n  Set.prototype.valueOf = function() {\n    return this.map;\n  };\n\n  Set.prototype.length = function() {\n    return this.len;\n  };\n\n  Set.prototype.add = function(obj) {\n    if (!this.map.hasOwnProperty(obj.id)) {\n      this.map[obj.id] = obj;\n      this.len++;\n    }\n    return this;\n  };\n\n  Set.prototype.remove = function(obj) {\n    if (this.map.hasOwnProperty(obj.id)) {\n      delete this.map[obj.id];\n      this.len--;\n    }\n    return this;\n  };\n\n  return Set;\n\n})();\n\nmodule.exports = Set;\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar bind, bindSingle, dvl, _ref;\n\ndvl = __webpack_require__(0);\n\ndvl.d3 = __webpack_require__(3);\n\ndvl.async = __webpack_require__(4);\n\n_ref = __webpack_require__(1), bind = _ref.bind, bindSingle = _ref.bindSingle;\n\ndvl.bind = bind;\n\ndvl.bindSingle = bindSingle;\n\ndvl.html = __webpack_require__(5);\n\ndvl.svg = __webpack_require__(8);\n\ndvl.snap = __webpack_require__(7);\n\ndvl.misc = __webpack_require__(6);\n\ndvl.util = __webpack_require__(2);\n\nmodule.exports = dvl;\n\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// dvl.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 12);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 5f34be534c16efafd50a","# Vadim Ogievetsky\n\n# DVL is a framework for building highly interactive user interfaces and data visualizations dynamically with JavaScript.\n# DVL is based the concept that the data in a program should be the programmer’s main focus.\n\nlift = require '../lib/lift'\n\nPriorityQueue = require './dataStructure/priorityQueue'\nSet = require './dataStructure/set'\nutilModule = require './util'\n\nnextObjId = 1\n\ndvl = (value) -> new DVLVar(value)\ndvl.version = '1.5.0'\ndvl._variables = variables = []\ndvl._workers = workers = []\n\n# Available attributes / functions\n#\n# dvl._variables\n# dvl._workers\n# dvl.acc\n# dvl.apply\n# dvl.applyAlways\n# dvl.block\n# dvl.blockFn\n# dvl.chain\n# dvl.clearAll\n# dvl.const\n# dvl.debug\n# dvl.def\n# dvl.group\n# dvl.ident\n# dvl.identity\n# dvl.knows\n# dvl.namespace\n# dvl.notify\n# dvl.null\n# dvl.op\n# dvl.op[k]\n# dvl.register\n# dvl.sortGraph\n# dvl.valueOf\n# dvl.version\n# dvl.wrap\n# dvl.wrapConstIfNeeded\n# dvl.wrapVar\n# dvl.wrapVarIfNeeded\n# dvl.zero\n\ncurBlock = null\ndefault_compare = (a, b) -> a is b\n\nclass DVLConst\n  constructor: (val) ->\n    @v = val ? null\n    @changed = false\n    return this\n\n  toString: ->\n    tag = if @n then @n + ':' else ''\n    return \"[#{@tag}#{@v}]\"\n\n  value: (val) ->\n    return if arguments.length then this else @v\n\n  set: -> this\n  lazyValue: -> this\n  update: -> this\n  get: -> @v\n  getPrev: -> @v\n  hasChanged: -> @changed\n  resetChanged: -> null\n  notify: -> null\n  discard: -> null\n  name: ->\n    if arguments.length is 0\n      return @n ? '<anon_const>'\n    else\n      @n = arguments[0]\n      return this\n\n  compare: -> if arguments.length then this else default_compare\n  verify: -> if arguments.length then this else null\n  apply: (fn) -> dvl.apply(this, fn)\n  applyValid: (fn) -> dvl.applyValid(this, fn)\n  applyAlways: (fn) -> dvl.applyAlways(this, fn)\n  pluck: (prop) -> dvl.apply(this, (d) -> d[prop])\n  pluckEx: (prop) -> dvl.apply(this, (d) -> d[prop]())\n  project: (fns) -> dvl.const(if @v? and fns?.down then fns.down.call(null, @v) else null)\n\nclass DVLVar\n  constructor: (val) ->\n    @v = val ? null\n    @id = nextObjId++\n    @prev = null\n    @changed = false\n    @vlen = -1\n    @lazy = null\n    @listeners = []\n    @changers = []\n    @compareFn = default_compare\n    variables.push(this)\n    curBlock.addMemeber(this) if curBlock\n    return this\n\n  resolveLazy: ->\n    if @lazy\n      @prev = @v\n      @v = @lazy()\n      @lazy = null\n    return\n\n  toString: ->\n    tag = if @n then @n + ':' else ''\n    return \"[#{@tag}#{@val}]\"\n\n  hasChanged: -> if @proj then @proj.parent.hasChanged() else @changed\n\n  resetChanged: ->\n    @changed = false\n    return this\n\n  value: (val) ->\n    if arguments.length\n      val = val ? null\n      return this if val isnt null and @verifyFn and not @verifyFn.call(this, val)\n      return this if @compareFn and @compareFn.call(this, val, @value())\n      this.set(val)\n      dvl.notify(this)\n      return this\n    else\n      if @proj\n        { parent, fnDown } = @proj\n        pv = parent.value()\n        @v = if pv? then fnDown.call(@v, pv) else null\n      else\n        @resolveLazy()\n      return @v\n\n  set: (val) ->\n    val = val ? null\n    if @proj\n      { parent, fnUp } = @proj\n      parent.value(fnUp.call(parent.value(), val))\n      return this\n    @prev = @v unless @changed\n    @v = val\n    @changed = true\n    @lazy = null\n    return this\n\n  lazyValue: (fn) ->\n    @lazy = fn\n    @changed = true\n    dvl.notify(this)\n    return this\n\n  update: (val) ->\n    if not utilModule.isEqual(val, @v)\n      this.set(val)\n      dvl.notify(this)\n    return this\n\n  get: -> @value()\n\n  getPrev: ->\n    @resolveLazy()\n    if @prev and @changed then @prev else @v\n\n  notify: ->\n    dvl.notify(this)\n\n  discard: ->\n    if @listeners.length > 0\n      throw \"Cannot remove variable #{@id} because it has listeners.\"\n    if @changers.length > 0\n      throw \"Cannot remove variable #{@id} because it has changers.\"\n    variables.splice(variables.indexOf(this), 1)\n    return null\n\n  name: ->\n    if arguments.length is 0\n      return @n ? '<anon>'\n    else\n      @n = arguments[0]\n      return this\n\n  compare: ->\n    if arguments.length\n      @compareFn = arguments[0]\n      return this\n    else\n      return @compareFn\n\n  verify: ->\n    if arguments.length\n      @verifyFn = arguments[0]\n      return this\n    else\n      return @verifyFn\n\n  apply: (fn) -> dvl.apply(this, fn)\n  applyValid: (fn) -> dvl.applyValid(this, fn)\n  applyAlways: (fn) -> dvl.applyAlways(this, fn)\n  pluck: (prop) -> dvl.apply(this, (d) -> d[prop])\n  pluckEx: (prop) -> dvl.apply(this, (d) -> d[prop]())\n  project: (fns) ->\n    fns = dvl.wrap(fns)\n    v = dvl()\n    me = this\n    dvl.register {\n      listen: fns\n      change: me\n      fn: ->\n        _fns = fns.value()\n        if not _fns\n          _fns = {\n            down: -> null\n            up: -> return\n          }\n        v.proj = {\n          parent: me\n          fnDown: _fns.down\n          fnUp:   _fns.up\n        }\n        me.notify()\n        return\n    }\n    return v\n\n\ngetBase = (v) ->\n  while v.proj\n    v = v.proj.parent\n  return v\n\n\ndvl.def   = (value) -> new DVLVar(value)\ndvl.const = (value) -> new DVLConst(value)\n\n\n# Returns weather the input is a DVL variable (or constant or not)\n#\n# @param v - the variable to examine\n# @return {Boolean} true if v is a DVL variable or constant\n\ndvl.knows = (v) -> v instanceof DVLVar or v instanceof DVLConst\n\n\nclass DVLWorker\n  constructor: (@name, @ctx, @fn, @listen, @change) ->\n    @id = nextObjId++\n    @updates = new Set()\n    @level = workers.length # place at the end\n    workers.push(this)\n\n    # Append listen and change to variables and dependency graph\n    hasPrev = false\n    for v in @listen\n      v.listeners.push(this)\n      for prevWorker in v.changers\n        prevWorker.updates.add(this)\n        hasPrev = true\n\n    for v in @change\n      v.changers.push(this)\n      for nextWorker in v.listeners\n        @updates.add(nextWorker)\n\n    # the optimization is that if we are adding a sink worker then it's level is just the last level\n    if @updates.length()\n      min = Infinity\n      for nwid, nextWorker of @updates.valueOf()\n        lvl = nextWorker.level\n        min = lvl if lvl < min\n      sortGraph(min)\n\n    curBlock.addMemeber(this) if curBlock\n\n  addChange: ->\n    uv = uniqById(arguments)\n\n    if uv.length\n      updatesChanged = false\n      for v in uv\n        @change.push(v)\n        v.changers.push(this)\n        for nextWorker in v.listeners\n          @updates.add(nextWorker)\n          updatesChanged = true\n\n      sortGraph() if updatesChanged\n\n    return this\n\n  addListen: ->\n    uv = uniqById(arguments)\n\n    if uv.length\n      updatesChanged = false\n      for v in uv\n        @listen.push(v)\n        v.listeners.push(this)\n        for prevWorker in v.changers\n          prevWorker.updates.add(this)\n          updatesChanged = true\n          hasPrev = false\n\n      sortGraph() if updatesChanged\n\n    uv = uniqById(arguments, true)\n    start_notify_collect(this)\n    changedSave = []\n    for v in uv\n      changedSave.push(v.changed)\n      v.changed = true\n    @fn.apply(@ctx)\n    for v,i in uv\n      v.changed = changedSave[i]\n    end_notify_collect()\n    return this\n\n  discard: ->\n    # Find the register object\n    workers.splice(workers.indexOf(this), 1)\n\n    for v in @listen\n      for prevWorker in v.changers\n        prevWorker.updates.remove(this)\n\n    for v in @change\n      v.changers.splice(v.changers.indexOf(this), 1)\n\n    for v in @listen\n      v.listeners.splice(v.listeners.indexOf(this), 1)\n\n    sortGraph()\n    @change = @listen = @updates = null # cause an error if we hit these\n    return\n\ndvl.register = ({ctx, fn, listen, change, name, noRun}) ->\n  throw new Error('cannot call register from within a notify') if curNotifyListener\n  throw new TypeError('fn must be a function') if typeof(fn) != 'function'\n\n  listen = [listen] unless utilModule.typeOf(listen) is 'array'\n  change = [change] unless utilModule.typeOf(change) is 'array'\n\n  listenConst = []\n  if listen\n    for v in listen\n      listenConst.push v if v instanceof DVLConst\n\n  listen = uniqById(listen).map(getBase)\n  change = uniqById(change).map(getBase)\n\n  # Make function/context holder object\n  worker = new DVLWorker(name or 'fn', ctx, fn, listen, change)\n\n  if not noRun\n    # Save changes and run the function with everything as changed.\n    changedSave = []\n    for l,i in listen\n      changedSave[i] = l.changed\n      l.changed = true\n    for l in listenConst\n      l.changed = true\n\n    start_notify_collect(worker)\n    fn.call(ctx)\n    end_notify_collect()\n\n    for c,i in changedSave\n      listen[i].changed = c\n    for l in listenConst\n      l.changed = false\n\n  return worker\n\n\n\n\nclass DVLBlock\n  constructor: (@name, @parent) ->\n    @owns = {}\n    @parent?.add(this)\n    return\n\n  addMemeber: (thing) ->\n    @owns[thing.id] = thing\n    return this\n\n  removeMemeber: (thing) ->\n    delete @owns[thing.id]\n    return this\n\n  discard: ->\n    @parent?.removeMemeber(this)\n    d.discard() for d in @owns\n    return\n\n\ndvl.blockFn = ->\n  switch arguments.length\n    when 1 then [fn] = arguments\n    when 2 then [name, fn] = arguments\n    else throw \"bad number of arguments\"\n\n  return (args...) ->\n    block = new DVLBlock(name, curBlock)\n    ret = fn.apply(this, args)\n    curBlock = block.parent\n    return ret\n\ndvl.block = ->\n  switch arguments.length\n    when 1 then [fn] = arguments\n    when 2 then [name, fn] = arguments\n    else throw \"bad number of arguments\"\n\n  block = new DVLBlock(name, curBlock)\n  fn.call(this)\n  curBlock = block.parent\n  return block\n\n\ndvl.group = (fn) -> (fnArgs...) ->\n  if dvl.notify is init_notify\n    captured_notifies = []\n    dvl.notify = (args...) ->\n      Array::push.apply(captured_notifies, args)\n      return\n    ret = fn.apply(this, fnArgs)\n    dvl.notify = init_notify\n    init_notify.apply(dvl, captured_notifies)\n  else\n    # this is already runing in a group or a register\n    ret = fn.apply(this, fnArgs)\n  return ret\n\n\ndvl.wrapConstIfNeeded =\ndvl.wrap = (v, name) ->\n  v = null if v is undefined\n  if dvl.knows(v) then v else dvl.const(v).name(name)\n\ndvl.wrapVarIfNeeded =\ndvl.wrapVar = (v, name) ->\n  v = null if v is undefined\n  if dvl.knows(v) then v else dvl(v).name(name)\n\n\n# Returns the value of a variable if the supplied variable is DVL then it would get the value() of it\n#\n# @param v the value of the variable to get\n# @return the value\n\ndvl.valueOf = (v) ->\n  return if dvl.knows(v) then v.value() else (v ? null)\n\nnsId = 0\ndvl.namespace = (str = 'ns') ->\n  nsId++\n  return str + nsId\n\n# filter out undefineds and nulls and constants also make unique\nuniqById = (vs, allowConst) ->\n  res = []\n  if vs\n    seen = {}\n    for v in vs\n      if v? and (allowConst or (v.listeners and v.changers)) and not seen[v.id]\n        seen[v.id] = true\n        res.push v\n  return res\n\n# Sorts the graph. Will sort nodes at levels [0, workers.length)\ndvl.sortGraph = sortGraph = (from = 0) ->\n  # L <- Empty list that will contain the sorted elements\n  # S <- Set of all nodes with no incoming edges\n  # while S is non-empty do\n  #   remove a node n from S\n  #   insert n into L\n  #   for each node m with an edge e from n to m do\n  #     remove edge e from the graph\n  #     if m has no other incoming edges then\n  #       insert m into S\n  # if graph has edges then\n  #   return error (graph has at least one cycle)\n  # else\n  #   return L (a topologically sorted order)\n\n  idPriorityQueue = new PriorityQueue('id')\n\n  # This can be precomputed\n  getInboundCount = (worker, from) ->\n    seen = {}\n    count = 0\n    for v in worker.listen\n      for prevWorker in v.changers\n        if from <= prevWorker.level and not seen[prevWorker.id]\n          seen[prevWorker.id] = true\n          ++count\n    return count\n\n  inboundCount = {}\n\n  _sources = []\n\n  # S <- Set of all nodes with no incoming edges\n  # TODO: This can be optimized out to be it's own array\n  i = from\n  workersLength = workers.length\n  while i < workersLength\n    worker = workers[i++]\n    isSource = true\n\n    j = 0\n    workerListen = worker.listen\n    workerListenLength = workerListen.length\n    while j < workerListenLength and isSource\n      v = workerListen[j++]\n      for prevWorker in v.changers\n        if from <= prevWorker.level\n          isSource = false\n          break\n\n    if isSource\n      idPriorityQueue.push worker\n\n  level = from\n  while idPriorityQueue.length()\n    worker = idPriorityQueue.shift()\n    workers[worker.level = level++] = worker\n\n    for nwid, nextWorker of worker.updates.valueOf()\n      ic = inboundCount[nwid] or getInboundCount(nextWorker, from)\n      ic--\n      if ic is 0\n        idPriorityQueue.push nextWorker\n      else\n        inboundCount[nwid] = ic\n\n  if level isnt workers.length\n    throw new Error('there is a cycle')\n\n  return\n\ndvl.clearAll = ->\n  # disolve the graph to make the garbage collection job as easy as possible\n  for worker in workers\n    worker.listen = worker.change = worker.updates = null\n\n  for v in variables\n    v.listeners = v.changers = null\n\n  # reset everything\n  nextObjId = 1\n  variables = []\n  workers = []\n  return\n\n\nlevelPriorityQueue = new PriorityQueue('level')\n\ncurNotifyListener = null\ncurCollectListener = null\ntoNotify = null\n\n\nstart_notify_collect = (listener) ->\n  toNotify = []\n  curCollectListener = listener\n  dvl.notify = collect_notify\n  return\n\n\nend_notify_collect = ->\n  curCollectListener = null\n  dvl.notify = init_notify # ToDo: possible nested notify?\n\n  dvl.notify.apply(null, toNotify)\n  toNotify = null\n  return\n\n\ncollect_notify = ->\n  throw new Error('bad stuff happened during a collect block') unless curCollectListener\n\n  for v in arguments\n    continue unless v instanceof DVLVar\n    v = getBase(v)\n    if v not in curCollectListener.change\n      throw new Error(\"changed unregistered object #{v.id} (collect)\")\n    toNotify.push v\n\n  return\n\ndvl.notify = init_notify = ->\n  lastNotifyRun = []\n  visitedListener = []\n  changedInNotify = []\n  curNotifyListener = null\n\n  notifyChainReset = ->\n    curNotifyListener = null\n    dvl.notify = init_notify\n    v.resetChanged() for v in changedInNotify\n    l.visited = false for l in visitedListener # reset visited\n    return\n\n  for v in arguments\n    continue unless v instanceof DVLVar\n    v = getBase(v)\n    changedInNotify.push v\n    lastNotifyRun.push v.id\n    levelPriorityQueue.push l for l in v.listeners\n\n  dvl.notify = -> # within_notify\n    throw new Error('bad stuff happened within a notify block') unless curNotifyListener\n\n    for v in arguments\n      continue unless v instanceof DVLVar\n      v = getBase(v)\n      if v not in curNotifyListener.change\n        prevStr = changedInNotify.map((v) -> v.id).join(';')\n        errorMessage = \"changed unregistered object #{v.id} within worker #{curNotifyListener.id} [prev:#{prevStr}]\"\n        notifyChainReset()\n        throw new Error(errorMessage)\n      changedInNotify.push v\n      lastNotifyRun.push v.id\n      for l in v.listeners\n        if not l.visited\n          levelPriorityQueue.push l\n\n    return\n\n  # Handle events in a BFS way\n  while levelPriorityQueue.length() > 0\n    curNotifyListener = levelPriorityQueue.shift()\n    continue if curNotifyListener.visited\n    curNotifyListener.visited = true\n    visitedListener.push(curNotifyListener)\n    lastNotifyRun.push(curNotifyListener.id)\n    curNotifyListener.fn.apply(curNotifyListener.ctx)\n\n  notifyChainReset()\n  return\n\ndvl.zero = dvl.const(0).name('zero')\n\ndvl.null = dvl.const(null).name('null')\n\ndvl.ident = (x) -> x\ndvl.identity = dvl.const(dvl.ident).name('identity')\n\n\ndvl.acc = (column) ->\n  column = dvl.wrap(column)\n  acc = dvl().name(\"acc\")\n\n  makeAcc = ->\n    col = column.value();\n    if col?\n      col = String(col.valueOf())\n      acc.value((d) -> d[col])\n    else\n      acc.value(null)\n\n  dvl.register({fn:makeAcc, listen:[column], change:[acc], name:'make_acc'})\n  return acc\n\n\n# Workers # -----------------------------------------\n\n######################################################\n##\n##  A DVL object debugger\n##\n##  Displays the object value with a message whenever the object changes.\n##\ndvl.debug = ->\n  print = ->\n    return unless console?.log\n    console.log.apply(console, arguments)\n    return arguments[0]\n\n  if arguments.length is 1\n    obj = dvl.wrap(arguments[0])\n    note = obj.name() + ':'\n  else\n    obj = dvl.wrap(arguments[1])\n    note = arguments[0]\n\n  dvl.register {\n    listen: [obj]\n    fn: -> print note, obj.value()\n  }\n  return obj\n\n\n######################################################\n##\n##  Sets up a pipline stage that automaticaly applies the given function.\n##\ndvl.apply = dvl.applyValid = ->\n  switch arguments.length\n    when 1\n      {args, fn, invalid, allowNull, update} = arguments[0]\n      args = [] if args is undefined and not arguments[0].hasOwnProperty('args')\n    when 2\n      [args, fn] = arguments\n    when 3\n      [args, {invalid, allowNull, update}, fn] = arguments\n    else\n      throw \"incorect number of arguments\"\n\n  fn = dvl.wrap(fn or dvl.identity)\n\n  args = [args] unless Array.isArray(args)\n  args = args.map(dvl.wrap)\n\n  invalid = dvl.wrap(invalid ? null)\n\n  out = dvl(invalid.value()).name('apply_valid_out')\n\n  dvl.register {\n    name: 'apply_fn'\n    listen: args.concat([fn, invalid])\n    change: out\n    fn: ->\n      f = fn.value()\n      return unless f?\n      send = []\n      nulls = false\n      for a in args\n        v = a.value()\n        nulls = true unless v?\n        send.push v\n\n      if not nulls or allowNull\n        r = f.apply(null, send)\n        return if r is undefined\n      else\n        r = invalid.value()\n\n      if update\n        out.update(r)\n      else\n        out.set(r).notify()\n\n      return\n  }\n  return out\n\n\ndvl.applyAlways = ->\n  switch arguments.length\n    when 1\n      {args, fn, update} = arguments[0]\n      args = [] if args is undefined and not arguments[0].hasOwnProperty('args')\n    when 2\n      [args, fn] = arguments\n    when 3\n      [args, {update}, fn] = arguments\n    else\n      throw \"incorect number of arguments\"\n\n  fn = dvl.wrap(fn or dvl.identity)\n\n  args = [args] unless Array.isArray(args)\n  args = args.map(dvl.wrap)\n\n  out = dvl().name('apply_valid_out')\n\n  dvl.register {\n    name: 'apply_fn'\n    listen: args.concat([fn])\n    change: out\n    fn: ->\n      f = fn.value()\n      return unless f?\n      send = []\n      for a in args\n        send.push a.value()\n\n      r = f.apply(null, send)\n      return if r is undefined\n\n      if update\n        out.update(r)\n      else\n        out.set(r).notify()\n\n      return\n  }\n  return out\n\n\n\n# -------------------------------------------------------\n\ndvl.chain = (f, h) ->\n  f = dvl.wrap(f)\n  h = dvl.wrap(h)\n\n  out = dvl().name('chain')\n\n  dvl.register {\n    listen: [f, h]\n    change: [out]\n    fn: ->\n      _f = f.value()\n      _h = h.value()\n      if _f and _h\n        out.value((x) -> _h(_f(x)))\n      else\n        out.value(null)\n      return\n  }\n  return out\n\n\ndvl.op = (fn) ->\n  liftedFn = lift(fn)\n  return (args...) ->\n    args = args.map(dvl.wrap)\n    out = dvl()\n\n    dvl.register {\n      listen: args\n      change: [out]\n      fn: ->\n        out.set(liftedFn.apply(null, args.map((v) -> v.value())))\n        dvl.notify(out)\n        return\n    }\n\n    return out\n\nop_to_lift = {\n  'or': ->\n    ret = false\n    ret or= arg for arg in arguments\n    return ret\n\n  'and': ->\n    ret = true\n    ret and= arg for arg in arguments\n    return ret\n\n  'add': ->\n    sum = 0\n    for arg in arguments\n      if arg?\n        sum += arg\n      else\n        return null\n    return sum\n\n  'sub': ->\n    sum = 0\n    mult = 1\n    for arg in arguments\n      if arg?\n        sum += arg * mult\n        mult = -1\n      else\n        return null\n    return sum\n\n  'list': (args...) ->\n    for arg in args\n      return null unless arg?\n    return args\n\n  'concat': (args...) ->\n    for arg in args\n      return null unless arg?\n    return args.join('')\n\n  'iff': (cond, truthy, falsy) ->\n    return if cond then truthy else falsy\n\n  'iffEq': (lhs, rhs, truthy, falsy) ->\n    return if lhs is rhs then truthy else falsy\n\n  'iffLt': (lhs, rhs, truthy, falsy) ->\n    return if lhs < rhs then truthy else falsy\n\n  'makeTranslate': (x, y) ->\n    return if x? and y? then \"translate(#{x},#{y})\" else null\n}\n\ndvl.op[k] = dvl.op(fn) for k, fn of op_to_lift\n\n\nmodule.exports = dvl\n\n\n\n// WEBPACK FOOTER //\n// ./src/core.coffee","dvl = require './core'\n\n# dvl.bind # --------------------------------------------------\n\nid_class_spliter = /(?=[#.:])/\ndef_data_fn = dvl.const((d) -> [d])\nclass_concat = dvl.op((s, d) -> s + ' ' + (d or ''))\n\nbind = ({parent, self, data, join, attr, style, property, text, html, on:argsOn, transition, transitionExit}) ->\n  throw \"'parent' not defined\" unless parent\n  throw \"'self' not defined\" unless typeof self is 'string'\n  parts = self.split(id_class_spliter)\n  nodeType = parts.shift()\n  staticId = null\n  staticClass = []\n  for part in parts\n    switch part[0]\n      when '#'\n        staticId = part.substring(1)\n      when '.'\n        staticClass.push part.substring(1)\n      else\n        throw \"not currently supported in 'self' (#{part})\"\n\n  staticClass = staticClass.join(' ')\n\n  parent = dvl.wrap(parent)\n  data = dvl.wrap(data or def_data_fn)\n  join = dvl.wrap(join)\n  text = if text then dvl.wrap(text) else null\n  html = if html then dvl.wrap(html) else null\n  transition = dvl.wrap(transition)\n  transitionExit = dvl.wrap(transitionExit)\n\n  listen = [parent, data, join, text, html, transition, transitionExit]\n\n  attrList = {}\n  for k, v of attr\n    v = dvl.wrap(v)\n    if k is 'class' and staticClass\n      v = class_concat(staticClass, v)\n\n    listen.push(v)\n    attrList[k] = v\n\n  if staticClass and not attrList['class']\n    attrList['class'] = dvl.const(staticClass)\n\n  styleList = {}\n  for k, v of style\n    v = dvl.wrap(v)\n    listen.push(v)\n    styleList[k] = v\n\n  propertyList = {}\n  for k, v of property\n    v = dvl.wrap(v)\n    listen.push(v)\n    propertyList[k] = v\n\n  onList = {}\n  for k, v of argsOn\n    v = dvl.wrap(v)\n    listen.push(v)\n    onList[k] = v\n\n  out = dvl().name('selection')\n\n  dvl.register {\n    listen\n    change: [out]\n    fn: ->\n      _parent = parent.value()\n      return unless _parent\n\n      force = parent.hasChanged() or data.hasChanged() or join.hasChanged()\n      _data = data.value()\n      _join = join.value()\n\n      if _data\n        _data = _data.valueOf()\n        _transition = transition.value()\n        _transitionExit = transitionExit.value()\n\n        # prep\n        enter     = []\n        preTrans  = []\n        postTrans = []\n\n        add1 = (fn, v) ->\n          if v.hasChanged() or force\n            preTrans.push  { fn, a1: v.getPrev() }\n            postTrans.push { fn, a1: v.value() }\n          else\n            enter.push  { fn, a1: v.value() }\n          return\n\n        add2 = (fn, k, v) ->\n          if v.hasChanged() or force\n            enter.push     { fn, a1: k, a2: v.getPrev() }\n            preTrans.push  { fn, a1: k, a2: v.getPrev() }\n            postTrans.push { fn, a1: k, a2: v.value() }\n          else\n            enter.push     { fn, a1: k, a2: v.value() }\n          return\n\n        addO = (fn, k, v) ->\n          if v.hasChanged() or force\n            preTrans.push { fn, a1: k, a2: v.value() }\n          else\n            enter.push  { fn, a1: k, a2: v.value() }\n          return\n\n        add1('text', text)  if text\n        add1('html', html)  if html\n        add2('attr', k, v)  for k, v of attrList\n        add2('style', k, v) for k, v of styleList\n        add2('property', k, v) for k, v of propertyList\n        addO('on', k, v)    for k, v of onList\n\n        # d3 stuff\n        s = _parent.selectAll(self).data(_data, _join)\n        e = s.enter().append(nodeType)\n\n        e[a.fn](a.a1, a.a2) for a in enter\n\n        s[a.fn](a.a1, a.a2) for a in preTrans\n\n        if _transition and _transition.duration?\n          t = s.transition()\n          t.duration(_transition.duration or 1000)\n          t.delay(_transition.delay) if _transition.delay\n          t.ease(_transition.ease)   if _transition.ease\n        else\n          t = s\n\n        t[a.fn](a.a1, a.a2) for a in postTrans\n\n        ex = s.exit().remove()\n        out.value(s) if not e.empty() or not ex.empty() or force\n      else\n        s = _parent.selectAll(self).remove()\n        out.value(s)\n\n      return\n  }\n\n  return out\n\n\nbindSingle = ({parent, self, data, datum, attr, style, property, text, html, on:argsOn, transition}) ->\n  throw new Error(\"bindSingle does not accept a parameter 'data'. Did you mean 'datum'?\") if data\n\n  if typeof self is 'string'\n    throw \"'parent' not defined for string self\" unless parent\n    parts = self.split(id_class_spliter)\n    nodeType = parts.shift()\n    staticId = null\n    staticClass = []\n    for part in parts\n      switch part[0]\n        when '#'\n          staticId = part.substring(1)\n        when '.'\n          staticClass.push part.substring(1)\n        else\n          throw \"not currently supported in 'self' (#{part})\"\n\n    staticClass = staticClass.join(' ')\n\n    self = dvl.valueOf(parent).append(nodeType)\n    self.attr('id', staticId) is staticId\n    self.attr('class', staticClass) is staticClass\n  else\n    staticClass = self.attr('class')\n\n  self = dvl.wrapVar(self)\n\n  datum = dvl.wrap(datum)\n  text = if text then dvl.wrap(text) else null\n  html = if html then dvl.wrap(html) else null\n  transition = dvl.wrap(transition)\n\n  listen = [datum, text, html, transition]\n\n  attrList = {}\n  for k, v of attr\n    v = dvl.wrap(v)\n    if k is 'class' and staticClass\n      v = class_concat(staticClass, v)\n\n    listen.push(v)\n    attrList[k] = v\n\n  styleList = {}\n  for k, v of style\n    v = dvl.wrap(v)\n    listen.push(v)\n    styleList[k] = v\n\n  propertyList = {}\n  for k, v of property\n    v = dvl.wrap(v)\n    listen.push(v)\n    propertyList[k] = v\n\n  onList = {}\n  for k, v of argsOn\n    v = dvl.wrap(v)\n    listen.push(v)\n    onList[k] = v\n\n  dvl.register {\n    listen\n    change: [self]\n    fn: ->\n      sel = self.value()\n      _datum = datum.value()\n      force = datum.hasChanged()\n      sel.datum(_datum) if force\n\n      for k, v of attrList\n        sel.attr(k, v.value()) if v.hasChanged() or force\n\n      for k, v of styleList\n        sel.style(k, v.value()) if v.hasChanged() or force\n\n      for k, v of propertyList\n        sel.property(k, v.value()) if v.hasChanged() or force\n\n      for k, v of onList\n        sel.on(k, v.value()) if v.hasChanged() or force\n\n      sel.text(text.value()) if text and (text.hasChanged() or force)\n      sel.html(html.value()) if html and (html.hasChanged() or force)\n\n      self.notify() if force\n      return\n  }\n\n  return self\n\n\nmodule.exports = {\n  bind\n  bindSingle\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/bind.coffee","utilModule = {\n  typeOf: do ->\n    toString = Object.prototype.toString\n    return (v) ->\n      type = toString.call(v)\n      return type.substring(8, type.length - 1).toLowerCase()\n\n  strObj: (obj) ->\n    type = utilModule.typeOf(obj)\n    if type in ['object', 'array']\n      str = []\n      keys = []\n      for k of obj\n        continue unless obj.hasOwnProperty(k)\n        keys.push k\n      keys.sort()\n      str.push k, utilModule.strObj(obj[k]) for k in keys\n      return str.join('|')\n\n    if type is 'function'\n      return '&'\n\n    return String(obj)\n\n  uniq: (array) ->\n    seen = {}\n    uniq = []\n    for a in array\n      uniq.push a unless seen[a]\n      seen[a] = 1\n\n    return uniq\n\n  isEqual: (a, b, cmp) ->\n    # Check object identity.\n    return true if a is b\n    # Different types?\n    atype = utilModule.typeOf(a)\n    btype = utilModule.typeOf(b)\n    return false if atype isnt btype\n    # One is falsy and the other truthy.\n    return false if (not a and b) or (a and not b)\n    # Check dates' integer values.\n    return a.getTime() is b.getTime() if atype is 'date'\n    # Both are NaN?\n    return false if a isnt a and b isnt b\n    # and Compare regular expressions.\n    return a.source is b.source and a.global is b.global and a.ignoreCase is b.ignoreCase and a.multiline is b.multiline if atype is 'regexp'\n    # If a is not an object by this point, we can't handle it.\n    return false unless atype is 'object' or atype is 'array'\n    # Check if already compared\n    if cmp\n      for c in cmp\n        return true if (c.a is a and c.b is b) or (c.a is b and c.b is a)\n    # Check for different array lengths before comparing contents.\n    return false if a.length? and a.length isnt b.length\n    # Nothing else worked, deep compare the contents.\n    aKeys = []\n    aKeys.push k for k of a\n    bKeys = []\n    bKeys.push k for k of b\n    # Different object sizes?\n    return false if aKeys.length isnt bKeys.length\n    # Recursive comparison of contents.\n    cmp = if cmp then cmp.slice() else []\n    cmp.push {a,b}\n    for k of a\n      return false unless b[k]? and utilModule.isEqual(a[k], b[k], cmp)\n\n    return true\n\n  clone: (obj) ->\n    t = utilModule.typeOf(obj)\n    switch t\n      when 'array'\n        return obj.slice()\n      when 'object'\n        ret = {}\n        ret[k] = v for k,v of obj\n        return ret\n      when 'date'\n        return new Date(obj.getTime())\n      else\n        return obj\n\n  escapeHTML: (str) ->\n    return String(str)\n      .replace(/&/g, '&amp;')\n      .replace(/>/g, '&gt;')\n      .replace(/</g, '&lt;')\n      .replace(/\"/g, '&quot;')\n}\n\n\nmodule.exports = utilModule\n\n\n\n// WEBPACK FOOTER //\n// ./src/util.coffee","!function() {\n  var d3 = {\n    version: \"3.5.8\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.zip = function() {\n    if (!(n = arguments.length)) return [];\n    for (var i = -1, m = d3.min(arguments, d3_zipLength), zips = new Array(m); ++i < m; ) {\n      for (var j = -1, n, zip = zips[i] = new Array(n); ++j < n; ) {\n        zip[j] = arguments[j][i];\n      }\n    }\n    return zips;\n  };\n  function d3_zipLength(d) {\n    return d.length;\n  }\n  d3.transpose = function(matrix) {\n    return d3.zip.apply(d3, matrix);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: \"http://www.w3.org/1999/xhtml\",\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace ? document.createElementNS(namespace, name) : document.createElement(name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n            keyValues[i] = keyValue;\n          }\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged && d3.event.target === target);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n      i = function(t) {\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n      };\n    } else {\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n      i = function(t) {\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      };\n    }\n    i.duration = S * 1e3;\n    return i;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, target = d3.event.target, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged && d3.event.target === target);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function() {\n    d3_timer.apply(this, arguments);\n  };\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n    return timer;\n  }\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now(), timer = d3_timer_queueHead;\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: (x - x0) / k\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.start({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    return d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(.1, n / scale.ticks().length), f = positive ? (e = 1e-12, Math.ceil) : (e = -1e-12, \n      Math.floor), e;\n      return function(d) {\n        return d / pow(f(log(d) + e)) <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc, rc0 = rc;\n        if (da < π) {\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, activeId, active;\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id], time, timer, duration, ease, tweens;\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n    function start(elapsed) {\n      var activeId = lock.active, active = lock[activeId];\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function(key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n      timer.c = tick;\n      d3_timer(function() {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n        return 1;\n      }, 0, time);\n    }\n    function tick(elapsed) {\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id]; else delete node[ns];\n        return 1;\n      }\n    }\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) define(this.d3 = d3); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3/d3.js\n// module id = 3\n// module chunks = 0","dvl = require './core'\nutilModule = require './util'\n\n##-------------------------------------------------------\n##\n##  Asynchronous request fetcher.\n##\n##  Runs asynchronous operations\n##  This function adds the given query to the global async getter,\n##  the getter then automatically groups requests that come from the same event cycle.\n##\n## ~query: the query to send to the asynchronous requester\n##\noutstanding = dvl(0).name('outstanding')\najaxManagers = []\nblockDummy = {}\n\nmakeManager = ->\n  nextQueryId = 0\n  initRequestBundle = []\n  queries = []\n\n  maybeDone = dvl.group (requestBundle) ->\n    for request in requestBundle\n      return if request.status isnt 'ready'\n\n    for request in requestBundle\n      request.res.value(request.resVal ? null)\n      request.status = ''\n      request.requestBundle = null\n      delete request.resVal\n\n    return\n\n  getData = (request, query, err, resVal) ->\n    throw new Error(\"getData called outside of a request\") unless request.requestBundle\n    if err\n      request.resVal = null\n      request.onError(err) if request.onError\n    else\n      request.resVal = if query then resVal else null\n\n    request.status = 'ready'\n    delete request.curAjax\n    delete request.processResponce\n\n    maybeDone(request.requestBundle)\n    return\n\n  makeRequest = (request) ->\n    throw new Error(\"invalid request\") unless request in request.requestBundle\n    requestCount = request.requestCount\n    _query = request.query.value()\n\n    oldAjax = request.curAjax\n    oldProcessResponce = request.processResponce\n\n    if _query?\n      if request.invalidOnLoad.value()\n        request.res.value(null)\n\n      responceProcessed = false\n      processResponce = (err, data) ->\n        responceProcessed = true if this is blockDummy\n        return if responceProcessed\n        responceProcessed = true\n\n        requestCount.value(requestCount.value() - 1)\n\n        getData(request, _query, err, data)\n        return\n\n      requestCount.value(requestCount.value() + 1)\n      request.processResponce = processResponce\n      request.curAjax = request.requester(_query, processResponce)\n    else\n      getData(request, _query, null, null)\n\n    # Abort the old call after making the new\n    if oldProcessResponce\n      requestCount.value(requestCount.value() - 1)\n      oldProcessResponce.call(blockDummy)\n      oldAjax?.abort?()\n\n    return\n\n  inputChange = ->\n    makeRequestLater = []\n    newRequestBundle = []\n    for q in queries\n      continue unless q.query.hasChanged()\n\n      if q.status is 'virgin'\n        if q.query.value()\n          initRequestBundle.push(q)\n          q.status = 'requesting'\n          q.requestBundle = initRequestBundle\n          makeRequestLater.push(q)\n        else\n          q.status = ''\n      else\n        q.status = 'requesting'\n        if q.requestBundle\n          # Query changed mid request which may have already completed, sadly we need to scrap it.\n          delete q.resVal\n          makeRequestLater.push(q)\n        else\n          newRequestBundle.push(q)\n          q.requestBundle = newRequestBundle\n          makeRequestLater.push(q)\n\n    makeRequest(q) for q in makeRequestLater\n    return\n\n  worker = null\n  addHoock = (query, ret, requestCount) ->\n    if worker\n      worker.addChange(ret, requestCount)\n      worker.addListen(query) #! After add change\n    else\n      worker = dvl.register {\n        listen: [query]\n        change: [ret, requestCount]\n        fn: inputChange\n      }\n\n    return\n\n  return (query, invalidOnLoad, onError, requester, requestCount) ->\n    nextQueryId++\n    res = dvl()\n    q = {\n      id: nextQueryId\n      query\n      res\n      status: 'virgin'\n      requester\n      onError\n      invalidOnLoad\n      requestBundle: null\n      curAjax: null\n      requestCount\n    }\n    queries.push(q)\n    addHoock(query, res, requestCount)\n    return res\n\n\nasync = ({query, invalidOnLoad, onError, groupId, requester, requestCount}) ->\n  throw new Error('it does not make sense to not have a query') unless query\n  throw new Error('it does not make sense to not have a requester') unless requester\n  throw new Error('requester must be a function') unless typeof requester is 'function'\n  query = dvl.wrap(query)\n  invalidOnLoad = dvl.wrap(invalidOnLoad or false)\n  requestCount or= outstanding\n  requestCount = dvl.wrapVar(requestCount)\n\n  groupId = async.getGroupId() unless groupId?\n  ajaxManagers[groupId] or= makeManager()\n\n  return ajaxManagers[groupId](query, invalidOnLoad, onError, requester, requestCount)\n\nasync.outstanding = outstanding\n\nnextGroupId = 0\nasync.getGroupId = ->\n  id = nextGroupId\n  nextGroupId++\n  return id\n\nasync.requester = {\n  ajax: (query, complete) ->\n    data = if query.dataFn then query.dataFn(query.data) else query.data\n    ajax = jQuery.ajax {\n      url: query.url\n      data: data\n      type: query.method or 'GET'\n      dataType: query.dataType or 'json'\n      contentType: (query.contentType or 'application/json') if data?\n      processData: query.processData or false\n      success: (resVal) ->\n        resVal = query.fn(resVal, query) if query.fn\n        ajax = null\n        complete(null, resVal)\n        return\n      error: (xhr, textStatus) ->\n        ajax = null\n        complete(xhr.responseText or textStatus, null)\n        return\n    }\n\n    abort = ->\n      if ajax\n        ajax.abort()\n        ajax = null\n\n      return\n\n    return { abort }\n\n\n  cacheWrap: ({requester, max, timeout, keyFn} = {}) ->\n    throw new Error('it does not make sense to not have a requester') unless requester\n    throw new Error('requester must be a function') unless typeof requester is 'function'\n\n    max = dvl.wrap(max or 100)\n    timeout = dvl.wrap(timeout or 30*60*1000)\n    cache = {}\n    count = 0\n    keyFn or= ({url, data, method, dataType, contentType, processData}) ->\n      return [url, utilModule.strObj(data), method, dataType, contentType, processData].join('@@')\n\n    trim = ->\n      tout = timeout.value()\n      if tout > 0\n        cutoff = Date.now() - tout\n        newCache = {}\n        for q,d of cache\n          newCache[q] = d if cutoff < d.time\n        cache = newCache\n\n      m = max.value()\n      while m < count\n        oldestQuery = null\n        oldestTime = Infinity\n        for q,d of cache\n          if d.time < oldestTime\n            oldestTime = d.time\n            oldestQuery = q\n        delete cache[oldestQuery]\n        count--\n\n    dvl.register {\n      listen: [max, timeout]\n      fn: trim\n    }\n\n    return {\n      clear: ->\n        cache = {}\n        count = 0\n        return\n\n      requester: (query, complete) ->\n        key = keyFn(query)\n\n        c = cache[key]\n        added = false\n        if not c\n          # first time we see this query, create stub\n          cache[key] = c = {\n            time: Date.now()\n            waiting: [complete]\n          }\n          added = true\n          count++\n          trim()\n\n          c.ajax = requester(query, (err, resVal) ->\n            if err\n              return if err is \"abort\"\n              c.ajax = null\n              delete cache[key]\n              count--\n              cb(err, null) for cb in c.waiting\n              delete c.waiting\n              return\n\n            c.ajax = null\n            c.resVal = resVal\n            cb(null, resVal) for cb in c.waiting\n            delete c.waiting\n            return\n          )\n\n        if c.resVal\n          complete(null, c.resVal)\n\n          abort = ->\n            # There is nothing to do\n            return\n        else\n          c.waiting.push(complete) unless added\n\n          abort = ->\n            return unless c.waiting\n            c.waiting = c.waiting.filter((l) -> l isnt complete)\n            complete('abort', null)\n\n            if c.waiting.length is 0 and c.ajax\n              c.ajax.abort()\n              c.ajax = null\n              delete cache[key]\n              count--\n\n            return\n\n        return { abort }\n    }\n}\n\nmodule.exports = async\n\n\n\n// WEBPACK FOOTER //\n// ./src/async.coffee","d3 = require 'd3'\n\ndvl = require './core'\n{ bind, bindSingle } = require './bind'\n\n# HTML # --------------------------------------------------\n\nhtmlModule = {}\n\n# Capture the size of something in HTML\n#\nhtmlModule.resizer = ({selector, out, dimension}) ->\n  out = dvl.wrapVar(out)\n  dimension = dvl.wrap(dimension or 'width')\n\n  onResize = ->\n    _dimension = dimension.value()\n    if _dimension in ['width', 'height']\n      if selector\n        e = jQuery(selector)\n        val = e[_dimension]()\n      else\n        val = document.body[if _dimension is 'width' then 'clientWidth' else 'clientHeight']\n\n      out.value(val)\n    else\n      out.value(null)\n\n  $(window).resize(onResize)\n  dvl.register {\n    listen: dimension\n    change: out\n    fn: onResize\n  }\n  return out\n\n# Output to an HTML attribute\n# DEPRICATED\nhtmlModule.out = ({selector, data, fn, format, invalid, hideInvalid, attr, style, text}) ->\n  throw new Error('must have data') unless data\n  data = dvl.wrap(data)\n  format = format ? fn\n\n  throw new Error('must have selector') unless selector\n  selector = dvl.wrap(selector)\n\n  format = dvl.wrap(format or dvl.identity)\n  invalid = dvl.wrap(invalid or null)\n  hideInvalid = dvl.wrap(hideInvalid or false)\n\n  if attr\n    what = dvl.wrap(attr)\n    out = (selector, string) -> d3.select(selector).attr(what.value(), string)\n  else if style\n    what = dvl.wrap(style)\n    out = (selector, string) -> d3.select(selector).style(what.value(), string)\n  else if text\n    out = (selector, string) -> d3.select(selector).text(string)\n  else\n    out = (selector, string) -> d3.select(selector).html(string)\n\n  updateHtml = ->\n    s = selector.value()\n    a = format.value()\n    d = data.value()\n    if s?\n      if a? and d?\n        sel = out(s, a(d))\n        sel.style('display', null) if hideInvalid.value()\n      else\n        inv = invalid.value()\n        out(s, inv)\n        d3.select(s).style('display', 'none') if hideInvalid.value()\n    return\n\n  dvl.register {\n    listen: [data, selector, format]\n    fn: updateHtml\n  }\n  return\n\n\n##-------------------------------------------------------\n##\n##  Create HTML list\n##\nhtmlModule.list = ({parent, data, label, link, class:listClass, selection, selections, onSelect, onEnter, onLeave, icons,\n                  extras, classStr, highlight}) ->\n  throw new Error('must have parent') unless parent\n  throw new Error('must have data') unless data\n  selection  = dvl.wrapVar(selection, 'selection')\n  selections = dvl.wrapVar(selections or [], 'selections')\n  highlight = dvl.wrapVar(highlight, 'highlight')\n\n  data = dvl.wrap(data)\n  label = dvl.wrap(label or dvl.identity)\n  link = dvl.wrap(link)\n\n  icons or= []\n  for i in icons\n    i.position or= 'right'\n\n  if listClass?\n    listClass = dvl.wrap(listClass)\n  else\n    listClass = dvl.applyAlways(\n      [selection, selections, highlight]\n      (_selection, _selections, _highlight) -> (d) ->\n        classParts = []\n        if _selection\n          classParts.push(if d is _selection then 'is_selection' else 'isnt_selection')\n\n        if _selections\n          classParts.push(if d in _selections then 'is_selections' else 'isnt_selections')\n\n        if _highlight\n          classParts.push(if d is _highlight then 'is_highlight' else 'isnt_highlight')\n\n        return if classParts.length then classParts.join(' ') else null\n    )\n\n  ul = dvl.valueOf(parent).append('ul')\n    .attr('class', classStr)\n\n  onClick = dvl.group (val, i) ->\n    return if onSelect?(val, i) is false\n    linkVal = link.value()?(val)\n    selection.value(val)\n\n    _selections = (selections.value() or []).slice()\n    i = _selections.indexOf(val)\n    if i is -1\n      _selections.push(val)\n    else\n      _selections.splice(i,1)\n\n    selections.value(_selections)\n\n    window.location.href = linkVal if linkVal\n    return\n\n  myOnEnter = (val) ->\n    return if onEnter?(val) is false\n    highlight.value(val)\n    return\n\n  myOnLeave = (val) ->\n    return if onLeave?(val) is false\n    if (highlight.value() is val) then highlight.value(\"\")\n    return\n\n  dvl.register {\n    name: 'update_html_list'\n    listen: [data, label, link]\n    fn: ->\n      _data  = data.value()\n      _label = label.value()\n      _link  = link.value()\n      _class = listClass.value()\n\n      return unless _data\n      _data = _data.valueOf()\n\n      addIcons = (el, position) ->\n        icons.forEach (icon) ->\n          return unless icon.position is position\n\n          classStr = 'icon_cont ' + position\n          classStr += ' ' + icon.classStr if icon.classStr\n\n          el.append('div')\n            .attr('class', classStr)\n            .attr('title', icon.title)\n            .on('click', (val, i) ->\n              d3.event.stopPropagation() if icon.onSelect?(val, i) is false\n              return\n            ).on('mouseover', (val, i) ->\n              d3.event.stopPropagation() if icon.onEnter?(val, i) is false\n              return\n            ).on('mouseout', (val, i) ->\n              d3.event.stopPropagation() if icon.onLeave?(val, i) is false\n              return\n            ).append('div')\n              .attr('class', 'icon')\n\n          return\n        return\n\n      sel = ul.selectAll('li').data(_data)\n      a = sel.enter().append('li').append('a')\n\n      addIcons a, 'left'\n      a.append('span')\n      addIcons a, 'right'\n\n      cont = sel\n        .attr('class', _class)\n        .on('click', onClick)\n        .on('mouseover', myOnEnter)\n        .on('mouseout', myOnLeave)\n        .select('a')\n          .attr('href', _link)\n\n\n      cont.select('span').text(_label)\n\n      sel.exit().remove()\n      return\n  }\n\n  dvl.register {\n    name: 'update_class_list'\n    listen: [listClass]\n    fn: ->\n      _class = listClass.value()\n      ul.selectAll('li').attr('class', _class)\n      return\n  }\n\n  return {\n    selection\n    selections\n    node: ul.node()\n  }\n\nhtmlModule.combobox = ({parent, classStr, data, label, selectionLabel, link, class:listClass, id, selection, selections,\n                      onSelect, onEnter, onLeave, menuAnchor, title, icons, keepOnClick, disabled, highlight, focus}) ->\n  throw new Error('must have parent') unless parent\n  throw new Error('must have data') unless data\n  selection = dvl.wrapVar(selection, 'selection')\n  selections = dvl.wrapVar(selections, 'selections')\n  menuAnchor = dvl.wrap(menuAnchor or 'left')\n\n  data = dvl.wrap(data)\n  label = dvl.wrap(label or dvl.identity)\n  selectionLabel = dvl.wrap(selectionLabel or label)\n  link = dvl.wrap(link)\n  disabled = dvl.wrap(disabled ? false)\n  focus = dvl.wrapVar(focus)\n  filterCharacters = dvl.wrapVar([]).compare(false)\n  filteredData = dvl.def()\n\n  # Make sure that the selection is always within the data\n  dvl.register {\n    listen: data\n    #change: selection\n    fn: ->\n      _data = data.value()\n      _selection = selection.value()\n      if not _data or _selection not in _data\n        # Hack for when this makes a circular dependency\n        setTimeout((-> selection.value(null)), 0)\n      return\n  }\n\n  dvl.register {\n    listen: filterCharacters, label, data\n    change: filteredData\n    fn: ->\n      _data = data.value()\n      _filterCharacters = filterCharacters.value()\n      _label = label.value()\n      return unless _data and _filterCharacters\n      _filterPhrase = _filterCharacters.join('')\n      _filteredData = _data.filter((datum) ->\n        return String(_label(datum))?.toLowerCase().indexOf(_filterPhrase) > -1\n      )\n      filteredData.value(_filteredData)\n  }\n\n  title = dvl.wrap(title) if title\n  icons or= []\n\n  menuOpen = dvl(false)\n\n  dvl.register {\n    listen: menuOpen\n    change: filterCharacters\n    fn: ->\n      filterCharacters.value([])\n  }\n\n  divCont = bindSingle({\n    parent\n    self: 'div'\n    attr: {\n      class: dvl.applyAlways {\n        args: [classStr, menuOpen, disabled]\n        fn: (_classStr, _menuOpen, _disabled) -> [\n          _classStr or '',\n          if _menuOpen then 'open' else 'closed'\n          if _disabled then 'disabled' else ''\n        ].join(' ')\n      }\n    }\n    style: {\n      position: 'relative'\n    }\n  }).value()\n\n  valueOut = bindSingle({\n    parent: divCont\n    self: 'input.title-cont'\n    attr: {\n      disabled: dvl.op.iff(disabled, '', null)\n      tabIndex: 0\n      id: id\n    }\n    on: {\n      blur: ->\n        focus.value(false)\n        return\n    }\n  }).value()\n\n  updateScroll = ->\n    _data = data.value()\n    _selection = selection.value()\n    return unless _data\n    selectionIndex = _data.indexOf(_selection)\n    return if selectionIndex is -1\n    _menuCont = menuCont.node()\n    return if _menuCont.scrollHeight is 0\n    element = menuCont.selectAll('li')[0][selectionIndex]\n    pos = $(element).position()\n    return unless pos\n    _menuCont.scrollTop = 0\n    _menuCont.scrollTop = pos.top\n    return\n\n  valueOut\n    .on('keydown', (->\n      _data = data.value()\n      return unless _data\n      _label = label.value()\n      return unless _label\n\n      keyCode = d3.event.which or d3.event.keyCode\n      # Do not block tab keys\n      if keyCode is 9 # tab = 9\n        menuOpen.value(false)\n        return\n\n      if keyCode in [38, 40] # up arrow = 38 | down arrow = 40\n        d3.event.stopPropagation()\n        d3.event.preventDefault()\n        if not menuOpen.value()\n          menuOpen.value(true)\n\n        ##increment selection\n\n        _selection = selection.value()\n        selectionIndex = _data.indexOf(_selection)\n        if selectionIndex is -1\n          if _selection is null\n            if _data.length\n              selection.value(_data[0])\n          else\n            throw \"selection was not found in data\"\n        else\n          if keyCode is 38 then selectionIndex-- else selectionIndex++\n          selectionIndex += _data.length #handles the case with the up arrow on the first element\n          selectionIndex %= _data.length\n          selection.value(_data[selectionIndex])\n          updateScroll()\n\n      if keyCode in [13, 27] # enter = 13, esc = 27\n        d3.event.stopPropagation()\n        d3.event.preventDefault()\n        menuOpen.value(false)\n\n      if keyCode is 8\n        _filterCharacters = filterCharacters.value()\n        _filterCharacters.pop()\n        filterCharacters.value(_filterCharacters)\n      return\n    ), true) # Capture\n    .on('keypress', (->\n      _data = data.value()\n      return unless _data\n      _label = label.value()\n      return unless _label\n\n      keyCode = d3.event.which or d3.event.keyCode\n      if not (keyCode in [9, 38, 40, 13, 27])\n        _filterCharacters = filterCharacters.value()\n        _filterCharacters.push(String.fromCharCode(keyCode).toLowerCase())\n        filterCharacters.value(_filterCharacters)\n\n      return\n    ), true) # Capture\n\n  dvl.register {\n    listen: [focus]\n    fn: ->\n      _focus = focus.value()\n      return unless _focus?\n      _valueOut = valueOut.node()\n      return if _focus is (_valueOut is document.activeElement)\n      setTimeout((-> # We need this defer because it seems that the blur of another element is called synchronously\n        if _focus then _valueOut.focus() else _valueOut.blur()\n        return\n      ), 0)\n      return\n  }\n\n  myOnSelect = (text, i) ->\n    menuOpen.value(false) unless keepOnClick\n    return onSelect?(text, i)\n\n  icons.forEach (icon) ->\n    icon_onSelect = icon.onSelect\n    icon.onSelect = (val, i) ->\n      menuOpen.value(false) unless keepOnClick\n      return icon_onSelect?(val, i)\n    return\n\n  menuCont = divCont.append('div')\n    .attr('class', 'menu-cont')\n    .style('position', 'absolute')\n    .style('z-index', 1000)\n\n  dvl.register {\n    listen: [menuOpen, menuAnchor]\n    fn: ->\n      _menuOpen = menuOpen.value()\n      if _menuOpen\n        menuCont\n          .style('display', null)\n          .style('top', '100%')\n\n        _menuAnchor = menuAnchor.value()\n        if _menuAnchor is 'left'\n          menuCont\n            .style('left', 0)\n            .style('right', null)\n        else\n          menuCont\n            .style('left', null)\n            .style('right', 0)\n      else\n        menuCont.style('display', 'none')\n      return\n  }\n\n  htmlModule.list {\n    parent: menuCont\n    classStr: 'list'\n    data: filteredData\n    label\n    link\n    class: listClass\n    selection\n    selections\n    onSelect: myOnSelect\n    onEnter\n    onLeave\n    icons\n  }\n\n  namespace = dvl.namespace('dropdown')\n  d3.select(window)\n    .on(\"click.#{namespace}\", (->\n      target = d3.event.target\n      return if disabled.value()\n      return if $(menuCont.node()).find(target).length\n\n      if divCont.node() is target or $(divCont.node()).find(target).length\n        # only open the menu if the current state is closed or if the\n        # activeElement isn't the input text box for this combobox\n        togMenuOpen = not menuOpen.value()\n        if (togMenuOpen or valueOut.node().id isnt document.activeElement?.id)\n          menuOpen.value(not menuOpen.value())\n      else\n        menuOpen.value(false)\n\n      return\n    ), true) # Use capture\n    .on(\"blur.#{namespace}\", ->\n      menuOpen.value(false)\n      return\n    )\n\n  dvl.register {\n    name: 'selection_updater'\n    listen: [menuOpen, selection, selectionLabel, title]\n    fn: ->\n      if menuOpen.value()\n        valueOut.property('value', '')\n        return\n      if title\n        titleText = title.value()\n      else\n        sel = selection.value()\n        selLabel = selectionLabel.value()\n        titleText = if selLabel then selLabel(sel) else ''\n\n      valueOut.property('value', titleText ? '')\n\n      return\n  }\n\n  return {\n    node: divCont.node()\n    menuCont: menuCont.node()\n    open: menuOpen\n    focus\n    selection\n    selections\n  }\n\nhtmlModule.dropdown = ({parent, classStr, data, label, selectionLabel, link, class:listClass, id, selection, selections,\n                      onSelect, onEnter, onLeave, menuAnchor, title, icons, keepOnClick, disabled, highlight, focus}) ->\n  throw new Error('must have parent') unless parent\n  throw new Error('must have data') unless data\n  selection = dvl.wrapVar(selection, 'selection')\n  selections = dvl.wrapVar(selections, 'selections')\n  menuAnchor = dvl.wrap(menuAnchor or 'left')\n\n  data = dvl.wrap(data)\n  label = dvl.wrap(label or dvl.identity)\n  selectionLabel = dvl.wrap(selectionLabel or label)\n  link = dvl.wrap(link)\n  disabled = dvl.wrap(disabled ? false)\n  focus = dvl.wrapVar(focus)\n\n  # Make sure that the selection is always within the data\n  dvl.register {\n    listen: data\n    #change: selection\n    fn: ->\n      _data = data.value()\n      _selection = selection.value()\n      if not _data or _selection not in _data\n        # Hack for when this makes a circular dependency\n        setTimeout((-> selection.value(null)), 0)\n      return\n  }\n\n  title = dvl.wrap(title) if title\n  icons or= []\n\n  menuOpen = dvl(false)\n\n  divCont = bindSingle({\n    parent\n    self: 'div'\n    attr: {\n      class: dvl.applyAlways {\n        args: [classStr, menuOpen, disabled]\n        fn: (_classStr, _menuOpen, _disabled) -> [\n          _classStr or '',\n          if _menuOpen then 'open' else 'closed'\n          if _disabled then 'disabled' else ''\n        ].join(' ')\n      }\n    }\n    style: {\n      position: 'relative'\n    }\n  }).value()\n\n  valueOut = bindSingle({\n    parent: divCont\n    self: 'div.title-cont'\n    attr: {\n      disabled: dvl.op.iff(disabled, '', null)\n      tabIndex: 0\n      id: id\n    }\n    on: {\n      blur: ->\n        focus.value(false)\n        return\n    }\n    text: title or dvl.applyAlways(selection, label)\n  }).value()\n\n  updateScroll = ->\n    _data = data.value()\n    _selection = selection.value()\n    return unless _data\n    selectionIndex = _data.indexOf(_selection)\n    return if selectionIndex is -1\n    _menuCont = menuCont.node()\n    return if _menuCont.scrollHeight is 0\n    element = menuCont.selectAll('li')[0][selectionIndex]\n    _menuCont.scrollTop = 0\n    _menuCont.scrollTop = $(element).position().top\n    return\n\n  valueOut\n    .on('keydown', (->\n      _data = data.value()\n      return unless _data\n      _label = label.value()\n      return unless _label\n\n      keyCode = d3.event.which or d3.event.keyCode\n      # Do not block tab keys\n      if keyCode is 9 # tab = 9\n        menuOpen.value(false)\n        return\n\n      if keyCode in [38, 40] # up arrow = 38 | down arrow = 40\n        d3.event.stopPropagation()\n        d3.event.preventDefault()\n        if not menuOpen.value()\n          menuOpen.value(true)\n\n        ##increment selection\n\n        _selection = selection.value()\n        selectionIndex = _data.indexOf(_selection)\n        if selectionIndex is -1\n          if _selection is null\n            if _data.length\n              selection.value(_data[0])\n          else\n            throw \"selection was not found in data\"\n        else\n          if keyCode is 38 then selectionIndex-- else selectionIndex++\n          selectionIndex += _data.length #handles the case with the up arrow on the first element\n          selectionIndex %= _data.length\n          selection.value(_data[selectionIndex])\n          updateScroll()\n\n      if keyCode in [13, 27] # enter = 13, esc = 27\n        d3.event.stopPropagation()\n        d3.event.preventDefault()\n        menuOpen.value(false)\n\n      return\n    ), true) # Capture\n    .on('keypress', (->\n      _data = data.value()\n      return unless _data\n      _label = label.value()\n      return unless _label\n\n      keyCode = d3.event.which or d3.event.keyCode\n      userChar = String.fromCharCode(keyCode).toLowerCase()\n      if userChar and not (keyCode in [9, 38, 40, 13, 27])\n        for datum in _data\n          if datum and _label(datum).charAt(0).toLowerCase() is userChar\n            selection.value(datum)\n            updateScroll()\n            break\n\n      return\n    ), true) # Capture\n\n  dvl.register {\n    listen: [focus]\n    fn: ->\n      _focus = focus.value()\n      return unless _focus?\n      _valueOut = valueOut.node()\n      return if _focus is (_valueOut is document.activeElement)\n      setTimeout((-> # We need this defer because it seems that the blur of another element is called synchronously\n        if _focus then _valueOut.focus() else _valueOut.blur()\n        return\n      ), 0)\n      return\n  }\n\n  myOnSelect = (text, i) ->\n    menuOpen.value(false) unless keepOnClick\n    return onSelect?(text, i)\n\n  icons.forEach (icon) ->\n    icon_onSelect = icon.onSelect\n    icon.onSelect = (val, i) ->\n      menuOpen.value(false) unless keepOnClick\n      return icon_onSelect?(val, i)\n    return\n\n  menuCont = divCont.append('div')\n    .attr('class', 'menu-cont')\n    .style('position', 'absolute')\n    .style('z-index', 1000)\n\n  dvl.register {\n    listen: [menuOpen, menuAnchor]\n    fn: ->\n      _menuOpen = menuOpen.value()\n      if _menuOpen\n        menuCont\n          .style('display', null)\n          .style('top', '100%')\n\n        _menuAnchor = menuAnchor.value()\n        if _menuAnchor is 'left'\n          menuCont\n            .style('left', 0)\n            .style('right', null)\n        else\n          menuCont\n            .style('left', null)\n            .style('right', 0)\n      else\n        menuCont.style('display', 'none')\n      return\n  }\n\n  htmlModule.list {\n    parent: menuCont\n    classStr: 'list'\n    data\n    label\n    link\n    class: listClass\n    selection\n    selections\n    onSelect: myOnSelect\n    onEnter\n    onLeave\n    icons\n  }\n\n  namespace = dvl.namespace('dropdown')\n  d3.select(window)\n    .on(\"click.#{namespace}\", (->\n      target = d3.event.target\n      return if disabled.value()\n      return if $(menuCont.node()).find(target).length\n\n      if divCont.node() is target or $(divCont.node()).find(target).length\n        menuOpen.value(not menuOpen.value())\n      else\n        menuOpen.value(false)\n\n      return\n    ), true) # Use capture\n    .on(\"blur.#{namespace}\", ->\n      menuOpen.value(false)\n      return\n    )\n\n  dvl.register {\n    name: 'selection_updater'\n    listen: [selection, selectionLabel, title]\n    fn: ->\n      if title\n        titleText = title.value()\n      else\n        sel = selection.value()\n        selLabel = selectionLabel.value()\n        titleText = if selLabel then selLabel(sel) else ''\n\n      valueOut.property('value', titleText ? '')\n      return\n  }\n\n  return {\n    node: divCont.node()\n    menuCont: menuCont.node()\n    open: menuOpen\n    focus\n    selection\n    selections\n  }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n##-------------------------------------------------------\n##\n##  Select (dropdown box) made with HTML\n##\nhtmlModule.select = ({parent, data, classStr, value, label, selection, id, onChange, focus, visible}) ->\n  throw new Error('must have parent') unless parent\n  throw new Error('must have data') unless data\n  selection = dvl.wrapVar(selection, 'selection')\n  focus = dvl.wrapVar(focus ? false)\n  visible = dvl.wrap(visible ? true)\n\n  data = dvl.wrap(data)\n  value or= label\n  value = dvl.wrap(value or String)\n\n  selChange = ->\n    _data = data.value()\n    if _data\n      _data = _data.valueOf()\n      _selectEl = selectEl.value()\n      i = _selectEl.property('value')\n      val = _data[i]\n      return if onChange?(val) is false\n      selection.value(val)\n    else\n      selection.value(null)\n    return\n\n  selectEl = bindSingle {\n    parent\n    self: 'select'\n    attr: {\n      id\n      class: classStr\n    }\n    style: {\n      display: dvl.op.iff(visible, null, 'none')\n    }\n    on: {\n      change: selChange\n      focus: ->\n        focus.value(true)\n        return\n      blur: ->\n        focus.value(false)\n        return\n    }\n  }\n\n  bind {\n    parent: selectEl\n    self: 'option'\n    data\n    attr: {\n      value: (d,i) -> i\n    }\n    text: value\n  }\n\n  dvl.register {\n    listen: [data, selection]\n    fn: ->\n      _data = data.value()\n      _selection = selection.value()\n      return unless _data\n      _data = _data.valueOf()\n      idx = _data.indexOf(_selection)\n      _selectEl = selectEl.value()\n      if _selectEl.property('value') isnt idx\n        _selectEl.property('value', idx)\n      return\n  }\n\n  dvl.register {\n    listen: [selectEl, focus]\n    fn: ->\n      _selectEl = selectEl.value()\n      _focus = focus.value()\n      return unless _selectEl and _focus?\n      _selectEl = _selectEl.node()\n      return _focus is (_selectEl is document.activeElement)\n      if _focus\n        _selectEl.focus()\n      else\n        _selectEl.blur()\n      return\n  }\n\n  selChange()\n  return {\n    node: selectEl.value()\n    selection\n    focus\n  }\n\ndvl.compare = (acc, reverse) ->\n  acc = dvl.wrap(acc or dvl.identity)\n  reverse = dvl.wrap(reverse or false)\n  return dvl.apply {\n    args: [acc, reverse]\n    fn: (acc, reverse) ->\n      cmp = if reverse then d3.descending else d3.ascending\n      return (a, b) -> cmp(acc(a), acc(b))\n  }\n\n\n##-------------------------------------------------------\n##\n##  Table made with HTML\n##\n##  This module draws an HTML table that can be sorted\n##\n##  parent:      Where to append the table.\n## ~data:        The data displayed.\n##  classStr:    The class to add to the table.\n## ~rowClass:    The generator for row classes\n## ~visible:     Toggles the visibility of the table. [true]\n##  columns:     A list of columns to drive the table.\n##    column:\n##      id:               The id by which the column will be identified.\n##     ~title:            The title of the column header.\n##     ~headerTooltip:    The popup tool tip (title element text) of the column header.\n##      classStr:         The class given to the 'th' and 'td' elements in this column, if not specified will default to the id.\n##      cellClassGen:     The class generator for the cell\n##     ~cellClick:        The generator of click handlers\n##     ~value:            The value of the cell\n##      sortable:         Toggles wheather the column is sortable or not. [true]\n##     ~compare:          The generator that will drive the sorting, if not provided then gen will be used instead. [gen]\n##     ~compareModes:        ['none', 'up', 'down']\n##     ~hoverGen:         The generator for the (hover) title.\n##     ~showIndicator:    Toggle the display of the sorting indicator for this column. [true]\n##     ~reverseIndicator: Reverses the asc / desc directions of the indicator for this column. [false]\n##     ~visible:          Toggles the visibility of the column\n##     ~width:            The width of the column\n##\n##  sort:\n##   ~on:              The id of the column on which to sort.\n##   ~onIndicator:     The id of the column on which the indicator is palced (defaults to sort.on)\n##   ~order:           The order of the sort. Must be one of {'asc', 'desc', 'none'}.\n##   ~modes:           The order rotation that is allowed. Must be an array of [{'asc', 'desc', 'none'}].\n##   ~autoOnClick:     Toggle wheather the table will be sorted (updating sort.on and/or possibly sort.order) automaticaly when clicked. [true]\n##   ~indicator:       [true / false]\n##\n## ~showHeader:        Toggle showing the header [true]\n## ~onHeaderClick:     Callback or url when the header of a column is clicked.\n## ~headerTooltip:     The default herder tooltip (title element text).\n## ~rowLimit:          The maximum number of rows to show; if null all the rows are shown. [null]\n##\ndo ->\n  defaultCompareModes = ['up', 'down']\n\n  numberRegEx = /\\d+(?:\\.\\d+)?/\n  addPxIfNeeded = (str) ->\n    return null unless str?\n    return if numberRegEx.test(str) then str + 'px' else str\n\n  htmlModule.table = ({parent, headParent, data, sort, classStr, rowClass, rowLimit, columns, on:onRow}) ->\n    table = bindSingle {\n      parent\n      self: 'table'\n      attr: {\n        class: classStr\n      }\n    }\n\n    if headParent\n      headTable = bindSingle {\n        parent: headParent\n        self: 'table'\n        attr: {\n          class: (classStr ? '') + ' head'\n        }\n      }\n    else\n      headTable = table\n\n    sort or= {}\n    sortOn = dvl.wrapVar(sort.on)\n    sortDir = dvl.wrapVar(sort.dir)\n    sortOnIndicator = dvl.wrapVar(sort.onIndicator ? sortOn)\n\n    headerCol = []\n    bodyCol = []\n    compareMap = {}\n    compareList = [sortOn, sortDir]\n    for c in columns\n      if c.sortable\n        if c.compare?\n          comp = dvl.wrap(c.compare)\n        else\n          if c.ignoreCase\n            comp = dvl.compare(dvl.chain(c.value, (d) -> if d then d.toLowerCase() else d))\n          else\n            comp = dvl.compare(c.value)\n        compareMap[c.id] = comp\n        compareList.push comp\n\n        if not c.compareModes\n          c.compareModes = defaultCompareModes\n\n      headerCol.push {\n        id:       c.id\n        title:    c.title\n        class:    (c.class or '') + (if c.sortable then ' sortable' else '')\n        visible:  c.visible\n        tooltip:  c.headerTooltip\n        width:    c.width\n      }\n      bodyCol.push {\n        id:       c.id\n        class:    c.class\n        visible:  c.visible\n        value:    c.value\n        hover:    c.hover\n        render:   c.render\n        on:       c.on\n        width:    c.width\n      }\n\n    headerCol.forEach (c) ->\n      c.indicator = dvl.applyAlways [sortOn, sortDir], (_sortOn, _sortDir) ->\n        return if _sortOn is c.id then (_sortDir or 'none') else 'none'\n      return\n\n    compare = dvl(null)\n    dvl.register {\n      listen: compareList\n      change: [compare]\n      fn: ->\n        _sortOn = sortOn.value()\n        _sortDir = sortDir.value()\n\n        if _sortOn?\n          cmp = compareMap[_sortOn]?.value()\n          if cmp and _sortDir is 'down'\n            oldCmp = cmp\n            cmp = (a,b) -> oldCmp(b,a)\n          compare.value(cmp)\n        else\n          compare.value(null)\n        return\n    }\n\n    htmlModule.table.header {\n      parent: headTable\n      columns: headerCol\n      onClick: (id) ->\n        column = null\n        for c in columns\n          if c.id is id\n            column = c\n            break\n\n        return unless column and column.sortable\n\n        compareModes = column.compareModes\n        if id is sortOn.value()\n          sortDir.set(compareModes[(compareModes.indexOf(sortDir.value())+1) % compareModes.length])\n          dvl.notify(sortDir)\n        else\n          sortOn.set(id)\n          sortDir.set(compareModes[0])\n          dvl.notify(sortOn, sortDir)\n\n        return\n    }\n\n    htmlModule.table.body {\n      parent: table\n      classStr: 'data'\n      data\n      rowClass\n      rowLimit\n      columns: bodyCol\n      compare\n      on:      onRow\n    }\n\n    return {\n      node: table\n    }\n\n\n  ##-------------------------------------------------------\n  ##\n  ##  HTML table header (thead)\n  ##\n  ##  parent:      Where to append the table.\n  ## ~onClick:     The click handler\n  ##  columns:\n  ##   ~title:       The title of the column.\n  ##   ~class:       The class of the column\n  ##   ~tooltip:     The tooltip for the column\n  ##   ~visible:     Is this visible\n  ##   ~indicator:   The column indicator\n  ##   ~width:       The width of the column\n  ##\n  htmlModule.table.header = ({parent, columns, onClick}) ->\n    throw new Error('there needs to be a parent') unless parent\n    onClick = dvl.wrap(onClick)\n\n    thead = dvl.valueOf(parent).append('thead')\n    headerRow = thead.append('tr')\n\n    listen = [onClick]\n    newColumns = []\n    for c in columns\n      newColumns.push(nc = {\n        id:        c.id\n        title:     dvl.wrap(c.title)\n        class:     dvl.wrap(c.class)\n        visible:   dvl.wrap(c.visible ? true)\n        tooltip:   dvl.wrap(c.tooltip)\n        indicator: dvl.wrap(c.indicator) if c.indicator\n        width:     dvl.wrap(c.width)\n      })\n      listen.push nc.title, nc.class, nc.visible, nc.tooltip, nc.indicator, nc.width\n\n    columns = newColumns\n\n    # Init step\n    sel = headerRow.selectAll('th').data(columns)\n    enterTh = sel.enter().append('th')\n    enterLiner = enterTh.append('div')\n      .attr('class', 'liner')\n\n    enterLiner.append('span')\n    enterLiner.append('div')\n      .attr('class', 'indicator')\n      .style('display', 'none')\n\n    sel.exit().remove()\n\n    dvl.register {\n      name: 'header_render'\n      listen\n      fn: ->\n        for c,i in columns\n          sel = headerRow.select(\"th:nth-child(#{i+1})\")\n          visibleChanged = c.visible.hasChanged()\n          if c.visible.value()\n            sel.datum(c)\n\n            if c.class.hasChanged() or visibleChanged\n              sel.attr('class', c.class.value())\n\n            if c.tooltip.hasChanged() or visibleChanged\n              sel.attr('title', c.tooltip.value())\n\n            if c.width.hasChanged() or visibleChanged\n              w = addPxIfNeeded(c.width.value())\n              sel\n                .style('min-width', w)\n                .style('width', w)\n                .style('max-width', w)\n\n            if visibleChanged\n              sel.style('display', null)\n\n            if onClick.hasChanged() or visibleChanged\n              sel.on('click', (d) -> onClick.value()?(d.id))\n\n            if c.title.hasChanged() or visibleChanged\n              sel.select('span').text(c.title.value())\n\n            if c.indicator and (c.indicator.hasChanged() or visibleChanged)\n              _indicator = c.indicator.value()\n              ind = sel.select('div.indicator')\n              if _indicator\n                ind.style('display', null).attr('class', 'indicator ' + _indicator)\n              else\n                ind.style('display', 'none')\n          else\n            sel.style('display', 'none') if visibleChanged\n\n        return\n    }\n\n    return {\n      node: thead\n    }\n\n  ##-------------------------------------------------------\n  ##\n  ##  HTML table body (tbody)\n  ##\n  ##  parent:     Where to append the table.\n  ## ~data:       The data displayed.\n  ## ~compare:      The function to sort the data on\n  ## ~rowClass      The class of the row\n  ## ~rowLimit:     The maximum number of rows to show; if null all the rows are shown. [null]\n  ##  columns:\n  ##   ~value:      The value of the cell\n  ##   ~class:      The class of the column\n  ##   ~hover:      The hover\n  ##   ~visible:    This this column shown?\n  ##    on:         Whatever on events you want\n  ##   ~width:      The width of the column\n  ##\n  htmlModule.table.body = ({parent, data, compare, rowClass, classStr, rowLimit, columns, on:onRow}) ->\n    throw new Error('there needs to be a parent') unless parent\n    throw new Error('there needs to be data') unless data\n    tbody = dvl.valueOf(parent).append('tbody').attr('class', classStr)\n\n    compare = dvl.wrap(compare)\n    rowClass = dvl.wrap(rowClass) if rowClass?\n    rowLimit = dvl.wrap(rowLimit)\n    listen = [data, compare, rowClass, rowLimit]\n    change = []\n\n    onRowNew = {}\n    for k,v of onRow\n      v = dvl.wrap(v)\n      listen.push v\n      onRowNew[k] = v\n    onRow = onRowNew\n\n    newColumns = []\n    for c in columns\n      newColumns.push(nc = {\n        id:      c.id\n        class:   dvl.wrap(c.class)\n        visible: dvl.wrap(c.visible ? true)\n        hover:   dvl.wrap(c.hover)\n        value:   dvl.wrap(c.value)\n        width:   dvl.wrap(c.width)\n      })\n      # don't listen to value which is handled by the render\n      listen.push nc.class, nc.visible, nc.hover, nc.width\n\n      nc.render = c.render or 'text'\n\n      nc.on = {}\n      for k,v of c.on\n        v = dvl.wrap(v)\n        listen.push v\n        nc.on[k] = v\n\n      change.push(nc.selection = dvl().name(\"#{c.id}_selection\"))\n\n    columns = newColumns\n\n    dvl.register {\n      name: 'body_render'\n      listen\n      change\n      fn: ->\n        dataSorted = (data.value() or []).valueOf()\n\n        _compare = compare.value()\n        dataSorted = dataSorted.slice().sort(_compare) if _compare\n\n        _rowLimit = rowLimit.value()\n        dataSorted = dataSorted.slice(0, _rowLimit) if _rowLimit?\n\n        rowSel = tbody.selectAll('tr').data(dataSorted)\n        enterRowSel = rowSel.enter().append('tr')\n        rowSel.exit().remove()\n        if rowClass\n          _rowClass = rowClass.value()\n          rowSel.attr('class', _rowClass)\n\n        for k,v of onRow\n          rowSel.on(k, v.value())\n\n        colSel = rowSel.selectAll('td').data(columns)\n        colSel.enter().append('td')\n        colSel.exit().remove()\n\n        for c,i in columns\n          sel = tbody.selectAll(\"td:nth-child(#{i+1})\").data(dataSorted)\n          visibleChanged = c.visible.hasChanged() or data.hasChanged()\n          if c.visible.value()\n            if c.class.hasChanged() or visibleChanged\n              sel.attr('class', c.class.value())\n\n            if c.hover.hasChanged() or visibleChanged\n              sel.attr('title', c.hover.value())\n\n            if c.width.hasChanged() or visibleChanged\n              w = addPxIfNeeded(c.width.value())\n              sel\n                .style('min-width', w)\n                .style('width', w)\n                .style('max-width', w)\n\n            if visibleChanged\n              sel.style('display', null)\n\n            for k,v of c.on\n              sel.on(k, v.value()) if v.hasChanged() or visibleChanged\n\n            c.selection.set(sel).notify()\n          else\n            sel.style('display', 'none') if visibleChanged\n\n        return\n    }\n\n    for c in columns\n      render = if typeof c.render is 'function' then c.render else htmlModule.table.render[c.render]\n      render.call(c, c.selection, c.value)\n\n    return {\n      node: tbody\n    }\n\n\n  htmlModule.table.render = {\n    text: (selection, value) ->\n      dvl.register {\n        listen: [selection, value]\n        fn: ->\n          _selection = selection.value()\n          _value = value.value()\n          if _selection? and _value\n            _selection.text(_value)\n          return selection\n      }\n      return\n\n    html: (selection, value) ->\n      dvl.register {\n        listen: [selection, value]\n        fn: ->\n          _selection = selection.value()\n          _value = value.value()\n          if _selection? and _value\n            _selection.html(_value)\n          return selection\n      }\n      return\n\n\n    aLink: ({href}) -> (selection, value) ->\n      return bind {\n        parent: selection\n        self: 'a.link'\n        attr: {\n          href: href\n        }\n        text: value\n      }\n\n    img: (selection, value) ->\n      return bind {\n        parent: selection\n        self: 'img'\n        attr: {\n          src: value\n        }\n      }\n\n    imgDiv: (selection, value) ->\n      return bind {\n        parent: selection\n        self: 'div'\n        attr: {\n          class: value\n        }\n      }\n\n    button: ({classStr, on: onObj}) -> (selection, value) ->\n      return bind {\n        parent: selection\n        self: 'button'\n        attr: {\n          class: classStr\n        }\n        on: onObj\n        text: value\n      }\n\n    sparkline: ({width, height, x, y, padding}) ->\n      padding ?= 0\n      return (selection, value) ->\n        lineFn = dvl.apply {\n          args: [x, y, padding]\n          fn: (x, y, padding) -> (d) ->\n            sx = d3.scale.linear().domain(d3.extent(d, (d) -> d[x])).range([padding,  width - padding])\n            sy = d3.scale.linear().domain(d3.extent(d, (d) -> d[y])).range([height - padding, padding])\n            return d3.svg.line().x((dp) -> sx(dp[x])).y((dp) -> sy(dp[y]))(d)\n        }\n\n        dataFn = dvl.apply {\n          args: value\n          fn: (value) -> (d,i) -> [value(d,i)]\n        }\n\n        svg = bind {\n          parent: selection\n          self: 'svg.sparkline'\n          data: dataFn\n          attr: {\n            width\n            height\n          }\n        }\n\n        return bind {\n          parent: svg\n          self: 'path'\n          data: (d) -> [d]\n          attr: {\n            d: lineFn\n          }\n        }\n  }\n\n\nmodule.exports = htmlModule\n\n\n\n// WEBPACK FOOTER //\n// ./src/html.coffee","d3 = require 'd3'\n\ndvl = require './core'\n\n# misc # --------------------------------------------------\nmiscModule = {}\nmiscModule.mouse = (element, out) ->\n  element = dvl.wrap(element)\n  width   = dvl.wrap(width)\n  height  = dvl.wrap(height)\n  out     = dvl.wrapVar(out, 'mouse')\n\n  recorder = ->\n    _element = element.value()\n    mouse = if _element and d3.event then d3.mouse(_element.node()) else null\n    out.value(mouse)\n    return\n\n  element.value()\n    .on('mousemove', recorder)\n    .on('mouseout', recorder)\n\n  dvl.register {\n    name: 'mouse_recorder'\n    listen: element\n    change: out\n    fn: recorder\n  }\n\n  return out\n\n\nmiscModule.delay = (data, time = 1) ->\n  data = dvl.wrap(data)\n  time = dvl.wrap(time)\n  timer = null\n  out = dvl()\n\n  timeoutFn = ->\n    out.value(data.value())\n    timer = null\n    return\n\n  dvl.register {\n    listen: [data, time]\n    change: [out]\n    name: 'timeout'\n    fn: ->\n      clearTimeout(timer) if timer\n      timer = null\n      if time.value()?\n        t = Math.max(0, time.value())\n        timer = setTimeout(timeoutFn, t)\n      return\n  }\n  return out\n\n\nmodule.exports = miscModule\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc.coffee","dvl = require './core'\n\nmodule.exports = ({data, acc, value, trim, name}) ->\n  throw new Error('No data given') unless data\n  acc = dvl.wrap(acc or dvl.identity)\n  value = dvl.wrap(value)\n  trim = dvl.wrap(trim or false)\n  name or= 'snaped_data'\n\n  out = dvl(null).name(name)\n\n  updateSnap = ->\n    ds = data.value()\n    a = acc.value()\n    v = value.value()\n\n    if ds and a and v\n      ds = ds.valueOf()\n      if trim.value() and ds.length isnt 0 and (v < a(ds[0]) or a(ds[ds.length-1]) < v)\n        minIdx = -1\n      else\n        minIdx = -1\n        minDist = Infinity\n        if ds\n          for d,i in ds\n            dist = Math.abs(a(d) - v)\n            if dist < minDist\n              minDist = dist\n              minIdx = i\n\n      minDatum = if minIdx < 0 then null else ds[minIdx]\n      out.set(minDatum) unless out.value() is minDatum\n    else\n      out.set(null)\n\n    dvl.notify(out)\n\n  dvl.register({fn:updateSnap, listen:[data, acc, value, trim], change:[out], name:name+'_maker'})\n  return out\n\n\n\n// WEBPACK FOOTER //\n// ./src/snap.coffee","dvl = require './core'\n{ bind, bindSingle } = require './bind'\n\n# SVG\n\nclipId = 0\nsvgModule = {}\nsvgModule.clipPath = ({parent, x, y, width, height}) ->\n  x = dvl.wrap(x or 0)\n  y = dvl.wrap(y or 0)\n\n  clipId++\n  myId = \"cp#{clipId}\"\n  cp = dvl.valueOf(parent)\n    .append('defs')\n      .append('clipPath')\n      .attr('id', myId)\n\n  bind {\n    parent: cp\n    self: 'rect'\n    attr: {\n      x\n      y\n      width\n      height\n    }\n  }\n\n  return \"url(##{myId})\"\n\n\nmodule.exports = svgModule\n\n\n\n// WEBPACK FOOTER //\n// ./src/svg.coffee","function lift(fn) {\n  var fn = arguments[0];\n  if ('function' !== typeof fn) throw new TypeError();\n\n  return function(/* args: to fn */) {\n    var args = Array.prototype.slice.call(arguments),\n        n = args.length,\n        i;\n\n    for (i = 0; i < n; i++) {\n      if ('function' === typeof args[i]) {\n        return function(/* args2 to function wrapper */) {\n          var args2 = Array.prototype.slice.call(arguments),\n              reduced = [],\n              i, v;\n\n          for (i = 0; i < n; i++) {\n            v = args[i];\n            reduced.push('function' === typeof v ? v.apply(this, args2) : v);\n          }\n\n          return fn.apply(null, reduced);\n        };\n      }\n    }\n\n    // Fell through so there are no functions in the arguments to fn -> call it!\n    return fn.apply(null, args);\n  };\n}\n\nif (typeof module !== 'undefined') {\n  module.exports = lift;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/lift.js","class PriorityQueue\n  constructor: (@key) ->\n    @nodes_ = []\n\n  length: ->\n    return @nodes_.length\n\n  push: (node) ->\n    nodes = @nodes_\n    nodes.push(node)\n    @moveUp_(nodes.length - 1)\n    return this\n\n  shift: ->\n    nodes = @nodes_\n    count = nodes.length\n    rootNode = nodes[0]\n    if count <= 0\n      return undefined\n    else if count is 1\n      nodes.pop()\n    else\n      nodes[0] = nodes.pop()\n      @moveDown_(0)\n\n    return rootNode\n\n  moveDown_: (index) ->\n    nodes = @nodes_\n    key = @key\n    count = nodes.length\n\n    # Save the node being moved down.\n    node = nodes[index]\n    # While the current node has a child.\n    while index < (count >> 1)\n      leftChildIndex = index * 2 + 1\n      rightChildIndex = leftChildIndex + 1 # index * 2 + 2\n\n      # Determine the index of the smaller child.\n      smallerChildIndex = if rightChildIndex < count and nodes[rightChildIndex][key] < nodes[leftChildIndex][key] then rightChildIndex else leftChildIndex\n\n      # If the node being moved down is smaller than its children, the node\n      # has found the correct index it should be at.\n      break if nodes[smallerChildIndex][key] > node[key]\n\n      # If not, then take the smaller child as the current node.\n      nodes[index] = nodes[smallerChildIndex]\n      index = smallerChildIndex\n\n    nodes[index] = node\n    return\n\n  moveUp_: (index) ->\n    nodes = @nodes_\n    key = @key\n    node = nodes[index]\n\n    # While the node being moved up is not at the root.\n    while index > 0\n      # If the parent is less than the node being moved up, move the parent down.\n      parentIndex = (index - 1) >> 1\n      if (nodes[parentIndex][key] > node[key])\n        nodes[index] = nodes[parentIndex]\n        index = parentIndex\n      else\n        break\n\n    nodes[index] = node\n    return\n\n\nmodule.exports = PriorityQueue\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/dataStructure/priorityQueue.coffee","class Set\n  constructor: ->\n    @map = {}\n    @len = 0\n\n  valueOf: -> @map\n\n  length: -> @len\n\n  add: (obj) ->\n    if not @map.hasOwnProperty(obj.id)\n      @map[obj.id] = obj\n      @len++\n    return this\n\n  remove: (obj) ->\n    if @map.hasOwnProperty(obj.id)\n      delete @map[obj.id]\n      @len--\n    return this\n\n\nmodule.exports = Set\n\n\n\n// WEBPACK FOOTER //\n// ./src/dataStructure/set.coffee","dvl = require './core'\ndvl.d3 = require 'd3'\ndvl.async = require './async'\n{ bind, bindSingle } = require('./bind')\ndvl.bind = bind\ndvl.bindSingle = bindSingle\ndvl.html = require './html'\ndvl.svg = require './svg'\ndvl.snap = require './snap'\ndvl.misc = require './misc'\ndvl.util = require './util'\n\nmodule.exports = dvl\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.coffee"],"sourceRoot":""}